{"version":3,"file":"static/js/190.87373c34.chunk.js","mappings":"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","sources":["../node_modules/@firebase/util/src/constants.ts","../node_modules/@firebase/util/src/assert.ts","../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/deepCopy.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/global.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/emulator.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/json.ts","../node_modules/@firebase/util/src/jwt.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/query.ts","../node_modules/@firebase/util/src/sha1.ts","../node_modules/@firebase/util/src/subscribe.ts","../node_modules/@firebase/util/src/validation.ts","../node_modules/@firebase/util/src/utf8.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/exenv/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/property-expr/index.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-modal/lib/components/Modal.js","../node_modules/react-modal/lib/components/ModalPortal.js","../node_modules/react-modal/lib/helpers/ariaAppHider.js","../node_modules/react-modal/lib/helpers/bodyTrap.js","../node_modules/react-modal/lib/helpers/classList.js","../node_modules/react-modal/lib/helpers/focusManager.js","../node_modules/react-modal/lib/helpers/portalOpenInstances.js","../node_modules/react-modal/lib/helpers/safeHTMLElement.js","../node_modules/react-modal/lib/helpers/scopeTab.js","../node_modules/react-modal/lib/helpers/tabbable.js","../node_modules/react-modal/lib/index.js","../node_modules/tiny-case/index.js","../node_modules/toposort/index.js","../node_modules/warning/warning.js","../node_modules/yup/index.esm.js","../node_modules/@firebase/app/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/app/node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/logger/src/logger.ts","../node_modules/firebase/app/index.ts","../node_modules/@firebase/auth/src/core/errors.ts","../node_modules/@firebase/auth/src/core/util/log.ts","../node_modules/@firebase/auth/src/core/util/assert.ts","../node_modules/@firebase/auth/src/core/util/location.ts","../node_modules/@firebase/auth/src/core/util/delay.ts","../node_modules/@firebase/auth/src/core/util/navigator.ts","../node_modules/@firebase/auth/src/core/util/emulator.ts","../node_modules/@firebase/auth/src/core/util/fetch_provider.ts","../node_modules/@firebase/auth/src/api/errors.ts","../node_modules/@firebase/auth/src/api/index.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha.ts","../node_modules/@firebase/auth/src/api/authentication/recaptcha.ts","../node_modules/@firebase/auth/src/api/account_management/account.ts","../node_modules/@firebase/auth/src/core/util/time.ts","../node_modules/@firebase/auth/src/core/user/id_token_result.ts","../node_modules/@firebase/auth/src/core/user/invalidation.ts","../node_modules/@firebase/auth/src/core/user/proactive_refresh.ts","../node_modules/@firebase/auth/src/core/user/user_metadata.ts","../node_modules/@firebase/auth/src/core/user/reload.ts","../node_modules/@firebase/auth/src/api/authentication/token.ts","../node_modules/@firebase/auth/src/core/user/token_manager.ts","../node_modules/@firebase/auth/src/core/user/user_impl.ts","../node_modules/@firebase/auth/src/core/util/instantiator.ts","../node_modules/@firebase/auth/src/core/persistence/in_memory.ts","../node_modules/@firebase/auth/src/core/persistence/persistence_user_manager.ts","../node_modules/@firebase/auth/src/core/util/browser.ts","../node_modules/@firebase/auth/src/core/util/version.ts","../node_modules/@firebase/auth/src/core/auth/middleware.ts","../node_modules/@firebase/auth/src/api/password_policy/get_password_policy.ts","../node_modules/@firebase/auth/src/core/auth/password_policy_impl.ts","../node_modules/@firebase/auth/src/core/auth/auth_impl.ts","../node_modules/@firebase/auth/src/platform_browser/load_js.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_enterprise_verifier.ts","../node_modules/@firebase/auth/src/core/auth/initialize.ts","../node_modules/@firebase/auth/src/core/auth/emulator.ts","../node_modules/@firebase/auth/src/core/credentials/auth_credential.ts","../node_modules/@firebase/auth/src/api/account_management/email_and_password.ts","../node_modules/@firebase/auth/src/api/authentication/email_and_password.ts","../node_modules/@firebase/auth/src/api/authentication/email_link.ts","../node_modules/@firebase/auth/src/core/credentials/email.ts","../node_modules/@firebase/auth/src/api/authentication/idp.ts","../node_modules/@firebase/auth/src/core/credentials/oauth.ts","../node_modules/@firebase/auth/src/api/authentication/sms.ts","../node_modules/@firebase/auth/src/core/credentials/phone.ts","../node_modules/@firebase/auth/src/core/action_code_url.ts","../node_modules/@firebase/auth/src/core/providers/email.ts","../node_modules/@firebase/auth/src/core/providers/federated.ts","../node_modules/@firebase/auth/src/core/providers/oauth.ts","../node_modules/@firebase/auth/src/core/providers/facebook.ts","../node_modules/@firebase/auth/src/core/providers/google.ts","../node_modules/@firebase/auth/src/core/providers/github.ts","../node_modules/@firebase/auth/src/core/credentials/saml.ts","../node_modules/@firebase/auth/src/core/providers/twitter.ts","../node_modules/@firebase/auth/src/api/authentication/sign_up.ts","../node_modules/@firebase/auth/src/core/user/user_credential_impl.ts","../node_modules/@firebase/auth/src/core/strategies/anonymous.ts","../node_modules/@firebase/auth/src/mfa/mfa_error.ts","../node_modules/@firebase/auth/src/core/user/link_unlink.ts","../node_modules/@firebase/auth/src/core/user/reauthenticate.ts","../node_modules/@firebase/auth/src/core/strategies/credential.ts","../node_modules/@firebase/auth/src/core/strategies/email_and_password.ts","../node_modules/@firebase/auth/src/core/index.ts","../node_modules/@firebase/auth/src/api/account_management/mfa.ts","../node_modules/@firebase/auth/src/mfa/mfa_user.ts","../node_modules/@firebase/auth/src/core/persistence/index.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/browser.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/local_storage.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/session_storage.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/promise.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/receiver.ts","../node_modules/@firebase/auth/src/core/util/event_id.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/sender.ts","../node_modules/@firebase/auth/src/platform_browser/auth_window.ts","../node_modules/@firebase/auth/src/platform_browser/util/worker.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/indexed_db.ts","../node_modules/@firebase/auth/src/api/authentication/mfa.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_loader.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_verifier.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/phone.ts","../node_modules/@firebase/auth/src/platform_browser/providers/phone.ts","../node_modules/@firebase/auth/src/core/util/resolver.ts","../node_modules/@firebase/auth/src/core/strategies/idp.ts","../node_modules/@firebase/auth/src/core/strategies/abstract_popup_redirect_operation.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/popup.ts","../node_modules/@firebase/auth/src/core/strategies/redirect.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/redirect.ts","../node_modules/@firebase/auth/src/core/auth/auth_event_manager.ts","../node_modules/@firebase/auth/src/api/project_config/get_project_config.ts","../node_modules/@firebase/auth/src/core/util/validate_origin.ts","../node_modules/@firebase/auth/src/platform_browser/iframe/gapi.ts","../node_modules/@firebase/auth/src/platform_browser/iframe/iframe.ts","../node_modules/@firebase/auth/src/platform_browser/util/popup.ts","../node_modules/@firebase/auth/src/core/util/handler.ts","../node_modules/@firebase/auth/src/platform_browser/popup_redirect.ts","../node_modules/@firebase/auth/src/mfa/mfa_assertion.ts","../node_modules/@firebase/auth/src/platform_browser/mfa/assertions/phone.ts","../node_modules/@firebase/auth/src/mfa/assertions/totp.ts","../node_modules/@firebase/auth/src/core/auth/firebase_internal.ts","../node_modules/@firebase/auth/src/platform_browser/index.ts","../node_modules/@firebase/auth/src/core/auth/register.ts","../node_modules/@firebase/database/src/core/version.ts","../node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","../node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","../node_modules/@firebase/database/src/core/storage/storage.ts","../node_modules/@firebase/database/src/core/util/util.ts","../node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","../node_modules/@firebase/database/src/core/AuthTokenProvider.ts","../node_modules/@firebase/database/src/realtime/Constants.ts","../node_modules/@firebase/database/src/core/RepoInfo.ts","../node_modules/@firebase/database/src/core/stats/StatsCollection.ts","../node_modules/@firebase/database/src/core/stats/StatsManager.ts","../node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","../node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","../node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","../node_modules/@firebase/database/src/realtime/TransportManager.ts","../node_modules/@firebase/database/src/realtime/Connection.ts","../node_modules/@firebase/database/src/core/ServerActions.ts","../node_modules/@firebase/database/src/core/util/EventEmitter.ts","../node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","../node_modules/@firebase/database/src/core/util/Path.ts","../node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","../node_modules/@firebase/database/src/core/PersistentConnection.ts","../node_modules/@firebase/database/src/core/snap/Node.ts","../node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","../node_modules/@firebase/database/src/core/snap/indexes/Index.ts","../node_modules/@firebase/database/src/core/util/SortedMap.ts","../node_modules/@firebase/database/src/core/snap/snap.ts","../node_modules/@firebase/database/src/core/snap/comparators.ts","../node_modules/@firebase/database/src/core/snap/LeafNode.ts","../node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","../node_modules/@firebase/database/src/core/snap/IndexMap.ts","../node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","../node_modules/@firebase/database/src/core/snap/childSet.ts","../node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","../node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","../node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","../node_modules/@firebase/database/src/core/view/Change.ts","../node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","../node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","../node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","../node_modules/@firebase/database/src/core/view/QueryParams.ts","../node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","../node_modules/@firebase/database/src/core/SnapshotHolder.ts","../node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","../node_modules/@firebase/database/src/core/stats/StatsListener.ts","../node_modules/@firebase/database/src/core/operation/Operation.ts","../node_modules/@firebase/database/src/core/stats/StatsReporter.ts","../node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","../node_modules/@firebase/database/src/core/util/ImmutableTree.ts","../node_modules/@firebase/database/src/core/operation/ListenComplete.ts","../node_modules/@firebase/database/src/core/operation/Overwrite.ts","../node_modules/@firebase/database/src/core/operation/Merge.ts","../node_modules/@firebase/database/src/core/view/CacheNode.ts","../node_modules/@firebase/database/src/core/view/EventGenerator.ts","../node_modules/@firebase/database/src/core/view/ViewCache.ts","../node_modules/@firebase/database/src/core/CompoundWrite.ts","../node_modules/@firebase/database/src/core/WriteTree.ts","../node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","../node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","../node_modules/@firebase/database/src/core/view/ViewProcessor.ts","../node_modules/@firebase/database/src/core/view/View.ts","../node_modules/@firebase/database/src/core/SyncPoint.ts","../node_modules/@firebase/database/src/core/SyncTree.ts","../node_modules/@firebase/database/src/core/util/ServerValues.ts","../node_modules/@firebase/database/src/core/util/Tree.ts","../node_modules/@firebase/database/src/core/util/validation.ts","../node_modules/@firebase/database/src/core/view/EventQueue.ts","../node_modules/@firebase/database/src/core/Repo.ts","../node_modules/@firebase/database/src/core/util/libs/parser.ts","../node_modules/@firebase/database/src/core/util/NextPushId.ts","../node_modules/@firebase/database/src/core/view/Event.ts","../node_modules/@firebase/database/src/core/view/EventRegistration.ts","../node_modules/@firebase/database/src/api/Reference_impl.ts","../node_modules/@firebase/database/src/api/Database.ts","../node_modules/@firebase/database/src/api/test_access.ts","../node_modules/@firebase/database/src/register.ts","../node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","../node_modules/react-hook-form/src/utils/isDateObject.ts","../node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","../node_modules/react-hook-form/src/utils/isObject.ts","../node_modules/react-hook-form/src/logic/getEventValue.ts","../node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","../node_modules/react-hook-form/src/logic/getNodeParentName.ts","../node_modules/react-hook-form/src/utils/isWeb.ts","../node_modules/react-hook-form/src/utils/cloneObject.ts","../node_modules/react-hook-form/src/utils/isPlainObject.ts","../node_modules/react-hook-form/src/utils/compact.ts","../node_modules/react-hook-form/src/utils/isUndefined.ts","../node_modules/react-hook-form/src/utils/get.ts","../node_modules/react-hook-form/src/utils/isBoolean.ts","../node_modules/react-hook-form/src/constants.ts","../node_modules/react-hook-form/src/logic/getProxyFormState.ts","../node_modules/react-hook-form/src/useFormContext.tsx","../node_modules/react-hook-form/src/utils/isEmptyObject.ts","../node_modules/react-hook-form/src/logic/shouldRenderFormState.ts","../node_modules/react-hook-form/src/utils/convertToArrayPayload.ts","../node_modules/react-hook-form/src/useSubscribe.ts","../node_modules/react-hook-form/src/utils/isString.ts","../node_modules/react-hook-form/src/logic/generateWatchOutput.ts","../node_modules/react-hook-form/src/utils/isKey.ts","../node_modules/react-hook-form/src/utils/stringToPath.ts","../node_modules/react-hook-form/src/utils/set.ts","../node_modules/react-hook-form/src/logic/appendErrors.ts","../node_modules/react-hook-form/src/logic/getValidationModes.ts","../node_modules/react-hook-form/src/logic/isWatched.ts","../node_modules/react-hook-form/src/logic/iterateFieldsByAction.ts","../node_modules/react-hook-form/src/logic/updateFieldArrayRootError.ts","../node_modules/react-hook-form/src/utils/isFileInput.ts","../node_modules/react-hook-form/src/utils/isFunction.ts","../node_modules/react-hook-form/src/utils/isHTMLElement.ts","../node_modules/react-hook-form/src/utils/isMessage.ts","../node_modules/react-hook-form/src/utils/isRadioInput.ts","../node_modules/react-hook-form/src/utils/isRegex.ts","../node_modules/react-hook-form/src/logic/getCheckboxValue.ts","../node_modules/react-hook-form/src/logic/getRadioValue.ts","../node_modules/react-hook-form/src/logic/getValidateError.ts","../node_modules/react-hook-form/src/logic/getValueAndMessage.ts","../node_modules/react-hook-form/src/logic/validateField.ts","../node_modules/react-hook-form/src/utils/unset.ts","../node_modules/react-hook-form/src/utils/createSubject.ts","../node_modules/react-hook-form/src/utils/isPrimitive.ts","../node_modules/react-hook-form/src/utils/deepEqual.ts","../node_modules/react-hook-form/src/utils/isMultipleSelect.ts","../node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","../node_modules/react-hook-form/src/utils/live.ts","../node_modules/react-hook-form/src/utils/objectHasFunction.ts","../node_modules/react-hook-form/src/logic/getDirtyFields.ts","../node_modules/react-hook-form/src/logic/getFieldValueAs.ts","../node_modules/react-hook-form/src/logic/getFieldValue.ts","../node_modules/react-hook-form/src/logic/getResolverOptions.ts","../node_modules/react-hook-form/src/logic/getRuleValue.ts","../node_modules/react-hook-form/src/logic/hasValidation.ts","../node_modules/react-hook-form/src/logic/schemaErrorLookup.ts","../node_modules/react-hook-form/src/logic/skipValidation.ts","../node_modules/react-hook-form/src/logic/unsetEmptyArray.ts","../node_modules/react-hook-form/src/logic/createFormControl.ts","../node_modules/react-hook-form/src/useForm.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\n */\n'use strict'\n\nfunction Cache(maxSize) {\n  this._maxSize = maxSize\n  this.clear()\n}\nCache.prototype.clear = function () {\n  this._size = 0\n  this._values = Object.create(null)\n}\nCache.prototype.get = function (key) {\n  return this._values[key]\n}\nCache.prototype.set = function (key, value) {\n  this._size >= this._maxSize && this.clear()\n  if (!(key in this._values)) this._size++\n\n  return (this._values[key] = value)\n}\n\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\n  DIGIT_REGEX = /^\\d+$/,\n  LEAD_DIGIT_REGEX = /^\\d/,\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\n  MAX_CACHE_SIZE = 512\n\nvar pathCache = new Cache(MAX_CACHE_SIZE),\n  setCache = new Cache(MAX_CACHE_SIZE),\n  getCache = new Cache(MAX_CACHE_SIZE)\n\nvar config\n\nmodule.exports = {\n  Cache: Cache,\n\n  split: split,\n\n  normalizePath: normalizePath,\n\n  setter: function (path) {\n    var parts = normalizePath(path)\n\n    return (\n      setCache.get(path) ||\n      setCache.set(path, function setter(obj, value) {\n        var index = 0\n        var len = parts.length\n        var data = obj\n\n        while (index < len - 1) {\n          var part = parts[index]\n          if (\n            part === '__proto__' ||\n            part === 'constructor' ||\n            part === 'prototype'\n          ) {\n            return obj\n          }\n\n          data = data[parts[index++]]\n        }\n        data[parts[index]] = value\n      })\n    )\n  },\n\n  getter: function (path, safe) {\n    var parts = normalizePath(path)\n    return (\n      getCache.get(path) ||\n      getCache.set(path, function getter(data) {\n        var index = 0,\n          len = parts.length\n        while (index < len) {\n          if (data != null || !safe) data = data[parts[index++]]\n          else return\n        }\n        return data\n      })\n    )\n  },\n\n  join: function (segments) {\n    return segments.reduce(function (path, part) {\n      return (\n        path +\n        (isQuoted(part) || DIGIT_REGEX.test(part)\n          ? '[' + part + ']'\n          : (path ? '.' : '') + part)\n      )\n    }, '')\n  },\n\n  forEach: function (path, cb, thisArg) {\n    forEach(Array.isArray(path) ? path : split(path), cb, thisArg)\n  },\n}\n\nfunction normalizePath(path) {\n  return (\n    pathCache.get(path) ||\n    pathCache.set(\n      path,\n      split(path).map(function (part) {\n        return part.replace(CLEAN_QUOTES_REGEX, '$2')\n      })\n    )\n  )\n}\n\nfunction split(path) {\n  return path.match(SPLIT_REGEX) || ['']\n}\n\nfunction forEach(parts, iter, thisArg) {\n  var len = parts.length,\n    part,\n    idx,\n    isArray,\n    isBracket\n\n  for (idx = 0; idx < len; idx++) {\n    part = parts[idx]\n\n    if (part) {\n      if (shouldBeQuoted(part)) {\n        part = '\"' + part + '\"'\n      }\n\n      isBracket = isQuoted(part)\n      isArray = !isBracket && /^\\d+$/.test(part)\n\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\n    }\n  }\n}\n\nfunction isQuoted(str) {\n  return (\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\n  )\n}\n\nfunction hasLeadingNumber(part) {\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\n}\n\nfunction hasSpecialChars(part) {\n  return SPEC_CHAR_REGEX.test(part)\n}\n\nfunction shouldBeQuoted(part) {\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bodyOpenClassName = exports.portalClassName = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ModalPortal = require(\"./ModalPortal\");\n\nvar _ModalPortal2 = _interopRequireDefault(_ModalPortal);\n\nvar _ariaAppHider = require(\"../helpers/ariaAppHider\");\n\nvar ariaAppHider = _interopRequireWildcard(_ariaAppHider);\n\nvar _safeHTMLElement = require(\"../helpers/safeHTMLElement\");\n\nvar _safeHTMLElement2 = _interopRequireDefault(_safeHTMLElement);\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar portalClassName = exports.portalClassName = \"ReactModalPortal\";\nvar bodyOpenClassName = exports.bodyOpenClassName = \"ReactModal__Body--open\";\n\nvar isReact16 = _safeHTMLElement.canUseDOM && _reactDom2.default.createPortal !== undefined;\n\nvar createHTMLElement = function createHTMLElement(name) {\n  return document.createElement(name);\n};\n\nvar getCreatePortal = function getCreatePortal() {\n  return isReact16 ? _reactDom2.default.createPortal : _reactDom2.default.unstable_renderSubtreeIntoContainer;\n};\n\nfunction getParentElement(parentSelector) {\n  return parentSelector();\n}\n\nvar Modal = function (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.removePortal = function () {\n      !isReact16 && _reactDom2.default.unmountComponentAtNode(_this.node);\n      var parent = getParentElement(_this.props.parentSelector);\n      if (parent && parent.contains(_this.node)) {\n        parent.removeChild(_this.node);\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('React-Modal: \"parentSelector\" prop did not returned any DOM ' + \"element. Make sure that the parent element is unmounted to \" + \"avoid any memory leaks.\");\n      }\n    }, _this.portalRef = function (ref) {\n      _this.portal = ref;\n    }, _this.renderPortal = function (props) {\n      var createPortal = getCreatePortal();\n      var portal = createPortal(_this, _react2.default.createElement(_ModalPortal2.default, _extends({ defaultStyles: Modal.defaultStyles }, props)), _this.node);\n      _this.portalRef(portal);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!_safeHTMLElement.canUseDOM) return;\n\n      if (!isReact16) {\n        this.node = createHTMLElement(\"div\");\n      }\n      this.node.className = this.props.portalClassName;\n\n      var parent = getParentElement(this.props.parentSelector);\n      parent.appendChild(this.node);\n\n      !isReact16 && this.renderPortal(this.props);\n    }\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps) {\n      var prevParent = getParentElement(prevProps.parentSelector);\n      var nextParent = getParentElement(this.props.parentSelector);\n      return { prevParent: prevParent, nextParent: nextParent };\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, _, snapshot) {\n      if (!_safeHTMLElement.canUseDOM) return;\n      var _props = this.props,\n          isOpen = _props.isOpen,\n          portalClassName = _props.portalClassName;\n\n\n      if (prevProps.portalClassName !== portalClassName) {\n        this.node.className = portalClassName;\n      }\n\n      var prevParent = snapshot.prevParent,\n          nextParent = snapshot.nextParent;\n\n      if (nextParent !== prevParent) {\n        prevParent.removeChild(this.node);\n        nextParent.appendChild(this.node);\n      }\n\n      // Stop unnecessary renders if modal is remaining closed\n      if (!prevProps.isOpen && !isOpen) return;\n\n      !isReact16 && this.renderPortal(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!_safeHTMLElement.canUseDOM || !this.node || !this.portal) return;\n\n      var state = this.portal.state;\n      var now = Date.now();\n      var closesAt = state.isOpen && this.props.closeTimeoutMS && (state.closesAt || now + this.props.closeTimeoutMS);\n\n      if (closesAt) {\n        if (!state.beforeClose) {\n          this.portal.closeWithTimeout();\n        }\n\n        setTimeout(this.removePortal, closesAt - now);\n      } else {\n        this.removePortal();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!_safeHTMLElement.canUseDOM || !isReact16) {\n        return null;\n      }\n\n      if (!this.node && isReact16) {\n        this.node = createHTMLElement(\"div\");\n      }\n\n      var createPortal = getCreatePortal();\n      return createPortal(_react2.default.createElement(_ModalPortal2.default, _extends({\n        ref: this.portalRef,\n        defaultStyles: Modal.defaultStyles\n      }, this.props)), this.node);\n    }\n  }], [{\n    key: \"setAppElement\",\n    value: function setAppElement(element) {\n      ariaAppHider.setElement(element);\n    }\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /* eslint-enable react/no-unused-prop-types */\n\n  }]);\n\n  return Modal;\n}(_react.Component);\n\nModal.propTypes = {\n  isOpen: _propTypes2.default.bool.isRequired,\n  style: _propTypes2.default.shape({\n    content: _propTypes2.default.object,\n    overlay: _propTypes2.default.object\n  }),\n  portalClassName: _propTypes2.default.string,\n  bodyOpenClassName: _propTypes2.default.string,\n  htmlOpenClassName: _propTypes2.default.string,\n  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n    base: _propTypes2.default.string.isRequired,\n    afterOpen: _propTypes2.default.string.isRequired,\n    beforeClose: _propTypes2.default.string.isRequired\n  })]),\n  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n    base: _propTypes2.default.string.isRequired,\n    afterOpen: _propTypes2.default.string.isRequired,\n    beforeClose: _propTypes2.default.string.isRequired\n  })]),\n  appElement: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_safeHTMLElement2.default), _propTypes2.default.instanceOf(_safeHTMLElement.SafeHTMLCollection), _propTypes2.default.instanceOf(_safeHTMLElement.SafeNodeList), _propTypes2.default.arrayOf(_propTypes2.default.instanceOf(_safeHTMLElement2.default))]),\n  onAfterOpen: _propTypes2.default.func,\n  onRequestClose: _propTypes2.default.func,\n  closeTimeoutMS: _propTypes2.default.number,\n  ariaHideApp: _propTypes2.default.bool,\n  shouldFocusAfterRender: _propTypes2.default.bool,\n  shouldCloseOnOverlayClick: _propTypes2.default.bool,\n  shouldReturnFocusAfterClose: _propTypes2.default.bool,\n  preventScroll: _propTypes2.default.bool,\n  parentSelector: _propTypes2.default.func,\n  aria: _propTypes2.default.object,\n  data: _propTypes2.default.object,\n  role: _propTypes2.default.string,\n  contentLabel: _propTypes2.default.string,\n  shouldCloseOnEsc: _propTypes2.default.bool,\n  overlayRef: _propTypes2.default.func,\n  contentRef: _propTypes2.default.func,\n  id: _propTypes2.default.string,\n  overlayElement: _propTypes2.default.func,\n  contentElement: _propTypes2.default.func\n};\nModal.defaultProps = {\n  isOpen: false,\n  portalClassName: portalClassName,\n  bodyOpenClassName: bodyOpenClassName,\n  role: \"dialog\",\n  ariaHideApp: true,\n  closeTimeoutMS: 0,\n  shouldFocusAfterRender: true,\n  shouldCloseOnEsc: true,\n  shouldCloseOnOverlayClick: true,\n  shouldReturnFocusAfterClose: true,\n  preventScroll: false,\n  parentSelector: function parentSelector() {\n    return document.body;\n  },\n  overlayElement: function overlayElement(props, contentEl) {\n    return _react2.default.createElement(\n      \"div\",\n      props,\n      contentEl\n    );\n  },\n  contentElement: function contentElement(props, children) {\n    return _react2.default.createElement(\n      \"div\",\n      props,\n      children\n    );\n  }\n};\nModal.defaultStyles = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(255, 255, 255, 0.75)\"\n  },\n  content: {\n    position: \"absolute\",\n    top: \"40px\",\n    left: \"40px\",\n    right: \"40px\",\n    bottom: \"40px\",\n    border: \"1px solid #ccc\",\n    background: \"#fff\",\n    overflow: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    borderRadius: \"4px\",\n    outline: \"none\",\n    padding: \"20px\"\n  }\n};\n\n\n(0, _reactLifecyclesCompat.polyfill)(Modal);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Modal.setCreateHTMLElement = function (fn) {\n    return createHTMLElement = fn;\n  };\n}\n\nexports.default = Modal;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _focusManager = require(\"../helpers/focusManager\");\n\nvar focusManager = _interopRequireWildcard(_focusManager);\n\nvar _scopeTab = require(\"../helpers/scopeTab\");\n\nvar _scopeTab2 = _interopRequireDefault(_scopeTab);\n\nvar _ariaAppHider = require(\"../helpers/ariaAppHider\");\n\nvar ariaAppHider = _interopRequireWildcard(_ariaAppHider);\n\nvar _classList = require(\"../helpers/classList\");\n\nvar classList = _interopRequireWildcard(_classList);\n\nvar _safeHTMLElement = require(\"../helpers/safeHTMLElement\");\n\nvar _safeHTMLElement2 = _interopRequireDefault(_safeHTMLElement);\n\nvar _portalOpenInstances = require(\"../helpers/portalOpenInstances\");\n\nvar _portalOpenInstances2 = _interopRequireDefault(_portalOpenInstances);\n\nrequire(\"../helpers/bodyTrap\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// so that our CSS is statically analyzable\nvar CLASS_NAMES = {\n  overlay: \"ReactModal__Overlay\",\n  content: \"ReactModal__Content\"\n};\n\n/**\n * We need to support the deprecated `KeyboardEvent.keyCode` in addition to\n * `KeyboardEvent.code` for apps that still support IE11. Can be removed when\n * `react-modal` only supports React >18 (which dropped IE support).\n */\nvar isTabKey = function isTabKey(event) {\n  return event.code === \"Tab\" || event.keyCode === 9;\n};\nvar isEscKey = function isEscKey(event) {\n  return event.code === \"Escape\" || event.keyCode === 27;\n};\n\nvar ariaHiddenInstances = 0;\n\nvar ModalPortal = function (_Component) {\n  _inherits(ModalPortal, _Component);\n\n  function ModalPortal(props) {\n    _classCallCheck(this, ModalPortal);\n\n    var _this = _possibleConstructorReturn(this, (ModalPortal.__proto__ || Object.getPrototypeOf(ModalPortal)).call(this, props));\n\n    _this.setOverlayRef = function (overlay) {\n      _this.overlay = overlay;\n      _this.props.overlayRef && _this.props.overlayRef(overlay);\n    };\n\n    _this.setContentRef = function (content) {\n      _this.content = content;\n      _this.props.contentRef && _this.props.contentRef(content);\n    };\n\n    _this.afterClose = function () {\n      var _this$props = _this.props,\n          appElement = _this$props.appElement,\n          ariaHideApp = _this$props.ariaHideApp,\n          htmlOpenClassName = _this$props.htmlOpenClassName,\n          bodyOpenClassName = _this$props.bodyOpenClassName,\n          parentSelector = _this$props.parentSelector;\n\n\n      var parentDocument = parentSelector && parentSelector().ownerDocument || document;\n\n      // Remove classes.\n      bodyOpenClassName && classList.remove(parentDocument.body, bodyOpenClassName);\n\n      htmlOpenClassName && classList.remove(parentDocument.getElementsByTagName(\"html\")[0], htmlOpenClassName);\n\n      // Reset aria-hidden attribute if all modals have been removed\n      if (ariaHideApp && ariaHiddenInstances > 0) {\n        ariaHiddenInstances -= 1;\n\n        if (ariaHiddenInstances === 0) {\n          ariaAppHider.show(appElement);\n        }\n      }\n\n      if (_this.props.shouldFocusAfterRender) {\n        if (_this.props.shouldReturnFocusAfterClose) {\n          focusManager.returnFocus(_this.props.preventScroll);\n          focusManager.teardownScopedFocus();\n        } else {\n          focusManager.popWithoutFocus();\n        }\n      }\n\n      if (_this.props.onAfterClose) {\n        _this.props.onAfterClose();\n      }\n\n      _portalOpenInstances2.default.deregister(_this);\n    };\n\n    _this.open = function () {\n      _this.beforeOpen();\n      if (_this.state.afterOpen && _this.state.beforeClose) {\n        clearTimeout(_this.closeTimer);\n        _this.setState({ beforeClose: false });\n      } else {\n        if (_this.props.shouldFocusAfterRender) {\n          focusManager.setupScopedFocus(_this.node);\n          focusManager.markForFocusLater();\n        }\n\n        _this.setState({ isOpen: true }, function () {\n          _this.openAnimationFrame = requestAnimationFrame(function () {\n            _this.setState({ afterOpen: true });\n\n            if (_this.props.isOpen && _this.props.onAfterOpen) {\n              _this.props.onAfterOpen({\n                overlayEl: _this.overlay,\n                contentEl: _this.content\n              });\n            }\n          });\n        });\n      }\n    };\n\n    _this.close = function () {\n      if (_this.props.closeTimeoutMS > 0) {\n        _this.closeWithTimeout();\n      } else {\n        _this.closeWithoutTimeout();\n      }\n    };\n\n    _this.focusContent = function () {\n      return _this.content && !_this.contentHasFocus() && _this.content.focus({ preventScroll: true });\n    };\n\n    _this.closeWithTimeout = function () {\n      var closesAt = Date.now() + _this.props.closeTimeoutMS;\n      _this.setState({ beforeClose: true, closesAt: closesAt }, function () {\n        _this.closeTimer = setTimeout(_this.closeWithoutTimeout, _this.state.closesAt - Date.now());\n      });\n    };\n\n    _this.closeWithoutTimeout = function () {\n      _this.setState({\n        beforeClose: false,\n        isOpen: false,\n        afterOpen: false,\n        closesAt: null\n      }, _this.afterClose);\n    };\n\n    _this.handleKeyDown = function (event) {\n      if (isTabKey(event)) {\n        (0, _scopeTab2.default)(_this.content, event);\n      }\n\n      if (_this.props.shouldCloseOnEsc && isEscKey(event)) {\n        event.stopPropagation();\n        _this.requestClose(event);\n      }\n    };\n\n    _this.handleOverlayOnClick = function (event) {\n      if (_this.shouldClose === null) {\n        _this.shouldClose = true;\n      }\n\n      if (_this.shouldClose && _this.props.shouldCloseOnOverlayClick) {\n        if (_this.ownerHandlesClose()) {\n          _this.requestClose(event);\n        } else {\n          _this.focusContent();\n        }\n      }\n      _this.shouldClose = null;\n    };\n\n    _this.handleContentOnMouseUp = function () {\n      _this.shouldClose = false;\n    };\n\n    _this.handleOverlayOnMouseDown = function (event) {\n      if (!_this.props.shouldCloseOnOverlayClick && event.target == _this.overlay) {\n        event.preventDefault();\n      }\n    };\n\n    _this.handleContentOnClick = function () {\n      _this.shouldClose = false;\n    };\n\n    _this.handleContentOnMouseDown = function () {\n      _this.shouldClose = false;\n    };\n\n    _this.requestClose = function (event) {\n      return _this.ownerHandlesClose() && _this.props.onRequestClose(event);\n    };\n\n    _this.ownerHandlesClose = function () {\n      return _this.props.onRequestClose;\n    };\n\n    _this.shouldBeClosed = function () {\n      return !_this.state.isOpen && !_this.state.beforeClose;\n    };\n\n    _this.contentHasFocus = function () {\n      return document.activeElement === _this.content || _this.content.contains(document.activeElement);\n    };\n\n    _this.buildClassName = function (which, additional) {\n      var classNames = (typeof additional === \"undefined\" ? \"undefined\" : _typeof(additional)) === \"object\" ? additional : {\n        base: CLASS_NAMES[which],\n        afterOpen: CLASS_NAMES[which] + \"--after-open\",\n        beforeClose: CLASS_NAMES[which] + \"--before-close\"\n      };\n      var className = classNames.base;\n      if (_this.state.afterOpen) {\n        className = className + \" \" + classNames.afterOpen;\n      }\n      if (_this.state.beforeClose) {\n        className = className + \" \" + classNames.beforeClose;\n      }\n      return typeof additional === \"string\" && additional ? className + \" \" + additional : className;\n    };\n\n    _this.attributesFromObject = function (prefix, items) {\n      return Object.keys(items).reduce(function (acc, name) {\n        acc[prefix + \"-\" + name] = items[name];\n        return acc;\n      }, {});\n    };\n\n    _this.state = {\n      afterOpen: false,\n      beforeClose: false\n    };\n\n    _this.shouldClose = null;\n    _this.moveFromContentToOverlay = null;\n    return _this;\n  }\n\n  _createClass(ModalPortal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.isOpen) {\n        this.open();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        if (prevProps.bodyOpenClassName !== this.props.bodyOpenClassName) {\n          // eslint-disable-next-line no-console\n          console.warn('React-Modal: \"bodyOpenClassName\" prop has been modified. ' + \"This may cause unexpected behavior when multiple modals are open.\");\n        }\n        if (prevProps.htmlOpenClassName !== this.props.htmlOpenClassName) {\n          // eslint-disable-next-line no-console\n          console.warn('React-Modal: \"htmlOpenClassName\" prop has been modified. ' + \"This may cause unexpected behavior when multiple modals are open.\");\n        }\n      }\n\n      if (this.props.isOpen && !prevProps.isOpen) {\n        this.open();\n      } else if (!this.props.isOpen && prevProps.isOpen) {\n        this.close();\n      }\n\n      // Focus only needs to be set once when the modal is being opened\n      if (this.props.shouldFocusAfterRender && this.state.isOpen && !prevState.isOpen) {\n        this.focusContent();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.isOpen) {\n        this.afterClose();\n      }\n      clearTimeout(this.closeTimer);\n      cancelAnimationFrame(this.openAnimationFrame);\n    }\n  }, {\n    key: \"beforeOpen\",\n    value: function beforeOpen() {\n      var _props = this.props,\n          appElement = _props.appElement,\n          ariaHideApp = _props.ariaHideApp,\n          htmlOpenClassName = _props.htmlOpenClassName,\n          bodyOpenClassName = _props.bodyOpenClassName,\n          parentSelector = _props.parentSelector;\n\n\n      var parentDocument = parentSelector && parentSelector().ownerDocument || document;\n\n      // Add classes.\n      bodyOpenClassName && classList.add(parentDocument.body, bodyOpenClassName);\n\n      htmlOpenClassName && classList.add(parentDocument.getElementsByTagName(\"html\")[0], htmlOpenClassName);\n\n      if (ariaHideApp) {\n        ariaHiddenInstances += 1;\n        ariaAppHider.hide(appElement);\n      }\n\n      _portalOpenInstances2.default.register(this);\n    }\n\n    // Don't steal focus from inner elements\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          id = _props2.id,\n          className = _props2.className,\n          overlayClassName = _props2.overlayClassName,\n          defaultStyles = _props2.defaultStyles,\n          children = _props2.children;\n\n      var contentStyles = className ? {} : defaultStyles.content;\n      var overlayStyles = overlayClassName ? {} : defaultStyles.overlay;\n\n      if (this.shouldBeClosed()) {\n        return null;\n      }\n\n      var overlayProps = {\n        ref: this.setOverlayRef,\n        className: this.buildClassName(\"overlay\", overlayClassName),\n        style: _extends({}, overlayStyles, this.props.style.overlay),\n        onClick: this.handleOverlayOnClick,\n        onMouseDown: this.handleOverlayOnMouseDown\n      };\n\n      var contentProps = _extends({\n        id: id,\n        ref: this.setContentRef,\n        style: _extends({}, contentStyles, this.props.style.content),\n        className: this.buildClassName(\"content\", className),\n        tabIndex: \"-1\",\n        onKeyDown: this.handleKeyDown,\n        onMouseDown: this.handleContentOnMouseDown,\n        onMouseUp: this.handleContentOnMouseUp,\n        onClick: this.handleContentOnClick,\n        role: this.props.role,\n        \"aria-label\": this.props.contentLabel\n      }, this.attributesFromObject(\"aria\", _extends({ modal: true }, this.props.aria)), this.attributesFromObject(\"data\", this.props.data || {}), {\n        \"data-testid\": this.props.testId\n      });\n\n      var contentElement = this.props.contentElement(contentProps, children);\n      return this.props.overlayElement(overlayProps, contentElement);\n    }\n  }]);\n\n  return ModalPortal;\n}(_react.Component);\n\nModalPortal.defaultProps = {\n  style: {\n    overlay: {},\n    content: {}\n  },\n  defaultStyles: {}\n};\nModalPortal.propTypes = {\n  isOpen: _propTypes2.default.bool.isRequired,\n  defaultStyles: _propTypes2.default.shape({\n    content: _propTypes2.default.object,\n    overlay: _propTypes2.default.object\n  }),\n  style: _propTypes2.default.shape({\n    content: _propTypes2.default.object,\n    overlay: _propTypes2.default.object\n  }),\n  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  parentSelector: _propTypes2.default.func,\n  bodyOpenClassName: _propTypes2.default.string,\n  htmlOpenClassName: _propTypes2.default.string,\n  ariaHideApp: _propTypes2.default.bool,\n  appElement: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_safeHTMLElement2.default), _propTypes2.default.instanceOf(_safeHTMLElement.SafeHTMLCollection), _propTypes2.default.instanceOf(_safeHTMLElement.SafeNodeList), _propTypes2.default.arrayOf(_propTypes2.default.instanceOf(_safeHTMLElement2.default))]),\n  onAfterOpen: _propTypes2.default.func,\n  onAfterClose: _propTypes2.default.func,\n  onRequestClose: _propTypes2.default.func,\n  closeTimeoutMS: _propTypes2.default.number,\n  shouldFocusAfterRender: _propTypes2.default.bool,\n  shouldCloseOnOverlayClick: _propTypes2.default.bool,\n  shouldReturnFocusAfterClose: _propTypes2.default.bool,\n  preventScroll: _propTypes2.default.bool,\n  role: _propTypes2.default.string,\n  contentLabel: _propTypes2.default.string,\n  aria: _propTypes2.default.object,\n  data: _propTypes2.default.object,\n  children: _propTypes2.default.node,\n  shouldCloseOnEsc: _propTypes2.default.bool,\n  overlayRef: _propTypes2.default.func,\n  contentRef: _propTypes2.default.func,\n  id: _propTypes2.default.string,\n  overlayElement: _propTypes2.default.func,\n  contentElement: _propTypes2.default.func,\n  testId: _propTypes2.default.string\n};\nexports.default = ModalPortal;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetState = resetState;\nexports.log = log;\nexports.assertNodeList = assertNodeList;\nexports.setElement = setElement;\nexports.validateElement = validateElement;\nexports.hide = hide;\nexports.show = show;\nexports.documentNotReadyOrSSRTesting = documentNotReadyOrSSRTesting;\n\nvar _warning = require(\"warning\");\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _safeHTMLElement = require(\"./safeHTMLElement\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar globalElement = null;\n\n/* eslint-disable no-console */\n/* istanbul ignore next */\nfunction resetState() {\n  if (globalElement) {\n    if (globalElement.removeAttribute) {\n      globalElement.removeAttribute(\"aria-hidden\");\n    } else if (globalElement.length != null) {\n      globalElement.forEach(function (element) {\n        return element.removeAttribute(\"aria-hidden\");\n      });\n    } else {\n      document.querySelectorAll(globalElement).forEach(function (element) {\n        return element.removeAttribute(\"aria-hidden\");\n      });\n    }\n  }\n  globalElement = null;\n}\n\n/* istanbul ignore next */\nfunction log() {\n  if (process.env.NODE_ENV !== \"production\") {\n    var check = globalElement || {};\n    console.log(\"ariaAppHider ----------\");\n    console.log(check.nodeName, check.className, check.id);\n    console.log(\"end ariaAppHider ----------\");\n  }\n}\n/* eslint-enable no-console */\n\nfunction assertNodeList(nodeList, selector) {\n  if (!nodeList || !nodeList.length) {\n    throw new Error(\"react-modal: No elements were found for selector \" + selector + \".\");\n  }\n}\n\nfunction setElement(element) {\n  var useElement = element;\n  if (typeof useElement === \"string\" && _safeHTMLElement.canUseDOM) {\n    var el = document.querySelectorAll(useElement);\n    assertNodeList(el, useElement);\n    useElement = el;\n  }\n  globalElement = useElement || globalElement;\n  return globalElement;\n}\n\nfunction validateElement(appElement) {\n  var el = appElement || globalElement;\n  if (el) {\n    return Array.isArray(el) || el instanceof HTMLCollection || el instanceof NodeList ? el : [el];\n  } else {\n    (0, _warning2.default)(false, [\"react-modal: App element is not defined.\", \"Please use `Modal.setAppElement(el)` or set `appElement={el}`.\", \"This is needed so screen readers don't see main content\", \"when modal is opened. It is not recommended, but you can opt-out\", \"by setting `ariaHideApp={false}`.\"].join(\" \"));\n\n    return [];\n  }\n}\n\nfunction hide(appElement) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = validateElement(appElement)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var el = _step.value;\n\n      el.setAttribute(\"aria-hidden\", \"true\");\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction show(appElement) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = validateElement(appElement)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var el = _step2.value;\n\n      el.removeAttribute(\"aria-hidden\");\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n\nfunction documentNotReadyOrSSRTesting() {\n  globalElement = null;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetState = resetState;\nexports.log = log;\n\nvar _portalOpenInstances = require(\"./portalOpenInstances\");\n\nvar _portalOpenInstances2 = _interopRequireDefault(_portalOpenInstances);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Body focus trap see Issue #742\n\nvar before = void 0,\n    after = void 0,\n    instances = [];\n\n/* eslint-disable no-console */\n/* istanbul ignore next */\nfunction resetState() {\n  var _arr = [before, after];\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    var item = _arr[_i];\n    if (!item) continue;\n    item.parentNode && item.parentNode.removeChild(item);\n  }\n  before = after = null;\n  instances = [];\n}\n\n/* istanbul ignore next */\nfunction log() {\n  console.log(\"bodyTrap ----------\");\n  console.log(instances.length);\n  var _arr2 = [before, after];\n  for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n    var item = _arr2[_i2];\n    var check = item || {};\n    console.log(check.nodeName, check.className, check.id);\n  }\n  console.log(\"edn bodyTrap ----------\");\n}\n/* eslint-enable no-console */\n\nfunction focusContent() {\n  if (instances.length === 0) {\n    if (process.env.NODE_ENV !== \"production\") {\n      // eslint-disable-next-line no-console\n      console.warn(\"React-Modal: Open instances > 0 expected\");\n    }\n    return;\n  }\n  instances[instances.length - 1].focusContent();\n}\n\nfunction bodyTrap(eventType, openInstances) {\n  if (!before && !after) {\n    before = document.createElement(\"div\");\n    before.setAttribute(\"data-react-modal-body-trap\", \"\");\n    before.style.position = \"absolute\";\n    before.style.opacity = \"0\";\n    before.setAttribute(\"tabindex\", \"0\");\n    before.addEventListener(\"focus\", focusContent);\n    after = before.cloneNode();\n    after.addEventListener(\"focus\", focusContent);\n  }\n\n  instances = openInstances;\n\n  if (instances.length > 0) {\n    // Add focus trap\n    if (document.body.firstChild !== before) {\n      document.body.insertBefore(before, document.body.firstChild);\n    }\n    if (document.body.lastChild !== after) {\n      document.body.appendChild(after);\n    }\n  } else {\n    // Remove focus trap\n    if (before.parentElement) {\n      before.parentElement.removeChild(before);\n    }\n    if (after.parentElement) {\n      after.parentElement.removeChild(after);\n    }\n  }\n}\n\n_portalOpenInstances2.default.subscribe(bodyTrap);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetState = resetState;\nexports.log = log;\nvar htmlClassList = {};\nvar docBodyClassList = {};\n\n/* eslint-disable no-console */\n/* istanbul ignore next */\nfunction removeClass(at, cls) {\n  at.classList.remove(cls);\n}\n\n/* istanbul ignore next */\nfunction resetState() {\n  var htmlElement = document.getElementsByTagName(\"html\")[0];\n  for (var cls in htmlClassList) {\n    removeClass(htmlElement, htmlClassList[cls]);\n  }\n\n  var body = document.body;\n  for (var _cls in docBodyClassList) {\n    removeClass(body, docBodyClassList[_cls]);\n  }\n\n  htmlClassList = {};\n  docBodyClassList = {};\n}\n\n/* istanbul ignore next */\nfunction log() {\n  if (process.env.NODE_ENV !== \"production\") {\n    var classes = document.getElementsByTagName(\"html\")[0].className;\n    var buffer = \"Show tracked classes:\\n\\n\";\n\n    buffer += \"<html /> (\" + classes + \"):\\n  \";\n    for (var x in htmlClassList) {\n      buffer += \"  \" + x + \" \" + htmlClassList[x] + \"\\n  \";\n    }\n\n    classes = document.body.className;\n\n    buffer += \"\\n\\ndoc.body (\" + classes + \"):\\n  \";\n    for (var _x in docBodyClassList) {\n      buffer += \"  \" + _x + \" \" + docBodyClassList[_x] + \"\\n  \";\n    }\n\n    buffer += \"\\n\";\n\n    console.log(buffer);\n  }\n}\n/* eslint-enable no-console */\n\n/**\n * Track the number of reference of a class.\n * @param {object} poll The poll to receive the reference.\n * @param {string} className The class name.\n * @return {string}\n */\nvar incrementReference = function incrementReference(poll, className) {\n  if (!poll[className]) {\n    poll[className] = 0;\n  }\n  poll[className] += 1;\n  return className;\n};\n\n/**\n * Drop the reference of a class.\n * @param {object} poll The poll to receive the reference.\n * @param {string} className The class name.\n * @return {string}\n */\nvar decrementReference = function decrementReference(poll, className) {\n  if (poll[className]) {\n    poll[className] -= 1;\n  }\n  return className;\n};\n\n/**\n * Track a class and add to the given class list.\n * @param {Object} classListRef A class list of an element.\n * @param {Object} poll         The poll to be used.\n * @param {Array}  classes      The list of classes to be tracked.\n */\nvar trackClass = function trackClass(classListRef, poll, classes) {\n  classes.forEach(function (className) {\n    incrementReference(poll, className);\n    classListRef.add(className);\n  });\n};\n\n/**\n * Untrack a class and remove from the given class list if the reference\n * reaches 0.\n * @param {Object} classListRef A class list of an element.\n * @param {Object} poll         The poll to be used.\n * @param {Array}  classes      The list of classes to be untracked.\n */\nvar untrackClass = function untrackClass(classListRef, poll, classes) {\n  classes.forEach(function (className) {\n    decrementReference(poll, className);\n    poll[className] === 0 && classListRef.remove(className);\n  });\n};\n\n/**\n * Public inferface to add classes to the document.body.\n * @param {string} bodyClass The class string to be added.\n *                           It may contain more then one class\n *                           with ' ' as separator.\n */\nvar add = exports.add = function add(element, classString) {\n  return trackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\n};\n\n/**\n * Public inferface to remove classes from the document.body.\n * @param {string} bodyClass The class string to be added.\n *                           It may contain more then one class\n *                           with ' ' as separator.\n */\nvar remove = exports.remove = function remove(element, classString) {\n  return untrackClass(element.classList, element.nodeName.toLowerCase() == \"html\" ? htmlClassList : docBodyClassList, classString.split(\" \"));\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetState = resetState;\nexports.log = log;\nexports.handleBlur = handleBlur;\nexports.handleFocus = handleFocus;\nexports.markForFocusLater = markForFocusLater;\nexports.returnFocus = returnFocus;\nexports.popWithoutFocus = popWithoutFocus;\nexports.setupScopedFocus = setupScopedFocus;\nexports.teardownScopedFocus = teardownScopedFocus;\n\nvar _tabbable = require(\"../helpers/tabbable\");\n\nvar _tabbable2 = _interopRequireDefault(_tabbable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar focusLaterElements = [];\nvar modalElement = null;\nvar needToFocus = false;\n\n/* eslint-disable no-console */\n/* istanbul ignore next */\nfunction resetState() {\n  focusLaterElements = [];\n}\n\n/* istanbul ignore next */\nfunction log() {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.log(\"focusManager ----------\");\n    focusLaterElements.forEach(function (f) {\n      var check = f || {};\n      console.log(check.nodeName, check.className, check.id);\n    });\n    console.log(\"end focusManager ----------\");\n  }\n}\n/* eslint-enable no-console */\n\nfunction handleBlur() {\n  needToFocus = true;\n}\n\nfunction handleFocus() {\n  if (needToFocus) {\n    needToFocus = false;\n    if (!modalElement) {\n      return;\n    }\n    // need to see how jQuery shims document.on('focusin') so we don't need the\n    // setTimeout, firefox doesn't support focusin, if it did, we could focus\n    // the element outside of a setTimeout. Side-effect of this implementation\n    // is that the document.body gets focus, and then we focus our element right\n    // after, seems fine.\n    setTimeout(function () {\n      if (modalElement.contains(document.activeElement)) {\n        return;\n      }\n      var el = (0, _tabbable2.default)(modalElement)[0] || modalElement;\n      el.focus();\n    }, 0);\n  }\n}\n\nfunction markForFocusLater() {\n  focusLaterElements.push(document.activeElement);\n}\n\n/* eslint-disable no-console */\nfunction returnFocus() {\n  var preventScroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var toFocus = null;\n  try {\n    if (focusLaterElements.length !== 0) {\n      toFocus = focusLaterElements.pop();\n      toFocus.focus({ preventScroll: preventScroll });\n    }\n    return;\n  } catch (e) {\n    console.warn([\"You tried to return focus to\", toFocus, \"but it is not in the DOM anymore\"].join(\" \"));\n  }\n}\n/* eslint-enable no-console */\n\nfunction popWithoutFocus() {\n  focusLaterElements.length > 0 && focusLaterElements.pop();\n}\n\nfunction setupScopedFocus(element) {\n  modalElement = element;\n\n  if (window.addEventListener) {\n    window.addEventListener(\"blur\", handleBlur, false);\n    document.addEventListener(\"focus\", handleFocus, true);\n  } else {\n    window.attachEvent(\"onBlur\", handleBlur);\n    document.attachEvent(\"onFocus\", handleFocus);\n  }\n}\n\nfunction teardownScopedFocus() {\n  modalElement = null;\n\n  if (window.addEventListener) {\n    window.removeEventListener(\"blur\", handleBlur);\n    document.removeEventListener(\"focus\", handleFocus);\n  } else {\n    window.detachEvent(\"onBlur\", handleBlur);\n    document.detachEvent(\"onFocus\", handleFocus);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.log = log;\nexports.resetState = resetState;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Tracks portals that are open and emits events to subscribers\n\nvar PortalOpenInstances = function PortalOpenInstances() {\n  var _this = this;\n\n  _classCallCheck(this, PortalOpenInstances);\n\n  this.register = function (openInstance) {\n    if (_this.openInstances.indexOf(openInstance) !== -1) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // eslint-disable-next-line no-console\n        console.warn(\"React-Modal: Cannot register modal instance that's already open\");\n      }\n      return;\n    }\n    _this.openInstances.push(openInstance);\n    _this.emit(\"register\");\n  };\n\n  this.deregister = function (openInstance) {\n    var index = _this.openInstances.indexOf(openInstance);\n    if (index === -1) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // eslint-disable-next-line no-console\n        console.warn(\"React-Modal: Unable to deregister \" + openInstance + \" as \" + \"it was never registered\");\n      }\n      return;\n    }\n    _this.openInstances.splice(index, 1);\n    _this.emit(\"deregister\");\n  };\n\n  this.subscribe = function (callback) {\n    _this.subscribers.push(callback);\n  };\n\n  this.emit = function (eventType) {\n    _this.subscribers.forEach(function (subscriber) {\n      return subscriber(eventType,\n      // shallow copy to avoid accidental mutation\n      _this.openInstances.slice());\n    });\n  };\n\n  this.openInstances = [];\n  this.subscribers = [];\n};\n\nvar portalOpenInstances = new PortalOpenInstances();\n\n/* eslint-disable no-console */\n/* istanbul ignore next */\nfunction log() {\n  console.log(\"portalOpenInstances ----------\");\n  console.log(portalOpenInstances.openInstances.length);\n  portalOpenInstances.openInstances.forEach(function (p) {\n    return console.log(p);\n  });\n  console.log(\"end portalOpenInstances ----------\");\n}\n\n/* istanbul ignore next */\nfunction resetState() {\n  portalOpenInstances = new PortalOpenInstances();\n}\n/* eslint-enable no-console */\n\nexports.default = portalOpenInstances;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canUseDOM = exports.SafeNodeList = exports.SafeHTMLCollection = undefined;\n\nvar _exenv = require(\"exenv\");\n\nvar _exenv2 = _interopRequireDefault(_exenv);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EE = _exenv2.default;\n\nvar SafeHTMLElement = EE.canUseDOM ? window.HTMLElement : {};\n\nvar SafeHTMLCollection = exports.SafeHTMLCollection = EE.canUseDOM ? window.HTMLCollection : {};\n\nvar SafeNodeList = exports.SafeNodeList = EE.canUseDOM ? window.NodeList : {};\n\nvar canUseDOM = exports.canUseDOM = EE.canUseDOM;\n\nexports.default = SafeHTMLElement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = scopeTab;\n\nvar _tabbable = require(\"./tabbable\");\n\nvar _tabbable2 = _interopRequireDefault(_tabbable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getActiveElement() {\n  var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\n  return el.activeElement.shadowRoot ? getActiveElement(el.activeElement.shadowRoot) : el.activeElement;\n}\n\nfunction scopeTab(node, event) {\n  var tabbable = (0, _tabbable2.default)(node);\n\n  if (!tabbable.length) {\n    // Do nothing, since there are no elements that can receive focus.\n    event.preventDefault();\n    return;\n  }\n\n  var target = void 0;\n\n  var shiftKey = event.shiftKey;\n  var head = tabbable[0];\n  var tail = tabbable[tabbable.length - 1];\n  var activeElement = getActiveElement();\n\n  // proceed with default browser behavior on tab.\n  // Focus on last element on shift + tab.\n  if (node === activeElement) {\n    if (!shiftKey) return;\n    target = tail;\n  }\n\n  if (tail === activeElement && !shiftKey) {\n    target = head;\n  }\n\n  if (head === activeElement && shiftKey) {\n    target = tail;\n  }\n\n  if (target) {\n    event.preventDefault();\n    target.focus();\n    return;\n  }\n\n  // Safari radio issue.\n  //\n  // Safari does not move the focus to the radio button,\n  // so we need to force it to really walk through all elements.\n  //\n  // This is very error prone, since we are trying to guess\n  // if it is a safari browser from the first occurence between\n  // chrome or safari.\n  //\n  // The chrome user agent contains the first ocurrence\n  // as the 'chrome/version' and later the 'safari/version'.\n  var checkSafari = /(\\bChrome\\b|\\bSafari\\b)\\//.exec(navigator.userAgent);\n  var isSafariDesktop = checkSafari != null && checkSafari[1] != \"Chrome\" && /\\biPod\\b|\\biPad\\b/g.exec(navigator.userAgent) == null;\n\n  // If we are not in safari desktop, let the browser control\n  // the focus\n  if (!isSafariDesktop) return;\n\n  var x = tabbable.indexOf(activeElement);\n\n  if (x > -1) {\n    x += shiftKey ? -1 : 1;\n  }\n\n  target = tabbable[x];\n\n  // If the tabbable element does not exist,\n  // focus head/tail based on shiftKey\n  if (typeof target === \"undefined\") {\n    event.preventDefault();\n    target = shiftKey ? tail : head;\n    target.focus();\n    return;\n  }\n\n  event.preventDefault();\n\n  target.focus();\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findTabbableDescendants;\n/*!\n * Adapted from jQuery UI core\n *\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/category/ui-core/\n */\n\nvar DISPLAY_NONE = \"none\";\nvar DISPLAY_CONTENTS = \"contents\";\n\nvar tabbableNode = /input|select|textarea|button|object|iframe/;\n\nfunction isNotOverflowing(element, style) {\n  return style.getPropertyValue(\"overflow\") !== \"visible\" ||\n  // if 'overflow: visible' set, check if there is actually any overflow\n  element.scrollWidth <= 0 && element.scrollHeight <= 0;\n}\n\nfunction hidesContents(element) {\n  var zeroSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;\n\n  // If the node is empty, this is good enough\n  if (zeroSize && !element.innerHTML) return true;\n\n  try {\n    // Otherwise we need to check some styles\n    var style = window.getComputedStyle(element);\n    var displayValue = style.getPropertyValue(\"display\");\n    return zeroSize ? displayValue !== DISPLAY_CONTENTS && isNotOverflowing(element, style) : displayValue === DISPLAY_NONE;\n  } catch (exception) {\n    // eslint-disable-next-line no-console\n    console.warn(\"Failed to inspect element style\");\n    return false;\n  }\n}\n\nfunction visible(element) {\n  var parentElement = element;\n  var rootNode = element.getRootNode && element.getRootNode();\n  while (parentElement) {\n    if (parentElement === document.body) break;\n\n    // if we are not hidden yet, skip to checking outside the Web Component\n    if (rootNode && parentElement === rootNode) parentElement = rootNode.host.parentNode;\n\n    if (hidesContents(parentElement)) return false;\n    parentElement = parentElement.parentNode;\n  }\n  return true;\n}\n\nfunction focusable(element, isTabIndexNotNaN) {\n  var nodeName = element.nodeName.toLowerCase();\n  var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === \"a\" ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);\n  return res && visible(element);\n}\n\nfunction tabbable(element) {\n  var tabIndex = element.getAttribute(\"tabindex\");\n  if (tabIndex === null) tabIndex = undefined;\n  var isTabIndexNaN = isNaN(tabIndex);\n  return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);\n}\n\nfunction findTabbableDescendants(element) {\n  var descendants = [].slice.call(element.querySelectorAll(\"*\"), 0).reduce(function (finished, el) {\n    return finished.concat(!el.shadowRoot ? [el] : findTabbableDescendants(el.shadowRoot));\n  }, []);\n  return descendants.filter(tabbable);\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./components/Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Modal2.default;\nmodule.exports = exports[\"default\"];","const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nconst words = (str) => str.match(reWords) || []\n\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\n\nconst join = (str, d) => words(str).join(d).toLowerCase()\n\nconst camelCase = (str) =>\n  words(str).reduce(\n    (acc, next) =>\n      `${acc}${\n        !acc\n          ? next.toLowerCase()\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\n      }`,\n    '',\n  )\n\nconst pascalCase = (str) => upperFirst(camelCase(str))\n\nconst snakeCase = (str) => join(str, '_')\n\nconst kebabCase = (str) => join(str, '-')\n\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\n\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\n\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase,\n}\n","\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import { getter, forEach, split, normalizePath, join } from 'property-expr';\nimport { camelCase, snakeCase } from 'tiny-case';\nimport toposort from 'toposort';\n\nconst toString = Object.prototype.toString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = typeof Symbol !== 'undefined' ? Symbol.prototype.toString : () => '';\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && 1 / val < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\nfunction printSimpleValue(val, quoteStrings = false) {\n  if (val == null || val === true || val === false) return '' + val;\n  const typeOf = typeof val;\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return quoteStrings ? `\"${val}\"` : val;\n  if (typeOf === 'function') return '[Function ' + (val.name || 'anonymous') + ']';\n  if (typeOf === 'symbol') return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n  const tag = toString.call(val).slice(8, -1);\n  if (tag === 'Date') return isNaN(val.getTime()) ? '' + val : val.toISOString(val);\n  if (tag === 'Error' || val instanceof Error) return '[' + errorToString.call(val) + ']';\n  if (tag === 'RegExp') return regExpToString.call(val);\n  return null;\n}\nfunction printValue(value, quoteStrings) {\n  let result = printSimpleValue(value, quoteStrings);\n  if (result !== null) return result;\n  return JSON.stringify(value, function (key, value) {\n    let result = printSimpleValue(this[key], quoteStrings);\n    if (result !== null) return result;\n    return value;\n  }, 2);\n}\n\nfunction toArray(value) {\n  return value == null ? [] : [].concat(value);\n}\n\nlet _Symbol$toStringTag, _Symbol$hasInstance, _Symbol$toStringTag2;\nlet strReg = /\\$\\{\\s*(\\w+)\\s*\\}/g;\n_Symbol$toStringTag = Symbol.toStringTag;\nclass ValidationErrorNoStack {\n  constructor(errorOrErrors, value, field, type) {\n    this.name = void 0;\n    this.message = void 0;\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = void 0;\n    this.inner = void 0;\n    this[_Symbol$toStringTag] = 'Error';\n    this.name = 'ValidationError';\n    this.value = value;\n    this.path = field;\n    this.type = type;\n    this.errors = [];\n    this.inner = [];\n    toArray(errorOrErrors).forEach(err => {\n      if (ValidationError.isError(err)) {\n        this.errors.push(...err.errors);\n        const innerErrors = err.inner.length ? err.inner : [err];\n        this.inner.push(...innerErrors);\n      } else {\n        this.errors.push(err);\n      }\n    });\n    this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0];\n  }\n}\n_Symbol$hasInstance = Symbol.hasInstance;\n_Symbol$toStringTag2 = Symbol.toStringTag;\nclass ValidationError extends Error {\n  static formatError(message, params) {\n    const path = params.label || params.path || 'this';\n    if (path !== params.path) params = Object.assign({}, params, {\n      path\n    });\n    if (typeof message === 'string') return message.replace(strReg, (_, key) => printValue(params[key]));\n    if (typeof message === 'function') return message(params);\n    return message;\n  }\n  static isError(err) {\n    return err && err.name === 'ValidationError';\n  }\n  constructor(errorOrErrors, value, field, type, disableStack) {\n    const errorNoStack = new ValidationErrorNoStack(errorOrErrors, value, field, type);\n    if (disableStack) {\n      return errorNoStack;\n    }\n    super();\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = [];\n    this.inner = [];\n    this[_Symbol$toStringTag2] = 'Error';\n    this.name = errorNoStack.name;\n    this.message = errorNoStack.message;\n    this.type = errorNoStack.type;\n    this.value = errorNoStack.value;\n    this.path = errorNoStack.path;\n    this.errors = errorNoStack.errors;\n    this.inner = errorNoStack.inner;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n  }\n  static [_Symbol$hasInstance](inst) {\n    return ValidationErrorNoStack[Symbol.hasInstance](inst) || super[Symbol.hasInstance](inst);\n  }\n}\n\nlet mixed = {\n  default: '${path} is invalid',\n  required: '${path} is a required field',\n  defined: '${path} must be defined',\n  notNull: '${path} cannot be null',\n  oneOf: '${path} must be one of the following values: ${values}',\n  notOneOf: '${path} must not be one of the following values: ${values}',\n  notType: ({\n    path,\n    type,\n    value,\n    originalValue\n  }) => {\n    const castMsg = originalValue != null && originalValue !== value ? ` (cast from the value \\`${printValue(originalValue, true)}\\`).` : '.';\n    return type !== 'mixed' ? `${path} must be a \\`${type}\\` type, ` + `but the final value was: \\`${printValue(value, true)}\\`` + castMsg : `${path} must match the configured type. ` + `The validated value was: \\`${printValue(value, true)}\\`` + castMsg;\n  }\n};\nlet string = {\n  length: '${path} must be exactly ${length} characters',\n  min: '${path} must be at least ${min} characters',\n  max: '${path} must be at most ${max} characters',\n  matches: '${path} must match the following: \"${regex}\"',\n  email: '${path} must be a valid email',\n  url: '${path} must be a valid URL',\n  uuid: '${path} must be a valid UUID',\n  datetime: '${path} must be a valid ISO date-time',\n  datetime_precision: '${path} must be a valid ISO date-time with a sub-second precision of exactly ${precision} digits',\n  datetime_offset: '${path} must be a valid ISO date-time with UTC \"Z\" timezone',\n  trim: '${path} must be a trimmed string',\n  lowercase: '${path} must be a lowercase string',\n  uppercase: '${path} must be a upper case string'\n};\nlet number = {\n  min: '${path} must be greater than or equal to ${min}',\n  max: '${path} must be less than or equal to ${max}',\n  lessThan: '${path} must be less than ${less}',\n  moreThan: '${path} must be greater than ${more}',\n  positive: '${path} must be a positive number',\n  negative: '${path} must be a negative number',\n  integer: '${path} must be an integer'\n};\nlet date = {\n  min: '${path} field must be later than ${min}',\n  max: '${path} field must be at earlier than ${max}'\n};\nlet boolean = {\n  isValue: '${path} field must be ${value}'\n};\nlet object = {\n  noUnknown: '${path} field has unspecified keys: ${unknown}'\n};\nlet array = {\n  min: '${path} field must have at least ${min} items',\n  max: '${path} field must have less than or equal to ${max} items',\n  length: '${path} must have ${length} items'\n};\nlet tuple = {\n  notType: params => {\n    const {\n      path,\n      value,\n      spec\n    } = params;\n    const typeLen = spec.types.length;\n    if (Array.isArray(value)) {\n      if (value.length < typeLen) return `${path} tuple value has too few items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n      if (value.length > typeLen) return `${path} tuple value has too many items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n    }\n    return ValidationError.formatError(mixed.notType, params);\n  }\n};\nvar locale = Object.assign(Object.create(null), {\n  mixed,\n  string,\n  number,\n  date,\n  object,\n  array,\n  boolean,\n  tuple\n});\n\nconst isSchema = obj => obj && obj.__isYupSchema__;\n\nclass Condition {\n  static fromOptions(refs, config) {\n    if (!config.then && !config.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    let {\n      is,\n      then,\n      otherwise\n    } = config;\n    let check = typeof is === 'function' ? is : (...values) => values.every(value => value === is);\n    return new Condition(refs, (values, schema) => {\n      var _branch;\n      let branch = check(...values) ? then : otherwise;\n      return (_branch = branch == null ? void 0 : branch(schema)) != null ? _branch : schema;\n    });\n  }\n  constructor(refs, builder) {\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n    this.fn = builder;\n  }\n  resolve(base, options) {\n    let values = this.refs.map(ref =>\n    // TODO: ? operator here?\n    ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context));\n    let schema = this.fn(values, base, options);\n    if (schema === undefined ||\n    // @ts-ignore this can be base\n    schema === base) {\n      return base;\n    }\n    if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n    return schema.resolve(options);\n  }\n}\n\nconst prefixes = {\n  context: '$',\n  value: '.'\n};\nfunction create$9(key, options) {\n  return new Reference(key, options);\n}\nclass Reference {\n  constructor(key, options = {}) {\n    this.key = void 0;\n    this.isContext = void 0;\n    this.isValue = void 0;\n    this.isSibling = void 0;\n    this.path = void 0;\n    this.getter = void 0;\n    this.map = void 0;\n    if (typeof key !== 'string') throw new TypeError('ref must be a string, got: ' + key);\n    this.key = key.trim();\n    if (key === '') throw new TypeError('ref must be a non-empty string');\n    this.isContext = this.key[0] === prefixes.context;\n    this.isValue = this.key[0] === prefixes.value;\n    this.isSibling = !this.isContext && !this.isValue;\n    let prefix = this.isContext ? prefixes.context : this.isValue ? prefixes.value : '';\n    this.path = this.key.slice(prefix.length);\n    this.getter = this.path && getter(this.path, true);\n    this.map = options.map;\n  }\n  getValue(value, parent, context) {\n    let result = this.isContext ? context : this.isValue ? value : parent;\n    if (this.getter) result = this.getter(result || {});\n    if (this.map) result = this.map(result);\n    return result;\n  }\n\n  /**\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @param {Object=} options.context\n   * @param {Object=} options.parent\n   */\n  cast(value, options) {\n    return this.getValue(value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n  }\n  resolve() {\n    return this;\n  }\n  describe() {\n    return {\n      type: 'ref',\n      key: this.key\n    };\n  }\n  toString() {\n    return `Ref(${this.key})`;\n  }\n  static isRef(value) {\n    return value && value.__isYupRef;\n  }\n}\n\n// @ts-ignore\nReference.prototype.__isYupRef = true;\n\nconst isAbsent = value => value == null;\n\nfunction createValidation(config) {\n  function validate({\n    value,\n    path = '',\n    options,\n    originalValue,\n    schema\n  }, panic, next) {\n    const {\n      name,\n      test,\n      params,\n      message,\n      skipAbsent\n    } = config;\n    let {\n      parent,\n      context,\n      abortEarly = schema.spec.abortEarly,\n      disableStackTrace = schema.spec.disableStackTrace\n    } = options;\n    function resolve(item) {\n      return Reference.isRef(item) ? item.getValue(value, parent, context) : item;\n    }\n    function createError(overrides = {}) {\n      const nextParams = Object.assign({\n        value,\n        originalValue,\n        label: schema.spec.label,\n        path: overrides.path || path,\n        spec: schema.spec,\n        disableStackTrace: overrides.disableStackTrace || disableStackTrace\n      }, params, overrides.params);\n      for (const key of Object.keys(nextParams)) nextParams[key] = resolve(nextParams[key]);\n      const error = new ValidationError(ValidationError.formatError(overrides.message || message, nextParams), value, nextParams.path, overrides.type || name, nextParams.disableStackTrace);\n      error.params = nextParams;\n      return error;\n    }\n    const invalid = abortEarly ? panic : next;\n    let ctx = {\n      path,\n      parent,\n      type: name,\n      from: options.from,\n      createError,\n      resolve,\n      options,\n      originalValue,\n      schema\n    };\n    const handleResult = validOrError => {\n      if (ValidationError.isError(validOrError)) invalid(validOrError);else if (!validOrError) invalid(createError());else next(null);\n    };\n    const handleError = err => {\n      if (ValidationError.isError(err)) invalid(err);else panic(err);\n    };\n    const shouldSkip = skipAbsent && isAbsent(value);\n    if (shouldSkip) {\n      return handleResult(true);\n    }\n    let result;\n    try {\n      var _result;\n      result = test.call(ctx, value, ctx);\n      if (typeof ((_result = result) == null ? void 0 : _result.then) === 'function') {\n        if (options.sync) {\n          throw new Error(`Validation test of type: \"${ctx.type}\" returned a Promise during a synchronous validate. ` + `This test will finish after the validate call has returned`);\n        }\n        return Promise.resolve(result).then(handleResult, handleError);\n      }\n    } catch (err) {\n      handleError(err);\n      return;\n    }\n    handleResult(result);\n  }\n  validate.OPTIONS = config;\n  return validate;\n}\n\nfunction getIn(schema, path, value, context = value) {\n  let parent, lastPart, lastPartDebug;\n\n  // root path: ''\n  if (!path) return {\n    parent,\n    parentPath: path,\n    schema\n  };\n  forEach(path, (_part, isBracket, isArray) => {\n    let part = isBracket ? _part.slice(1, _part.length - 1) : _part;\n    schema = schema.resolve({\n      context,\n      parent,\n      value\n    });\n    let isTuple = schema.type === 'tuple';\n    let idx = isArray ? parseInt(part, 10) : 0;\n    if (schema.innerType || isTuple) {\n      if (isTuple && !isArray) throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part \"${lastPartDebug}\" must contain an index to the tuple element, e.g. \"${lastPartDebug}[0]\"`);\n      if (value && idx >= value.length) {\n        throw new Error(`Yup.reach cannot resolve an array item at index: ${_part}, in the path: ${path}. ` + `because there is no value at that index. `);\n      }\n      parent = value;\n      value = value && value[idx];\n      schema = isTuple ? schema.spec.types[idx] : schema.innerType;\n    }\n\n    // sometimes the array index part of a path doesn't exist: \"nested.arr.child\"\n    // in these cases the current part is the next schema and should be processed\n    // in this iteration. For cases where the index signature is included this\n    // check will fail and we'll handle the `child` part on the next iteration like normal\n    if (!isArray) {\n      if (!schema.fields || !schema.fields[part]) throw new Error(`The schema does not contain the path: ${path}. ` + `(failed at: ${lastPartDebug} which is a type: \"${schema.type}\")`);\n      parent = value;\n      value = value && value[part];\n      schema = schema.fields[part];\n    }\n    lastPart = part;\n    lastPartDebug = isBracket ? '[' + _part + ']' : '.' + _part;\n  });\n  return {\n    schema,\n    parent,\n    parentPath: lastPart\n  };\n}\nfunction reach(obj, path, value, context) {\n  return getIn(obj, path, value, context).schema;\n}\n\nclass ReferenceSet extends Set {\n  describe() {\n    const description = [];\n    for (const item of this.values()) {\n      description.push(Reference.isRef(item) ? item.describe() : item);\n    }\n    return description;\n  }\n  resolveAll(resolve) {\n    let result = [];\n    for (const item of this.values()) {\n      result.push(resolve(item));\n    }\n    return result;\n  }\n  clone() {\n    return new ReferenceSet(this.values());\n  }\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.forEach(value => next.add(value));\n    removeItems.forEach(value => next.delete(value));\n    return next;\n  }\n}\n\n// tweaked from https://github.com/Kelin2025/nanoclone/blob/0abeb7635bda9b68ef2277093f76dbe3bf3948e1/src/index.js\nfunction clone(src, seen = new Map()) {\n  if (isSchema(src) || !src || typeof src !== 'object') return src;\n  if (seen.has(src)) return seen.get(src);\n  let copy;\n  if (src instanceof Date) {\n    // Date\n    copy = new Date(src.getTime());\n    seen.set(src, copy);\n  } else if (src instanceof RegExp) {\n    // RegExp\n    copy = new RegExp(src);\n    seen.set(src, copy);\n  } else if (Array.isArray(src)) {\n    // Array\n    copy = new Array(src.length);\n    seen.set(src, copy);\n    for (let i = 0; i < src.length; i++) copy[i] = clone(src[i], seen);\n  } else if (src instanceof Map) {\n    // Map\n    copy = new Map();\n    seen.set(src, copy);\n    for (const [k, v] of src.entries()) copy.set(k, clone(v, seen));\n  } else if (src instanceof Set) {\n    // Set\n    copy = new Set();\n    seen.set(src, copy);\n    for (const v of src) copy.add(clone(v, seen));\n  } else if (src instanceof Object) {\n    // Object\n    copy = {};\n    seen.set(src, copy);\n    for (const [k, v] of Object.entries(src)) copy[k] = clone(v, seen);\n  } else {\n    throw Error(`Unable to clone ${src}`);\n  }\n  return copy;\n}\n\n// If `CustomSchemaMeta` isn't extended with any keys, we'll fall back to a\n// loose Record definition allowing free form usage.\nclass Schema {\n  constructor(options) {\n    this.type = void 0;\n    this.deps = [];\n    this.tests = void 0;\n    this.transforms = void 0;\n    this.conditions = [];\n    this._mutate = void 0;\n    this.internalTests = {};\n    this._whitelist = new ReferenceSet();\n    this._blacklist = new ReferenceSet();\n    this.exclusiveTests = Object.create(null);\n    this._typeCheck = void 0;\n    this.spec = void 0;\n    this.tests = [];\n    this.transforms = [];\n    this.withMutation(() => {\n      this.typeError(mixed.notType);\n    });\n    this.type = options.type;\n    this._typeCheck = options.check;\n    this.spec = Object.assign({\n      strip: false,\n      strict: false,\n      abortEarly: true,\n      recursive: true,\n      disableStackTrace: false,\n      nullable: false,\n      optional: true,\n      coerce: true\n    }, options == null ? void 0 : options.spec);\n    this.withMutation(s => {\n      s.nonNullable();\n    });\n  }\n\n  // TODO: remove\n  get _type() {\n    return this.type;\n  }\n  clone(spec) {\n    if (this._mutate) {\n      if (spec) Object.assign(this.spec, spec);\n      return this;\n    }\n\n    // if the nested value is a schema we can skip cloning, since\n    // they are already immutable\n    const next = Object.create(Object.getPrototypeOf(this));\n\n    // @ts-expect-error this is readonly\n    next.type = this.type;\n    next._typeCheck = this._typeCheck;\n    next._whitelist = this._whitelist.clone();\n    next._blacklist = this._blacklist.clone();\n    next.internalTests = Object.assign({}, this.internalTests);\n    next.exclusiveTests = Object.assign({}, this.exclusiveTests);\n\n    // @ts-expect-error this is readonly\n    next.deps = [...this.deps];\n    next.conditions = [...this.conditions];\n    next.tests = [...this.tests];\n    next.transforms = [...this.transforms];\n    next.spec = clone(Object.assign({}, this.spec, spec));\n    return next;\n  }\n  label(label) {\n    let next = this.clone();\n    next.spec.label = label;\n    return next;\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n  withMutation(fn) {\n    let before = this._mutate;\n    this._mutate = true;\n    let result = fn(this);\n    this._mutate = before;\n    return result;\n  }\n  concat(schema) {\n    if (!schema || schema === this) return this;\n    if (schema.type !== this.type && this.type !== 'mixed') throw new TypeError(`You cannot \\`concat()\\` schema's of different types: ${this.type} and ${schema.type}`);\n    let base = this;\n    let combined = schema.clone();\n    const mergedSpec = Object.assign({}, base.spec, combined.spec);\n    combined.spec = mergedSpec;\n    combined.internalTests = Object.assign({}, base.internalTests, combined.internalTests);\n\n    // manually merge the blacklist/whitelist (the other `schema` takes\n    // precedence in case of conflicts)\n    combined._whitelist = base._whitelist.merge(schema._whitelist, schema._blacklist);\n    combined._blacklist = base._blacklist.merge(schema._blacklist, schema._whitelist);\n\n    // start with the current tests\n    combined.tests = base.tests;\n    combined.exclusiveTests = base.exclusiveTests;\n\n    // manually add the new tests to ensure\n    // the deduping logic is consistent\n    combined.withMutation(next => {\n      schema.tests.forEach(fn => {\n        next.test(fn.OPTIONS);\n      });\n    });\n    combined.transforms = [...base.transforms, ...combined.transforms];\n    return combined;\n  }\n  isType(v) {\n    if (v == null) {\n      if (this.spec.nullable && v === null) return true;\n      if (this.spec.optional && v === undefined) return true;\n      return false;\n    }\n    return this._typeCheck(v);\n  }\n  resolve(options) {\n    let schema = this;\n    if (schema.conditions.length) {\n      let conditions = schema.conditions;\n      schema = schema.clone();\n      schema.conditions = [];\n      schema = conditions.reduce((prevSchema, condition) => condition.resolve(prevSchema, options), schema);\n      schema = schema.resolve(options);\n    }\n    return schema;\n  }\n  resolveOptions(options) {\n    var _options$strict, _options$abortEarly, _options$recursive, _options$disableStack;\n    return Object.assign({}, options, {\n      from: options.from || [],\n      strict: (_options$strict = options.strict) != null ? _options$strict : this.spec.strict,\n      abortEarly: (_options$abortEarly = options.abortEarly) != null ? _options$abortEarly : this.spec.abortEarly,\n      recursive: (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive,\n      disableStackTrace: (_options$disableStack = options.disableStackTrace) != null ? _options$disableStack : this.spec.disableStackTrace\n    });\n  }\n\n  /**\n   * Run the configured transform pipeline over an input value.\n   */\n\n  cast(value, options = {}) {\n    let resolvedSchema = this.resolve(Object.assign({\n      value\n    }, options));\n    let allowOptionality = options.assert === 'ignore-optionality';\n    let result = resolvedSchema._cast(value, options);\n    if (options.assert !== false && !resolvedSchema.isType(result)) {\n      if (allowOptionality && isAbsent(result)) {\n        return result;\n      }\n      let formattedValue = printValue(value);\n      let formattedResult = printValue(result);\n      throw new TypeError(`The value of ${options.path || 'field'} could not be cast to a value ` + `that satisfies the schema type: \"${resolvedSchema.type}\". \\n\\n` + `attempted value: ${formattedValue} \\n` + (formattedResult !== formattedValue ? `result of cast: ${formattedResult}` : ''));\n    }\n    return result;\n  }\n  _cast(rawValue, options) {\n    let value = rawValue === undefined ? rawValue : this.transforms.reduce((prevValue, fn) => fn.call(this, prevValue, rawValue, this), rawValue);\n    if (value === undefined) {\n      value = this.getDefault(options);\n    }\n    return value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      path,\n      originalValue = _value,\n      strict = this.spec.strict\n    } = options;\n    let value = _value;\n    if (!strict) {\n      value = this._cast(value, Object.assign({\n        assert: false\n      }, options));\n    }\n    let initialTests = [];\n    for (let test of Object.values(this.internalTests)) {\n      if (test) initialTests.push(test);\n    }\n    this.runTests({\n      path,\n      value,\n      originalValue,\n      options,\n      tests: initialTests\n    }, panic, initialErrors => {\n      // even if we aren't ending early we can't proceed further if the types aren't correct\n      if (initialErrors.length) {\n        return next(initialErrors, value);\n      }\n      this.runTests({\n        path,\n        value,\n        originalValue,\n        options,\n        tests: this.tests\n      }, panic, next);\n    });\n  }\n\n  /**\n   * Executes a set of validations, either schema, produced Tests or a nested\n   * schema validate result.\n   */\n  runTests(runOptions, panic, next) {\n    let fired = false;\n    let {\n      tests,\n      value,\n      originalValue,\n      path,\n      options\n    } = runOptions;\n    let panicOnce = arg => {\n      if (fired) return;\n      fired = true;\n      panic(arg, value);\n    };\n    let nextOnce = arg => {\n      if (fired) return;\n      fired = true;\n      next(arg, value);\n    };\n    let count = tests.length;\n    let nestedErrors = [];\n    if (!count) return nextOnce([]);\n    let args = {\n      value,\n      originalValue,\n      path,\n      options,\n      schema: this\n    };\n    for (let i = 0; i < tests.length; i++) {\n      const test = tests[i];\n      test(args, panicOnce, function finishTestRun(err) {\n        if (err) {\n          Array.isArray(err) ? nestedErrors.push(...err) : nestedErrors.push(err);\n        }\n        if (--count <= 0) {\n          nextOnce(nestedErrors);\n        }\n      });\n    }\n  }\n  asNestedTest({\n    key,\n    index,\n    parent,\n    parentPath,\n    originalParent,\n    options\n  }) {\n    const k = key != null ? key : index;\n    if (k == null) {\n      throw TypeError('Must include `key` or `index` for nested validations');\n    }\n    const isIndex = typeof k === 'number';\n    let value = parent[k];\n    const testOptions = Object.assign({}, options, {\n      // Nested validations fields are always strict:\n      //    1. parent isn't strict so the casting will also have cast inner values\n      //    2. parent is strict in which case the nested values weren't cast either\n      strict: true,\n      parent,\n      value,\n      originalValue: originalParent[k],\n      // FIXME: tests depend on `index` being passed around deeply,\n      //   we should not let the options.key/index bleed through\n      key: undefined,\n      // index: undefined,\n      [isIndex ? 'index' : 'key']: k,\n      path: isIndex || k.includes('.') ? `${parentPath || ''}[${isIndex ? k : `\"${k}\"`}]` : (parentPath ? `${parentPath}.` : '') + key\n    });\n    return (_, panic, next) => this.resolve(testOptions)._validate(value, testOptions, panic, next);\n  }\n  validate(value, options) {\n    var _options$disableStack2;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let disableStackTrace = (_options$disableStack2 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack2 : schema.spec.disableStackTrace;\n    return new Promise((resolve, reject) => schema._validate(value, options, (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      reject(error);\n    }, (errors, validated) => {\n      if (errors.length) reject(new ValidationError(errors, validated, undefined, undefined, disableStackTrace));else resolve(validated);\n    }));\n  }\n  validateSync(value, options) {\n    var _options$disableStack3;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let result;\n    let disableStackTrace = (_options$disableStack3 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack3 : schema.spec.disableStackTrace;\n    schema._validate(value, Object.assign({}, options, {\n      sync: true\n    }), (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      throw error;\n    }, (errors, validated) => {\n      if (errors.length) throw new ValidationError(errors, value, undefined, undefined, disableStackTrace);\n      result = validated;\n    });\n    return result;\n  }\n  isValid(value, options) {\n    return this.validate(value, options).then(() => true, err => {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    });\n  }\n  isValidSync(value, options) {\n    try {\n      this.validateSync(value, options);\n      return true;\n    } catch (err) {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    }\n  }\n  _getDefault(options) {\n    let defaultValue = this.spec.default;\n    if (defaultValue == null) {\n      return defaultValue;\n    }\n    return typeof defaultValue === 'function' ? defaultValue.call(this, options) : clone(defaultValue);\n  }\n  getDefault(options\n  // If schema is defaulted we know it's at least not undefined\n  ) {\n    let schema = this.resolve(options || {});\n    return schema._getDefault(options);\n  }\n  default(def) {\n    if (arguments.length === 0) {\n      return this._getDefault();\n    }\n    let next = this.clone({\n      default: def\n    });\n    return next;\n  }\n  strict(isStrict = true) {\n    return this.clone({\n      strict: isStrict\n    });\n  }\n  nullability(nullable, message) {\n    const next = this.clone({\n      nullable\n    });\n    next.internalTests.nullable = createValidation({\n      message,\n      name: 'nullable',\n      test(value) {\n        return value === null ? this.schema.spec.nullable : true;\n      }\n    });\n    return next;\n  }\n  optionality(optional, message) {\n    const next = this.clone({\n      optional\n    });\n    next.internalTests.optionality = createValidation({\n      message,\n      name: 'optionality',\n      test(value) {\n        return value === undefined ? this.schema.spec.optional : true;\n      }\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  defined(message = mixed.defined) {\n    return this.optionality(false, message);\n  }\n  nullable() {\n    return this.nullability(true);\n  }\n  nonNullable(message = mixed.notNull) {\n    return this.nullability(false, message);\n  }\n  required(message = mixed.required) {\n    return this.clone().withMutation(next => next.nonNullable(message).defined(message));\n  }\n  notRequired() {\n    return this.clone().withMutation(next => next.nullable().optional());\n  }\n  transform(fn) {\n    let next = this.clone();\n    next.transforms.push(fn);\n    return next;\n  }\n\n  /**\n   * Adds a test function to the schema's queue of tests.\n   * tests can be exclusive or non-exclusive.\n   *\n   * - exclusive tests, will replace any existing tests of the same name.\n   * - non-exclusive: can be stacked\n   *\n   * If a non-exclusive test is added to a schema with an exclusive test of the same name\n   * the exclusive test is removed and further tests of the same name will be stacked.\n   *\n   * If an exclusive test is added to a schema with non-exclusive tests of the same name\n   * the previous tests are removed and further tests of the same name will replace each other.\n   */\n\n  test(...args) {\n    let opts;\n    if (args.length === 1) {\n      if (typeof args[0] === 'function') {\n        opts = {\n          test: args[0]\n        };\n      } else {\n        opts = args[0];\n      }\n    } else if (args.length === 2) {\n      opts = {\n        name: args[0],\n        test: args[1]\n      };\n    } else {\n      opts = {\n        name: args[0],\n        message: args[1],\n        test: args[2]\n      };\n    }\n    if (opts.message === undefined) opts.message = mixed.default;\n    if (typeof opts.test !== 'function') throw new TypeError('`test` is a required parameters');\n    let next = this.clone();\n    let validate = createValidation(opts);\n    let isExclusive = opts.exclusive || opts.name && next.exclusiveTests[opts.name] === true;\n    if (opts.exclusive) {\n      if (!opts.name) throw new TypeError('Exclusive tests must provide a unique `name` identifying the test');\n    }\n    if (opts.name) next.exclusiveTests[opts.name] = !!opts.exclusive;\n    next.tests = next.tests.filter(fn => {\n      if (fn.OPTIONS.name === opts.name) {\n        if (isExclusive) return false;\n        if (fn.OPTIONS.test === validate.OPTIONS.test) return false;\n      }\n      return true;\n    });\n    next.tests.push(validate);\n    return next;\n  }\n  when(keys, options) {\n    if (!Array.isArray(keys) && typeof keys !== 'string') {\n      options = keys;\n      keys = '.';\n    }\n    let next = this.clone();\n    let deps = toArray(keys).map(key => new Reference(key));\n    deps.forEach(dep => {\n      // @ts-ignore readonly array\n      if (dep.isSibling) next.deps.push(dep.key);\n    });\n    next.conditions.push(typeof options === 'function' ? new Condition(deps, options) : Condition.fromOptions(deps, options));\n    return next;\n  }\n  typeError(message) {\n    let next = this.clone();\n    next.internalTests.typeError = createValidation({\n      message,\n      name: 'typeError',\n      skipAbsent: true,\n      test(value) {\n        if (!this.schema._typeCheck(value)) return this.createError({\n          params: {\n            type: this.schema.type\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  oneOf(enums, message = mixed.oneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._whitelist.add(val);\n      next._blacklist.delete(val);\n    });\n    next.internalTests.whiteList = createValidation({\n      message,\n      name: 'oneOf',\n      skipAbsent: true,\n      test(value) {\n        let valids = this.schema._whitelist;\n        let resolved = valids.resolveAll(this.resolve);\n        return resolved.includes(value) ? true : this.createError({\n          params: {\n            values: Array.from(valids).join(', '),\n            resolved\n          }\n        });\n      }\n    });\n    return next;\n  }\n  notOneOf(enums, message = mixed.notOneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._blacklist.add(val);\n      next._whitelist.delete(val);\n    });\n    next.internalTests.blacklist = createValidation({\n      message,\n      name: 'notOneOf',\n      test(value) {\n        let invalids = this.schema._blacklist;\n        let resolved = invalids.resolveAll(this.resolve);\n        if (resolved.includes(value)) return this.createError({\n          params: {\n            values: Array.from(invalids).join(', '),\n            resolved\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  strip(strip = true) {\n    let next = this.clone();\n    next.spec.strip = strip;\n    return next;\n  }\n\n  /**\n   * Return a serialized description of the schema including validations, flags, types etc.\n   *\n   * @param options Provide any needed context for resolving runtime schema alterations (lazy, when conditions, etc).\n   */\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const {\n      label,\n      meta,\n      optional,\n      nullable\n    } = next.spec;\n    const description = {\n      meta,\n      label,\n      optional,\n      nullable,\n      default: next.getDefault(options),\n      type: next.type,\n      oneOf: next._whitelist.describe(),\n      notOneOf: next._blacklist.describe(),\n      tests: next.tests.map(fn => ({\n        name: fn.OPTIONS.name,\n        params: fn.OPTIONS.params\n      })).filter((n, idx, list) => list.findIndex(c => c.name === n.name) === idx)\n    };\n    return description;\n  }\n}\n// @ts-expect-error\nSchema.prototype.__isYupSchema__ = true;\nfor (const method of ['validate', 'validateSync']) Schema.prototype[`${method}At`] = function (path, value, options = {}) {\n  const {\n    parent,\n    parentPath,\n    schema\n  } = getIn(this, path, value, options.context);\n  return schema[method](parent && parent[parentPath], Object.assign({}, options, {\n    parent,\n    path\n  }));\n};\nfor (const alias of ['equals', 'is']) Schema.prototype[alias] = Schema.prototype.oneOf;\nfor (const alias of ['not', 'nope']) Schema.prototype[alias] = Schema.prototype.notOneOf;\n\nconst returnsTrue = () => true;\nfunction create$8(spec) {\n  return new MixedSchema(spec);\n}\nclass MixedSchema extends Schema {\n  constructor(spec) {\n    super(typeof spec === 'function' ? {\n      type: 'mixed',\n      check: spec\n    } : Object.assign({\n      type: 'mixed',\n      check: returnsTrue\n    }, spec));\n  }\n}\ncreate$8.prototype = MixedSchema.prototype;\n\nfunction create$7() {\n  return new BooleanSchema();\n}\nclass BooleanSchema extends Schema {\n  constructor() {\n    super({\n      type: 'boolean',\n      check(v) {\n        if (v instanceof Boolean) v = v.valueOf();\n        return typeof v === 'boolean';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (ctx.spec.coerce && !ctx.isType(value)) {\n          if (/^(true|1)$/i.test(String(value))) return true;\n          if (/^(false|0)$/i.test(String(value))) return false;\n        }\n        return value;\n      });\n    });\n  }\n  isTrue(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'true'\n      },\n      test(value) {\n        return isAbsent(value) || value === true;\n      }\n    });\n  }\n  isFalse(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'false'\n      },\n      test(value) {\n        return isAbsent(value) || value === false;\n      }\n    });\n  }\n  default(def) {\n    return super.default(def);\n  }\n  defined(msg) {\n    return super.defined(msg);\n  }\n  optional() {\n    return super.optional();\n  }\n  required(msg) {\n    return super.required(msg);\n  }\n  notRequired() {\n    return super.notRequired();\n  }\n  nullable() {\n    return super.nullable();\n  }\n  nonNullable(msg) {\n    return super.nonNullable(msg);\n  }\n  strip(v) {\n    return super.strip(v);\n  }\n}\ncreate$7.prototype = BooleanSchema.prototype;\n\n/**\n * This file is a modified version of the file from the following repository:\n * Date.parse with progressive enhancement for ISO 8601 <https://github.com/csnover/js-iso8601>\n * NON-CONFORMANT EDITION.\n * © 2011 Colin Snover <http://zetafleet.com>\n * Released under MIT license.\n */\n\n// prettier-ignore\n//                1 YYYY                2 MM        3 DD              4 HH     5 mm        6 ss           7 msec         8 Z 9 ±   10 tzHH    11 tzmm\nconst isoReg = /^(\\d{4}|[+-]\\d{6})(?:-?(\\d{2})(?:-?(\\d{2}))?)?(?:[ T]?(\\d{2}):?(\\d{2})(?::?(\\d{2})(?:[,.](\\d{1,}))?)?(?:(Z)|([+-])(\\d{2})(?::?(\\d{2}))?)?)?$/;\nfunction parseIsoDate(date) {\n  const struct = parseDateStruct(date);\n  if (!struct) return Date.parse ? Date.parse(date) : Number.NaN;\n\n  // timestamps without timezone identifiers should be considered local time\n  if (struct.z === undefined && struct.plusMinus === undefined) {\n    return new Date(struct.year, struct.month, struct.day, struct.hour, struct.minute, struct.second, struct.millisecond).valueOf();\n  }\n  let totalMinutesOffset = 0;\n  if (struct.z !== 'Z' && struct.plusMinus !== undefined) {\n    totalMinutesOffset = struct.hourOffset * 60 + struct.minuteOffset;\n    if (struct.plusMinus === '+') totalMinutesOffset = 0 - totalMinutesOffset;\n  }\n  return Date.UTC(struct.year, struct.month, struct.day, struct.hour, struct.minute + totalMinutesOffset, struct.second, struct.millisecond);\n}\nfunction parseDateStruct(date) {\n  var _regexResult$7$length, _regexResult$;\n  const regexResult = isoReg.exec(date);\n  if (!regexResult) return null;\n\n  // use of toNumber() avoids NaN timestamps caused by “undefined”\n  // values being passed to Date constructor\n  return {\n    year: toNumber(regexResult[1]),\n    month: toNumber(regexResult[2], 1) - 1,\n    day: toNumber(regexResult[3], 1),\n    hour: toNumber(regexResult[4]),\n    minute: toNumber(regexResult[5]),\n    second: toNumber(regexResult[6]),\n    millisecond: regexResult[7] ?\n    // allow arbitrary sub-second precision beyond milliseconds\n    toNumber(regexResult[7].substring(0, 3)) : 0,\n    precision: (_regexResult$7$length = (_regexResult$ = regexResult[7]) == null ? void 0 : _regexResult$.length) != null ? _regexResult$7$length : undefined,\n    z: regexResult[8] || undefined,\n    plusMinus: regexResult[9] || undefined,\n    hourOffset: toNumber(regexResult[10]),\n    minuteOffset: toNumber(regexResult[11])\n  };\n}\nfunction toNumber(str, defaultValue = 0) {\n  return Number(str) || defaultValue;\n}\n\n// Taken from HTML spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nlet rEmail =\n// eslint-disable-next-line\n/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nlet rUrl =\n// eslint-disable-next-line\n/^((https?|ftp):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n\n// eslint-disable-next-line\nlet rUUID = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nlet yearMonthDay = '^\\\\d{4}-\\\\d{2}-\\\\d{2}';\nlet hourMinuteSecond = '\\\\d{2}:\\\\d{2}:\\\\d{2}';\nlet zOrOffset = '(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)';\nlet rIsoDateTime = new RegExp(`${yearMonthDay}T${hourMinuteSecond}(\\\\.\\\\d+)?${zOrOffset}$`);\nlet isTrimmed = value => isAbsent(value) || value === value.trim();\nlet objStringTag = {}.toString();\nfunction create$6() {\n  return new StringSchema();\n}\nclass StringSchema extends Schema {\n  constructor() {\n    super({\n      type: 'string',\n      check(value) {\n        if (value instanceof String) value = value.valueOf();\n        return typeof value === 'string';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce || ctx.isType(value)) return value;\n\n        // don't ever convert arrays\n        if (Array.isArray(value)) return value;\n        const strValue = value != null && value.toString ? value.toString() : value;\n\n        // no one wants plain objects converted to [Object object]\n        if (strValue === objStringTag) return value;\n        return strValue;\n      });\n    });\n  }\n  required(message) {\n    return super.required(message).withMutation(schema => schema.test({\n      message: message || mixed.required,\n      name: 'required',\n      skipAbsent: true,\n      test: value => !!value.length\n    }));\n  }\n  notRequired() {\n    return super.notRequired().withMutation(schema => {\n      schema.tests = schema.tests.filter(t => t.OPTIONS.name !== 'required');\n      return schema;\n    });\n  }\n  length(length, message = string.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message = string.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = string.max) {\n    return this.test({\n      name: 'max',\n      exclusive: true,\n      message,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  matches(regex, options) {\n    let excludeEmptyString = false;\n    let message;\n    let name;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          excludeEmptyString = false,\n          message,\n          name\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.test({\n      name: name || 'matches',\n      message: message || string.matches,\n      params: {\n        regex\n      },\n      skipAbsent: true,\n      test: value => value === '' && excludeEmptyString || value.search(regex) !== -1\n    });\n  }\n  email(message = string.email) {\n    return this.matches(rEmail, {\n      name: 'email',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  url(message = string.url) {\n    return this.matches(rUrl, {\n      name: 'url',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  uuid(message = string.uuid) {\n    return this.matches(rUUID, {\n      name: 'uuid',\n      message,\n      excludeEmptyString: false\n    });\n  }\n  datetime(options) {\n    let message = '';\n    let allowOffset;\n    let precision;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          message = '',\n          allowOffset = false,\n          precision = undefined\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.matches(rIsoDateTime, {\n      name: 'datetime',\n      message: message || string.datetime,\n      excludeEmptyString: true\n    }).test({\n      name: 'datetime_offset',\n      message: message || string.datetime_offset,\n      params: {\n        allowOffset\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || allowOffset) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return !!struct.z;\n      }\n    }).test({\n      name: 'datetime_precision',\n      message: message || string.datetime_precision,\n      params: {\n        precision\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || precision == undefined) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return struct.precision === precision;\n      }\n    });\n  }\n\n  //-- transforms --\n  ensure() {\n    return this.default('').transform(val => val === null ? '' : val);\n  }\n  trim(message = string.trim) {\n    return this.transform(val => val != null ? val.trim() : val).test({\n      message,\n      name: 'trim',\n      test: isTrimmed\n    });\n  }\n  lowercase(message = string.lowercase) {\n    return this.transform(value => !isAbsent(value) ? value.toLowerCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toLowerCase()\n    });\n  }\n  uppercase(message = string.uppercase) {\n    return this.transform(value => !isAbsent(value) ? value.toUpperCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toUpperCase()\n    });\n  }\n}\ncreate$6.prototype = StringSchema.prototype;\n\n//\n// String Interfaces\n//\n\nlet isNaN$1 = value => value != +value;\nfunction create$5() {\n  return new NumberSchema();\n}\nclass NumberSchema extends Schema {\n  constructor() {\n    super({\n      type: 'number',\n      check(value) {\n        if (value instanceof Number) value = value.valueOf();\n        return typeof value === 'number' && !isNaN$1(value);\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        if (!ctx.spec.coerce) return value;\n        let parsed = value;\n        if (typeof parsed === 'string') {\n          parsed = parsed.replace(/\\s/g, '');\n          if (parsed === '') return NaN;\n          // don't use parseFloat to avoid positives on alpha-numeric strings\n          parsed = +parsed;\n        }\n\n        // null -> NaN isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (ctx.isType(parsed) || parsed === null) return parsed;\n        return parseFloat(parsed);\n      });\n    });\n  }\n  min(min, message = number.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = number.max) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(max);\n      }\n    });\n  }\n  lessThan(less, message = number.lessThan) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        less\n      },\n      skipAbsent: true,\n      test(value) {\n        return value < this.resolve(less);\n      }\n    });\n  }\n  moreThan(more, message = number.moreThan) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        more\n      },\n      skipAbsent: true,\n      test(value) {\n        return value > this.resolve(more);\n      }\n    });\n  }\n  positive(msg = number.positive) {\n    return this.moreThan(0, msg);\n  }\n  negative(msg = number.negative) {\n    return this.lessThan(0, msg);\n  }\n  integer(message = number.integer) {\n    return this.test({\n      name: 'integer',\n      message,\n      skipAbsent: true,\n      test: val => Number.isInteger(val)\n    });\n  }\n  truncate() {\n    return this.transform(value => !isAbsent(value) ? value | 0 : value);\n  }\n  round(method) {\n    var _method;\n    let avail = ['ceil', 'floor', 'round', 'trunc'];\n    method = ((_method = method) == null ? void 0 : _method.toLowerCase()) || 'round';\n\n    // this exists for symemtry with the new Math.trunc\n    if (method === 'trunc') return this.truncate();\n    if (avail.indexOf(method.toLowerCase()) === -1) throw new TypeError('Only valid options for round() are: ' + avail.join(', '));\n    return this.transform(value => !isAbsent(value) ? Math[method](value) : value);\n  }\n}\ncreate$5.prototype = NumberSchema.prototype;\n\n//\n// Number Interfaces\n//\n\nlet invalidDate = new Date('');\nlet isDate = obj => Object.prototype.toString.call(obj) === '[object Date]';\nfunction create$4() {\n  return new DateSchema();\n}\nclass DateSchema extends Schema {\n  constructor() {\n    super({\n      type: 'date',\n      check(v) {\n        return isDate(v) && !isNaN(v.getTime());\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw, ctx) => {\n        // null -> InvalidDate isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (!ctx.spec.coerce || ctx.isType(value) || value === null) return value;\n        value = parseIsoDate(value);\n\n        // 0 is a valid timestamp equivalent to 1970-01-01T00:00:00Z(unix epoch) or before.\n        return !isNaN(value) ? new Date(value) : DateSchema.INVALID_DATE;\n      });\n    });\n  }\n  prepareParam(ref, name) {\n    let param;\n    if (!Reference.isRef(ref)) {\n      let cast = this.cast(ref);\n      if (!this._typeCheck(cast)) throw new TypeError(`\\`${name}\\` must be a Date or a value that can be \\`cast()\\` to a Date`);\n      param = cast;\n    } else {\n      param = ref;\n    }\n    return param;\n  }\n  min(min, message = date.min) {\n    let limit = this.prepareParam(min, 'min');\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(limit);\n      }\n    });\n  }\n  max(max, message = date.max) {\n    let limit = this.prepareParam(max, 'max');\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(limit);\n      }\n    });\n  }\n}\nDateSchema.INVALID_DATE = invalidDate;\ncreate$4.prototype = DateSchema.prototype;\ncreate$4.INVALID_DATE = invalidDate;\n\n// @ts-expect-error\nfunction sortFields(fields, excludedEdges = []) {\n  let edges = [];\n  let nodes = new Set();\n  let excludes = new Set(excludedEdges.map(([a, b]) => `${a}-${b}`));\n  function addNode(depPath, key) {\n    let node = split(depPath)[0];\n    nodes.add(node);\n    if (!excludes.has(`${key}-${node}`)) edges.push([key, node]);\n  }\n  for (const key of Object.keys(fields)) {\n    let value = fields[key];\n    nodes.add(key);\n    if (Reference.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && 'deps' in value) value.deps.forEach(path => addNode(path, key));\n  }\n  return toposort.array(Array.from(nodes), edges).reverse();\n}\n\nfunction findIndex(arr, err) {\n  let idx = Infinity;\n  arr.some((key, ii) => {\n    var _err$path;\n    if ((_err$path = err.path) != null && _err$path.includes(key)) {\n      idx = ii;\n      return true;\n    }\n  });\n  return idx;\n}\nfunction sortByKeyOrder(keys) {\n  return (a, b) => {\n    return findIndex(keys, a) - findIndex(keys, b);\n  };\n}\n\nconst parseJson = (value, _, ctx) => {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  let parsed = value;\n  try {\n    parsed = JSON.parse(value);\n  } catch (err) {\n    /* */\n  }\n  return ctx.isType(parsed) ? parsed : value;\n};\n\n// @ts-ignore\nfunction deepPartial(schema) {\n  if ('fields' in schema) {\n    const partial = {};\n    for (const [key, fieldSchema] of Object.entries(schema.fields)) {\n      partial[key] = deepPartial(fieldSchema);\n    }\n    return schema.setFields(partial);\n  }\n  if (schema.type === 'array') {\n    const nextArray = schema.optional();\n    if (nextArray.innerType) nextArray.innerType = deepPartial(nextArray.innerType);\n    return nextArray;\n  }\n  if (schema.type === 'tuple') {\n    return schema.optional().clone({\n      types: schema.spec.types.map(deepPartial)\n    });\n  }\n  if ('optional' in schema) {\n    return schema.optional();\n  }\n  return schema;\n}\nconst deepHas = (obj, p) => {\n  const path = [...normalizePath(p)];\n  if (path.length === 1) return path[0] in obj;\n  let last = path.pop();\n  let parent = getter(join(path), true)(obj);\n  return !!(parent && last in parent);\n};\nlet isObject = obj => Object.prototype.toString.call(obj) === '[object Object]';\nfunction unknown(ctx, value) {\n  let known = Object.keys(ctx.fields);\n  return Object.keys(value).filter(key => known.indexOf(key) === -1);\n}\nconst defaultSort = sortByKeyOrder([]);\nfunction create$3(spec) {\n  return new ObjectSchema(spec);\n}\nclass ObjectSchema extends Schema {\n  constructor(spec) {\n    super({\n      type: 'object',\n      check(value) {\n        return isObject(value) || typeof value === 'function';\n      }\n    });\n    this.fields = Object.create(null);\n    this._sortErrors = defaultSort;\n    this._nodes = [];\n    this._excludedEdges = [];\n    this.withMutation(() => {\n      if (spec) {\n        this.shape(spec);\n      }\n    });\n  }\n  _cast(_value, options = {}) {\n    var _options$stripUnknown;\n    let value = super._cast(_value, options);\n\n    //should ignore nulls here\n    if (value === undefined) return this.getDefault(options);\n    if (!this._typeCheck(value)) return value;\n    let fields = this.fields;\n    let strip = (_options$stripUnknown = options.stripUnknown) != null ? _options$stripUnknown : this.spec.noUnknown;\n    let props = [].concat(this._nodes, Object.keys(value).filter(v => !this._nodes.includes(v)));\n    let intermediateValue = {}; // is filled during the transform below\n    let innerOptions = Object.assign({}, options, {\n      parent: intermediateValue,\n      __validating: options.__validating || false\n    });\n    let isChanged = false;\n    for (const prop of props) {\n      let field = fields[prop];\n      let exists = (prop in value);\n      if (field) {\n        let fieldValue;\n        let inputValue = value[prop];\n\n        // safe to mutate since this is fired in sequence\n        innerOptions.path = (options.path ? `${options.path}.` : '') + prop;\n        field = field.resolve({\n          value: inputValue,\n          context: options.context,\n          parent: intermediateValue\n        });\n        let fieldSpec = field instanceof Schema ? field.spec : undefined;\n        let strict = fieldSpec == null ? void 0 : fieldSpec.strict;\n        if (fieldSpec != null && fieldSpec.strip) {\n          isChanged = isChanged || prop in value;\n          continue;\n        }\n        fieldValue = !options.__validating || !strict ?\n        // TODO: use _cast, this is double resolving\n        field.cast(value[prop], innerOptions) : value[prop];\n        if (fieldValue !== undefined) {\n          intermediateValue[prop] = fieldValue;\n        }\n      } else if (exists && !strip) {\n        intermediateValue[prop] = value[prop];\n      }\n      if (exists !== prop in intermediateValue || intermediateValue[prop] !== value[prop]) {\n        isChanged = true;\n      }\n    }\n    return isChanged ? intermediateValue : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      from = [],\n      originalValue = _value,\n      recursive = this.spec.recursive\n    } = options;\n    options.from = [{\n      schema: this,\n      value: originalValue\n    }, ...from];\n    // this flag is needed for handling `strict` correctly in the context of\n    // validation vs just casting. e.g strict() on a field is only used when validating\n    options.__validating = true;\n    options.originalValue = originalValue;\n    super._validate(_value, options, panic, (objectErrors, value) => {\n      if (!recursive || !isObject(value)) {\n        next(objectErrors, value);\n        return;\n      }\n      originalValue = originalValue || value;\n      let tests = [];\n      for (let key of this._nodes) {\n        let field = this.fields[key];\n        if (!field || Reference.isRef(field)) {\n          continue;\n        }\n        tests.push(field.asNestedTest({\n          options,\n          key,\n          parent: value,\n          parentPath: options.path,\n          originalParent: originalValue\n        }));\n      }\n      this.runTests({\n        tests,\n        value,\n        originalValue,\n        options\n      }, panic, fieldErrors => {\n        next(fieldErrors.sort(this._sortErrors).concat(objectErrors), value);\n      });\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    next.fields = Object.assign({}, this.fields);\n    next._nodes = this._nodes;\n    next._excludedEdges = this._excludedEdges;\n    next._sortErrors = this._sortErrors;\n    return next;\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n    let nextFields = next.fields;\n    for (let [field, schemaOrRef] of Object.entries(this.fields)) {\n      const target = nextFields[field];\n      nextFields[field] = target === undefined ? schemaOrRef : target;\n    }\n    return next.withMutation(s =>\n    // XXX: excludes here is wrong\n    s.setFields(nextFields, [...this._excludedEdges, ...schema._excludedEdges]));\n  }\n  _getDefault(options) {\n    if ('default' in this.spec) {\n      return super._getDefault(options);\n    }\n\n    // if there is no default set invent one\n    if (!this._nodes.length) {\n      return undefined;\n    }\n    let dft = {};\n    this._nodes.forEach(key => {\n      var _innerOptions;\n      const field = this.fields[key];\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      dft[key] = field && 'getDefault' in field ? field.getDefault(innerOptions) : undefined;\n    });\n    return dft;\n  }\n  setFields(shape, excludedEdges) {\n    let next = this.clone();\n    next.fields = shape;\n    next._nodes = sortFields(shape, excludedEdges);\n    next._sortErrors = sortByKeyOrder(Object.keys(shape));\n    // XXX: this carries over edges which may not be what you want\n    if (excludedEdges) next._excludedEdges = excludedEdges;\n    return next;\n  }\n  shape(additions, excludes = []) {\n    return this.clone().withMutation(next => {\n      let edges = next._excludedEdges;\n      if (excludes.length) {\n        if (!Array.isArray(excludes[0])) excludes = [excludes];\n        edges = [...next._excludedEdges, ...excludes];\n      }\n\n      // XXX: excludes here is wrong\n      return next.setFields(Object.assign(next.fields, additions), edges);\n    });\n  }\n  partial() {\n    const partial = {};\n    for (const [key, schema] of Object.entries(this.fields)) {\n      partial[key] = 'optional' in schema && schema.optional instanceof Function ? schema.optional() : schema;\n    }\n    return this.setFields(partial);\n  }\n  deepPartial() {\n    const next = deepPartial(this);\n    return next;\n  }\n  pick(keys) {\n    const picked = {};\n    for (const key of keys) {\n      if (this.fields[key]) picked[key] = this.fields[key];\n    }\n    return this.setFields(picked, this._excludedEdges.filter(([a, b]) => keys.includes(a) && keys.includes(b)));\n  }\n  omit(keys) {\n    const remaining = [];\n    for (const key of Object.keys(this.fields)) {\n      if (keys.includes(key)) continue;\n      remaining.push(key);\n    }\n    return this.pick(remaining);\n  }\n  from(from, to, alias) {\n    let fromGetter = getter(from, true);\n    return this.transform(obj => {\n      if (!obj) return obj;\n      let newObj = obj;\n      if (deepHas(obj, from)) {\n        newObj = Object.assign({}, obj);\n        if (!alias) delete newObj[from];\n        newObj[to] = fromGetter(obj);\n      }\n      return newObj;\n    });\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  noUnknown(noAllow = true, message = object.noUnknown) {\n    if (typeof noAllow !== 'boolean') {\n      message = noAllow;\n      noAllow = true;\n    }\n    let next = this.test({\n      name: 'noUnknown',\n      exclusive: true,\n      message: message,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return !noAllow || unknownKeys.length === 0 || this.createError({\n          params: {\n            unknown: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n    next.spec.noUnknown = noAllow;\n    return next;\n  }\n  unknown(allow = true, message = object.noUnknown) {\n    return this.noUnknown(!allow, message);\n  }\n  transformKeys(fn) {\n    return this.transform(obj => {\n      if (!obj) return obj;\n      const result = {};\n      for (const key of Object.keys(obj)) result[fn(key)] = obj[key];\n      return result;\n    });\n  }\n  camelCase() {\n    return this.transformKeys(camelCase);\n  }\n  snakeCase() {\n    return this.transformKeys(snakeCase);\n  }\n  constantCase() {\n    return this.transformKeys(key => snakeCase(key).toUpperCase());\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.fields = {};\n    for (const [key, value] of Object.entries(next.fields)) {\n      var _innerOptions2;\n      let innerOptions = options;\n      if ((_innerOptions2 = innerOptions) != null && _innerOptions2.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      base.fields[key] = value.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$3.prototype = ObjectSchema.prototype;\n\nfunction create$2(type) {\n  return new ArraySchema(type);\n}\nclass ArraySchema extends Schema {\n  constructor(type) {\n    super({\n      type: 'array',\n      spec: {\n        types: type\n      },\n      check(v) {\n        return Array.isArray(v);\n      }\n    });\n\n    // `undefined` specifically means uninitialized, as opposed to \"no subtype\"\n    this.innerType = void 0;\n    this.innerType = type;\n  }\n  _cast(_value, _opts) {\n    const value = super._cast(_value, _opts);\n\n    // should ignore nulls here\n    if (!this._typeCheck(value) || !this.innerType) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = value.map((v, idx) => {\n      const castElement = this.innerType.cast(v, Object.assign({}, _opts, {\n        path: `${_opts.path || ''}[${idx}]`\n      }));\n      if (castElement !== v) {\n        isChanged = true;\n      }\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    var _options$recursive;\n    // let sync = options.sync;\n    // let path = options.path;\n    let innerType = this.innerType;\n    // let endEarly = options.abortEarly ?? this.spec.abortEarly;\n    let recursive = (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive;\n    options.originalValue != null ? options.originalValue : _value;\n    super._validate(_value, options, panic, (arrayErrors, value) => {\n      var _options$originalValu2;\n      if (!recursive || !innerType || !this._typeCheck(value)) {\n        next(arrayErrors, value);\n        return;\n      }\n\n      // #950 Ensure that sparse array empty slots are validated\n      let tests = new Array(value.length);\n      for (let index = 0; index < value.length; index++) {\n        var _options$originalValu;\n        tests[index] = innerType.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(arrayErrors), value));\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    return next;\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    if (schema.innerType)\n      // @ts-expect-error readonly\n      next.innerType = next.innerType ?\n      // @ts-expect-error Lazy doesn't have concat and will break\n      next.innerType.concat(schema.innerType) : schema.innerType;\n    return next;\n  }\n  of(schema) {\n    // FIXME: this should return a new instance of array without the default to be\n    let next = this.clone();\n    if (!isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema not: ' + printValue(schema));\n\n    // @ts-expect-error readonly\n    next.innerType = schema;\n    next.spec = Object.assign({}, next.spec, {\n      types: schema\n    });\n    return next;\n  }\n  length(length, message = array.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message) {\n    message = message || array.min;\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      // FIXME(ts): Array<typeof T>\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message) {\n    message = message || array.max;\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  ensure() {\n    return this.default(() => []).transform((val, original) => {\n      // We don't want to return `null` for nullable schema\n      if (this._typeCheck(val)) return val;\n      return original == null ? [] : [].concat(original);\n    });\n  }\n  compact(rejector) {\n    let reject = !rejector ? v => !!v : (v, i, a) => !rejector(v, i, a);\n    return this.transform(values => values != null ? values.filter(reject) : values);\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    if (next.innerType) {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[0]\n        });\n      }\n      base.innerType = next.innerType.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$2.prototype = ArraySchema.prototype;\n\n// @ts-ignore\nfunction create$1(schemas) {\n  return new TupleSchema(schemas);\n}\nclass TupleSchema extends Schema {\n  constructor(schemas) {\n    super({\n      type: 'tuple',\n      spec: {\n        types: schemas\n      },\n      check(v) {\n        const types = this.spec.types;\n        return Array.isArray(v) && v.length === types.length;\n      }\n    });\n    this.withMutation(() => {\n      this.typeError(tuple.notType);\n    });\n  }\n  _cast(inputValue, options) {\n    const {\n      types\n    } = this.spec;\n    const value = super._cast(inputValue, options);\n    if (!this._typeCheck(value)) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = types.map((type, idx) => {\n      const castElement = type.cast(value[idx], Object.assign({}, options, {\n        path: `${options.path || ''}[${idx}]`\n      }));\n      if (castElement !== value[idx]) isChanged = true;\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let itemTypes = this.spec.types;\n    super._validate(_value, options, panic, (tupleErrors, value) => {\n      var _options$originalValu2;\n      // intentionally not respecting recursive\n      if (!this._typeCheck(value)) {\n        next(tupleErrors, value);\n        return;\n      }\n      let tests = [];\n      for (let [index, itemSchema] of itemTypes.entries()) {\n        var _options$originalValu;\n        tests[index] = itemSchema.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(tupleErrors), value));\n    });\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.innerType = next.spec.types.map((schema, index) => {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[index]\n        });\n      }\n      return schema.describe(innerOptions);\n    });\n    return base;\n  }\n}\ncreate$1.prototype = TupleSchema.prototype;\n\nfunction create(builder) {\n  return new Lazy(builder);\n}\nclass Lazy {\n  constructor(builder) {\n    this.type = 'lazy';\n    this.__isYupSchema__ = true;\n    this.spec = void 0;\n    this._resolve = (value, options = {}) => {\n      let schema = this.builder(value, options);\n      if (!isSchema(schema)) throw new TypeError('lazy() functions must return a valid schema');\n      if (this.spec.optional) schema = schema.optional();\n      return schema.resolve(options);\n    };\n    this.builder = builder;\n    this.spec = {\n      meta: undefined,\n      optional: false\n    };\n  }\n  clone(spec) {\n    const next = new Lazy(this.builder);\n    next.spec = Object.assign({}, this.spec, spec);\n    return next;\n  }\n  optionality(optional) {\n    const next = this.clone({\n      optional\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  resolve(options) {\n    return this._resolve(options.value, options);\n  }\n  cast(value, options) {\n    return this._resolve(value, options).cast(value, options);\n  }\n  asNestedTest(config) {\n    let {\n      key,\n      index,\n      parent,\n      options\n    } = config;\n    let value = parent[index != null ? index : key];\n    return this._resolve(value, Object.assign({}, options, {\n      value,\n      parent\n    })).asNestedTest(config);\n  }\n  validate(value, options) {\n    return this._resolve(value, options).validate(value, options);\n  }\n  validateSync(value, options) {\n    return this._resolve(value, options).validateSync(value, options);\n  }\n  validateAt(path, value, options) {\n    return this._resolve(value, options).validateAt(path, value, options);\n  }\n  validateSyncAt(path, value, options) {\n    return this._resolve(value, options).validateSyncAt(path, value, options);\n  }\n  isValid(value, options) {\n    return this._resolve(value, options).isValid(value, options);\n  }\n  isValidSync(value, options) {\n    return this._resolve(value, options).isValidSync(value, options);\n  }\n  describe(options) {\n    return options ? this.resolve(options).describe(options) : {\n      type: 'lazy',\n      meta: this.spec.meta,\n      label: undefined\n    };\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n}\n\nfunction setLocale(custom) {\n  Object.keys(custom).forEach(type => {\n    // @ts-ignore\n    Object.keys(custom[type]).forEach(method => {\n      // @ts-ignore\n      locale[type][method] = custom[type][method];\n    });\n  });\n}\n\nfunction addMethod(schemaType, name, fn) {\n  if (!schemaType || !isSchema(schemaType.prototype)) throw new TypeError('You must provide a yup schema constructor function');\n  if (typeof name !== 'string') throw new TypeError('A Method name must be provided');\n  if (typeof fn !== 'function') throw new TypeError('Method function must be provided');\n  schemaType.prototype[name] = fn;\n}\n\nexport { ArraySchema, BooleanSchema, DateSchema, MixedSchema, NumberSchema, ObjectSchema, Schema, StringSchema, TupleSchema, ValidationError, addMethod, create$2 as array, create$7 as bool, create$7 as boolean, create$4 as date, locale as defaultLocale, getIn, isSchema, create as lazy, create$8 as mixed, create$5 as number, create$3 as object, printValue, reach, create$9 as ref, setLocale, create$6 as string, create$1 as tuple };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig, isBrowser } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache?.heartbeats == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n      // If we failed to construct a heartbeats cache, then return immediately.\n      if (this._heartbeatsCache?.heartbeats == null) {\n        return;\n      }\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache?.heartbeats == null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorMap, User } from '../model/public_types';\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { AppName } from '../model/auth';\nimport { AuthCredential } from './credentials';\n\n/**\n * Enumeration of Firebase Auth error codes.\n *\n * @internal\n */\nexport const enum AuthErrorCode {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_CREDENTIAL = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  LOGIN_BLOCKED = 'login-blocked',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_PASSWORD = 'missing-password',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized',\n  RECAPTCHA_NOT_ENABLED = 'recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN = 'missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN = 'invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION = 'invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE = 'missing-client-type',\n  MISSING_RECAPTCHA_VERSION = 'missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION = 'invalid-recaptcha-version',\n  INVALID_REQ_TYPE = 'invalid-req-type',\n  UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION = 'unsupported-password-policy-schema-version',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'password-does-not-meet-requirements'\n}\n\nfunction _debugErrorMap(): ErrorMap<AuthErrorCode> {\n  return {\n    [AuthErrorCode.ADMIN_ONLY_OPERATION]:\n      'This operation is restricted to administrators only.',\n    [AuthErrorCode.ARGUMENT_ERROR]: '',\n    [AuthErrorCode.APP_NOT_AUTHORIZED]:\n      \"This app, identified by the domain where it's hosted, is not \" +\n      'authorized to use Firebase Authentication with the provided API key. ' +\n      'Review your key configuration in the Google API console.',\n    [AuthErrorCode.APP_NOT_INSTALLED]:\n      'The requested mobile application corresponding to the identifier (' +\n      'Android package name or iOS bundle ID) provided is not installed on ' +\n      'this device.',\n    [AuthErrorCode.CAPTCHA_CHECK_FAILED]:\n      'The reCAPTCHA response token provided is either invalid, expired, ' +\n      'already used or the domain associated with it does not match the list ' +\n      'of whitelisted domains.',\n    [AuthErrorCode.CODE_EXPIRED]:\n      'The SMS code has expired. Please re-send the verification code to try ' +\n      'again.',\n    [AuthErrorCode.CORDOVA_NOT_READY]: 'Cordova framework is not ready.',\n    [AuthErrorCode.CORS_UNSUPPORTED]: 'This browser is not supported.',\n    [AuthErrorCode.CREDENTIAL_ALREADY_IN_USE]:\n      'This credential is already associated with a different user account.',\n    [AuthErrorCode.CREDENTIAL_MISMATCH]:\n      'The custom token corresponds to a different audience.',\n    [AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n      'This operation is sensitive and requires recent authentication. Log in ' +\n      'again before retrying this request.',\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.',\n    [AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED]:\n      'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n      'conditions.',\n    [AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION]:\n      'Multi-factor users must always have a verified email.',\n    [AuthErrorCode.EMAIL_EXISTS]:\n      'The email address is already in use by another account.',\n    [AuthErrorCode.EMULATOR_CONFIG_FAILED]:\n      'Auth instance has already been used to make a network call. Auth can ' +\n      'no longer be configured to use the emulator. Try calling ' +\n      '\"connectAuthEmulator()\" sooner.',\n    [AuthErrorCode.EXPIRED_OOB_CODE]: 'The action code has expired.',\n    [AuthErrorCode.EXPIRED_POPUP_REQUEST]:\n      'This operation has been cancelled due to another conflicting popup being opened.',\n    [AuthErrorCode.INTERNAL_ERROR]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_APP_CREDENTIAL]:\n      'The phone verification request contains an invalid application verifier.' +\n      ' The reCAPTCHA token response is either invalid or expired.',\n    [AuthErrorCode.INVALID_APP_ID]:\n      'The mobile app identifier is not registed for the current project.',\n    [AuthErrorCode.INVALID_AUTH]:\n      \"This user's credential isn't valid for this project. This can happen \" +\n      \"if the user's token has been tampered with, or if the user isn't for \" +\n      'the project associated with this API key.',\n    [AuthErrorCode.INVALID_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_CODE]:\n      'The SMS verification code used to create the phone auth credential is ' +\n      'invalid. Please resend the verification code sms and be sure to use the ' +\n      'verification code provided by the user.',\n    [AuthErrorCode.INVALID_CONTINUE_URI]:\n      'The continue URL provided in the request is invalid.',\n    [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]:\n      'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n      'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n      'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n      'cordova-plugin-customurlscheme.',\n    [AuthErrorCode.INVALID_CUSTOM_TOKEN]:\n      'The custom token format is incorrect. Please check the documentation.',\n    [AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN]:\n      'The provided dynamic link domain is not configured or authorized for the current project.',\n    [AuthErrorCode.INVALID_EMAIL]: 'The email address is badly formatted.',\n    [AuthErrorCode.INVALID_EMULATOR_SCHEME]:\n      'Emulator URL must start with a valid scheme (http:// or https://).',\n    [AuthErrorCode.INVALID_API_KEY]:\n      'Your API key is invalid, please check you have copied it correctly.',\n    [AuthErrorCode.INVALID_CERT_HASH]:\n      'The SHA-1 certificate hash provided is invalid.',\n    [AuthErrorCode.INVALID_CREDENTIAL]:\n      'The supplied auth credential is incorrect, malformed or has expired.',\n    [AuthErrorCode.INVALID_MESSAGE_PAYLOAD]:\n      'The email template corresponding to this action contains invalid characters in its message. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_MFA_SESSION]:\n      'The request does not contain a valid proof of first factor successful sign-in.',\n    [AuthErrorCode.INVALID_OAUTH_PROVIDER]:\n      'EmailAuthProvider is not supported for this operation. This operation ' +\n      'only supports OAuth providers.',\n    [AuthErrorCode.INVALID_OAUTH_CLIENT_ID]:\n      'The OAuth client ID provided is either invalid or does not match the ' +\n      'specified API key.',\n    [AuthErrorCode.INVALID_ORIGIN]:\n      'This domain is not authorized for OAuth operations for your Firebase ' +\n      'project. Edit the list of authorized domains from the Firebase console.',\n    [AuthErrorCode.INVALID_OOB_CODE]:\n      'The action code is invalid. This can happen if the code is malformed, ' +\n      'expired, or has already been used.',\n    [AuthErrorCode.INVALID_PASSWORD]:\n      'The password is invalid or the user does not have a password.',\n    [AuthErrorCode.INVALID_PERSISTENCE]:\n      'The specified persistence type is invalid. It can only be local, session or none.',\n    [AuthErrorCode.INVALID_PHONE_NUMBER]:\n      'The format of the phone number provided is incorrect. Please enter the ' +\n      'phone number in a format that can be parsed into E.164 format. E.164 ' +\n      'phone numbers are written in the format [+][country code][subscriber ' +\n      'number including area code].',\n    [AuthErrorCode.INVALID_PROVIDER_ID]:\n      'The specified provider ID is invalid.',\n    [AuthErrorCode.INVALID_RECIPIENT_EMAIL]:\n      'The email corresponding to this action failed to send as the provided ' +\n      'recipient email address is invalid.',\n    [AuthErrorCode.INVALID_SENDER]:\n      'The email template corresponding to this action contains an invalid sender email or name. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_SESSION_INFO]:\n      'The verification ID used to create the phone auth credential is invalid.',\n    [AuthErrorCode.INVALID_TENANT_ID]:\n      \"The Auth instance's tenant ID is invalid.\",\n    [AuthErrorCode.LOGIN_BLOCKED]:\n      'Login blocked by user-provided method: {$originalMessage}',\n    [AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME]:\n      'An Android Package Name must be provided if the Android App is required to be installed.',\n    [AuthErrorCode.MISSING_AUTH_DOMAIN]:\n      'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n      'by following the instructions in the Firebase console.',\n    [AuthErrorCode.MISSING_APP_CREDENTIAL]:\n      'The phone verification request is missing an application verifier ' +\n      'assertion. A reCAPTCHA response token needs to be provided.',\n    [AuthErrorCode.MISSING_CODE]:\n      'The phone auth credential was created with an empty SMS verification code.',\n    [AuthErrorCode.MISSING_CONTINUE_URI]:\n      'A continue URL must be provided in the request.',\n    [AuthErrorCode.MISSING_IFRAME_START]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.MISSING_IOS_BUNDLE_ID]:\n      'An iOS Bundle ID must be provided if an App Store ID is provided.',\n    [AuthErrorCode.MISSING_OR_INVALID_NONCE]:\n      'The request does not contain a valid nonce. This can occur if the ' +\n      'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n      'in the ID token payload.',\n    [AuthErrorCode.MISSING_PASSWORD]: 'A non-empty password must be provided',\n    [AuthErrorCode.MISSING_MFA_INFO]:\n      'No second factor identifier is provided.',\n    [AuthErrorCode.MISSING_MFA_SESSION]:\n      'The request is missing proof of first factor successful sign-in.',\n    [AuthErrorCode.MISSING_PHONE_NUMBER]:\n      'To send verification codes, provide a phone number for the recipient.',\n    [AuthErrorCode.MISSING_SESSION_INFO]:\n      'The phone auth credential was created with an empty verification ID.',\n    [AuthErrorCode.MODULE_DESTROYED]:\n      'This instance of FirebaseApp has been deleted.',\n    [AuthErrorCode.MFA_INFO_NOT_FOUND]:\n      'The user does not have a second factor matching the identifier provided.',\n    [AuthErrorCode.MFA_REQUIRED]:\n      'Proof of ownership of a second factor is required to complete sign-in.',\n    [AuthErrorCode.NEED_CONFIRMATION]:\n      'An account already exists with the same email address but different ' +\n      'sign-in credentials. Sign in using a provider associated with this ' +\n      'email address.',\n    [AuthErrorCode.NETWORK_REQUEST_FAILED]:\n      'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n    [AuthErrorCode.NO_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.NO_SUCH_PROVIDER]:\n      'User was not linked to an account with the given provider.',\n    [AuthErrorCode.NULL_USER]:\n      'A null user object was provided as the argument for an operation which ' +\n      'requires a non-null user object.',\n    [AuthErrorCode.OPERATION_NOT_ALLOWED]:\n      'The given sign-in provider is disabled for this Firebase project. ' +\n      'Enable it in the Firebase console, under the sign-in method tab of the ' +\n      'Auth section.',\n    [AuthErrorCode.OPERATION_NOT_SUPPORTED]:\n      'This operation is not supported in the environment this application is ' +\n      'running on. \"location.protocol\" must be http, https or chrome-extension' +\n      ' and web storage must be enabled.',\n    [AuthErrorCode.POPUP_BLOCKED]:\n      'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n    [AuthErrorCode.POPUP_CLOSED_BY_USER]:\n      'The popup has been closed by the user before finalizing the operation.',\n    [AuthErrorCode.PROVIDER_ALREADY_LINKED]:\n      'User can only be linked to one identity for the given provider.',\n    [AuthErrorCode.QUOTA_EXCEEDED]:\n      \"The project's quota for this operation has been exceeded.\",\n    [AuthErrorCode.REDIRECT_CANCELLED_BY_USER]:\n      'The redirect operation has been cancelled by the user before finalizing.',\n    [AuthErrorCode.REDIRECT_OPERATION_PENDING]:\n      'A redirect sign-in operation is already pending.',\n    [AuthErrorCode.REJECTED_CREDENTIAL]:\n      'The request contains malformed or mismatching credentials.',\n    [AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED]:\n      'The second factor is already enrolled on this account.',\n    [AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED]:\n      'The maximum allowed number of second factors on a user has been exceeded.',\n    [AuthErrorCode.TENANT_ID_MISMATCH]:\n      \"The provided tenant ID does not match the Auth instance's tenant ID\",\n    [AuthErrorCode.TIMEOUT]: 'The operation has timed out.',\n    [AuthErrorCode.TOKEN_EXPIRED]:\n      \"The user's credential is no longer valid. The user must sign in again.\",\n    [AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER]:\n      'We have blocked all requests from this device due to unusual activity. ' +\n      'Try again later.',\n    [AuthErrorCode.UNAUTHORIZED_DOMAIN]:\n      'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n      'the domain in the Firebase console.',\n    [AuthErrorCode.UNSUPPORTED_FIRST_FACTOR]:\n      'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n    [AuthErrorCode.UNSUPPORTED_PERSISTENCE]:\n      'The current environment does not support the specified persistence type.',\n    [AuthErrorCode.UNSUPPORTED_TENANT_OPERATION]:\n      'This operation is not supported in a multi-tenant context.',\n    [AuthErrorCode.UNVERIFIED_EMAIL]:\n      'The operation requires a verified email.',\n    [AuthErrorCode.USER_CANCELLED]:\n      'The user did not grant your application the permissions it requested.',\n    [AuthErrorCode.USER_DELETED]:\n      'There is no user record corresponding to this identifier. The user may ' +\n      'have been deleted.',\n    [AuthErrorCode.USER_DISABLED]:\n      'The user account has been disabled by an administrator.',\n    [AuthErrorCode.USER_MISMATCH]:\n      'The supplied credentials do not correspond to the previously signed in user.',\n    [AuthErrorCode.USER_SIGNED_OUT]: '',\n    [AuthErrorCode.WEAK_PASSWORD]:\n      'The password must be 6 characters long or more.',\n    [AuthErrorCode.WEB_STORAGE_UNSUPPORTED]:\n      'This browser is not supported or 3rd party cookies and data may be disabled.',\n    [AuthErrorCode.ALREADY_INITIALIZED]:\n      'initializeAuth() has already been called with ' +\n      'different options. To avoid this error, call initializeAuth() with the ' +\n      'same options as when it was originally called, or call getAuth() to return the' +\n      ' already initialized instance.',\n    [AuthErrorCode.MISSING_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_TOKEN]:\n      'The reCAPTCHA token is invalid when sending request to the backend.',\n    [AuthErrorCode.INVALID_RECAPTCHA_ACTION]:\n      'The reCAPTCHA action is invalid when sending request to the backend.',\n    [AuthErrorCode.RECAPTCHA_NOT_ENABLED]:\n      'reCAPTCHA Enterprise integration is not enabled for this project.',\n    [AuthErrorCode.MISSING_CLIENT_TYPE]:\n      'The reCAPTCHA client type is missing when sending request to the backend.',\n    [AuthErrorCode.MISSING_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is missing when sending request to the backend.',\n    [AuthErrorCode.INVALID_REQ_TYPE]: 'Invalid request parameters.',\n    [AuthErrorCode.INVALID_RECAPTCHA_VERSION]:\n      'The reCAPTCHA version is invalid when sending request to the backend.',\n    [AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION]:\n      'The password policy received from the backend uses a schema version that is not supported by this version of the Firebase SDK.',\n    [AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n      'The password does not meet the requirements.'\n  };\n}\n\nexport interface ErrorMapRetriever extends AuthErrorMap {\n  (): ErrorMap<AuthErrorCode>;\n}\n\nfunction _prodErrorMap(): ErrorMap<AuthErrorCode> {\n  // We will include this one message in the prod error map since by the very\n  // nature of this error, developers will never be able to see the message\n  // using the debugErrorMap (which is installed during auth initialization).\n  return {\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.'\n  } as ErrorMap<AuthErrorCode>;\n}\n\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const debugErrorMap: AuthErrorMap = _debugErrorMap;\n\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const prodErrorMap: AuthErrorMap = _prodErrorMap;\n\nexport interface NamedErrorParams {\n  appName: AppName;\n  credential?: AuthCredential;\n  email?: string;\n  phoneNumber?: string;\n  tenantId?: string;\n  user?: User;\n  _serverResponse?: object;\n}\n\n/**\n * @internal\n */\ntype GenericAuthErrorParams = {\n  [key in Exclude<\n    AuthErrorCode,\n    | AuthErrorCode.ARGUMENT_ERROR\n    | AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    | AuthErrorCode.INTERNAL_ERROR\n    | AuthErrorCode.MFA_REQUIRED\n    | AuthErrorCode.NO_AUTH_EVENT\n    | AuthErrorCode.OPERATION_NOT_SUPPORTED\n  >]: {\n    appName?: AppName;\n    email?: string;\n    phoneNumber?: string;\n    message?: string;\n  };\n};\n\n/**\n * @internal\n */\nexport interface AuthErrorParams extends GenericAuthErrorParams {\n  [AuthErrorCode.ARGUMENT_ERROR]: { appName?: AppName };\n  [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]: { appName?: AppName };\n  [AuthErrorCode.INTERNAL_ERROR]: { appName?: AppName };\n  [AuthErrorCode.LOGIN_BLOCKED]: {\n    appName?: AppName;\n    originalMessage?: string;\n  };\n  [AuthErrorCode.OPERATION_NOT_SUPPORTED]: { appName?: AppName };\n  [AuthErrorCode.NO_AUTH_EVENT]: { appName?: AppName };\n  [AuthErrorCode.MFA_REQUIRED]: {\n    appName: AppName;\n    _serverResponse: IdTokenMfaResponse;\n  };\n  [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]: {\n    appName: AppName;\n    missingPlugin?: string;\n  };\n}\n\nexport const _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory<\n  AuthErrorCode,\n  AuthErrorParams\n>('auth', 'Firebase', _prodErrorMap());\n\n/**\n * A map of potential `Auth` error codes, for easier comparison with errors\n * thrown by the SDK.\n *\n * @remarks\n * Note that you can't tree-shake individual keys\n * in the map, so by using the map you might substantially increase your\n * bundle size.\n *\n * @public\n */\nexport const AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n  ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n  ARGUMENT_ERROR: 'auth/argument-error',\n  APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n  APP_NOT_INSTALLED: 'auth/app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n  CODE_EXPIRED: 'auth/code-expired',\n  CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n  CORS_UNSUPPORTED: 'auth/cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n  EMAIL_EXISTS: 'auth/email-already-in-use',\n  EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n  EXPIRED_OOB_CODE: 'auth/expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n  INTERNAL_ERROR: 'auth/internal-error',\n  INVALID_API_KEY: 'auth/invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n  INVALID_APP_ID: 'auth/invalid-app-id',\n  INVALID_AUTH: 'auth/invalid-user-token',\n  INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n  INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n  INVALID_CODE: 'auth/invalid-verification-code',\n  INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'auth/invalid-email',\n  INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n  INVALID_LOGIN_CREDENTIALS: 'auth/invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n  INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n  INVALID_OOB_CODE: 'auth/invalid-action-code',\n  INVALID_ORIGIN: 'auth/unauthorized-domain',\n  INVALID_PASSWORD: 'auth/wrong-password',\n  INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n  INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n  INVALID_SENDER: 'auth/invalid-sender',\n  INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n  INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n  MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n  MFA_REQUIRED: 'auth/multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n  MISSING_CODE: 'auth/missing-verification-code',\n  MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n  MISSING_IFRAME_START: 'auth/missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n  MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n  MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n  MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n  MISSING_SESSION_INFO: 'auth/missing-verification-id',\n  MODULE_DESTROYED: 'auth/app-deleted',\n  NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n  NULL_USER: 'auth/null-user',\n  NO_AUTH_EVENT: 'auth/no-auth-event',\n  NO_SUCH_PROVIDER: 'auth/no-such-provider',\n  OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'auth/popup-blocked',\n  POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n  QUOTA_EXCEEDED: 'auth/quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'auth/rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n  TIMEOUT: 'auth/timeout',\n  TOKEN_EXPIRED: 'auth/user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n  UNVERIFIED_EMAIL: 'auth/unverified-email',\n  USER_CANCELLED: 'auth/user-cancelled',\n  USER_DELETED: 'auth/user-not-found',\n  USER_DISABLED: 'auth/user-disabled',\n  USER_MISMATCH: 'auth/user-mismatch',\n  USER_SIGNED_OUT: 'auth/user-signed-out',\n  WEAK_PASSWORD: 'auth/weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n  ALREADY_INITIALIZED: 'auth/already-initialized',\n  RECAPTCHA_NOT_ENABLED: 'auth/recaptcha-not-enabled',\n  MISSING_RECAPTCHA_TOKEN: 'auth/missing-recaptcha-token',\n  INVALID_RECAPTCHA_TOKEN: 'auth/invalid-recaptcha-token',\n  INVALID_RECAPTCHA_ACTION: 'auth/invalid-recaptcha-action',\n  MISSING_CLIENT_TYPE: 'auth/missing-client-type',\n  MISSING_RECAPTCHA_VERSION: 'auth/missing-recaptcha-version',\n  INVALID_RECAPTCHA_VERSION: 'auth/invalid-recaptcha-version',\n  INVALID_REQ_TYPE: 'auth/invalid-req-type'\n} as const;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SDK_VERSION } from '@firebase/app';\n\nexport { LogLevel };\n\nconst logClient = new Logger('@firebase/auth');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function _getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\nexport function _setLogLevel(newLevel: LogLevel): void {\n  logClient.logLevel = newLevel;\n}\n\nexport function _logDebug(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    logClient.debug(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logWarn(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.WARN) {\n    logClient.warn(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logError(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth } from '../../model/public_types';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  _DEFAULT_AUTH_ERROR_FACTORY,\n  AuthErrorCode,\n  AuthErrorParams,\n  prodErrorMap,\n  ErrorMapRetriever\n} from '../errors';\nimport { _logError } from './log';\n\ntype AuthErrorListParams<K> = K extends keyof AuthErrorParams\n  ? [AuthErrorParams[K]]\n  : [];\ntype LessAppName<K extends AuthErrorCode> = Omit<AuthErrorParams[K], 'appName'>;\n\n/**\n * Unconditionally fails, throwing a developer facing INTERNAL_ERROR\n *\n * @example\n * ```javascript\n * fail(auth, AuthErrorCode.MFA_REQUIRED);  // Error: the MFA_REQUIRED error needs more params than appName\n * fail(auth, AuthErrorCode.MFA_REQUIRED, {serverResponse});  // Compiles\n * fail(AuthErrorCode.INTERNAL_ERROR);  // Compiles; internal error does not need appName\n * fail(AuthErrorCode.USER_DELETED);  // Error: USER_DELETED requires app name\n * fail(auth, AuthErrorCode.USER_DELETED);  // Compiles; USER_DELETED _only_ needs app name\n * ```\n *\n * @param appName App name for tagging the error\n * @throws FirebaseError\n */\nexport function _fail<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): never {\n  throw createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _createError<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  return createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _errorWithCustomMessage(\n  auth: Auth,\n  code: AuthErrorCode,\n  message: string\n): FirebaseError {\n  const errorMap = {\n    ...(prodErrorMap as ErrorMapRetriever)(),\n    [code]: message\n  };\n  const factory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n    'auth',\n    'Firebase',\n    errorMap\n  );\n  return factory.create(code, {\n    appName: auth.name\n  });\n}\n\nexport function _serverAppCurrentUserOperationNotSupportedError(\n  auth: Auth\n): FirebaseError {\n  return _errorWithCustomMessage(\n    auth,\n    AuthErrorCode.OPERATION_NOT_SUPPORTED,\n    'Operations that alter the current user are not supported in conjunction with FirebaseServerApp'\n  );\n}\n\nexport function _assertInstanceOf(\n  auth: Auth,\n  object: object,\n  instance: unknown\n): void {\n  const constructorInstance = instance as { new (...args: unknown[]): unknown };\n  if (!(object instanceof constructorInstance)) {\n    if (constructorInstance.name !== object.constructor.name) {\n      _fail(auth, AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    throw _errorWithCustomMessage(\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR,\n      `Type of ${object.constructor.name} does not match expected instance.` +\n        `Did you pass a reference from a different Auth SDK?`\n    );\n  }\n}\n\nfunction createErrorInternal<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  if (typeof authOrCode !== 'string') {\n    const code = rest[0] as K;\n    const fullParams = [...rest.slice(1)] as AuthErrorListParams<K>;\n    if (fullParams[0]) {\n      fullParams[0].appName = authOrCode.name;\n    }\n\n    return (authOrCode as AuthInternal)._errorFactory.create(\n      code,\n      ...fullParams\n    );\n  }\n\n  return _DEFAULT_AUTH_ERROR_FACTORY.create(\n    authOrCode,\n    ...(rest as AuthErrorListParams<K>)\n  );\n}\n\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): asserts assertion {\n  if (!assertion) {\n    throw createErrorInternal(authOrCode, ...rest);\n  }\n}\n\n// We really do want to accept literally any function type here\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TypeExpectation = Function | string | MapType;\n\ninterface MapType extends Record<string, TypeExpectation | Optional> {}\n\nclass Optional {\n  constructor(readonly type: TypeExpectation) {}\n}\n\nexport function opt(type: TypeExpectation): Optional {\n  return new Optional(type);\n}\n\n/**\n * Asserts the runtime types of arguments. The 'expected' field can be one of\n * a class, a string (representing a \"typeof\" call), or a record map of name\n * to type. Furthermore, the opt() function can be used to mark a field as\n * optional. For example:\n *\n * function foo(auth: Auth, profile: {displayName?: string}, update = false) {\n *   assertTypes(arguments, [AuthImpl, {displayName: opt('string')}, opt('boolean')]);\n * }\n *\n * opt() can be used for any type:\n * function foo(auth?: Auth) {\n *   assertTypes(arguments, [opt(AuthImpl)]);\n * }\n *\n * The string types can be or'd together, and you can use \"null\" as well (note\n * that typeof null === 'object'; this is an edge case). For example:\n *\n * function foo(profile: {displayName?: string | null}) {\n *   assertTypes(arguments, [{displayName: opt('string|null')}]);\n * }\n *\n * @param args\n * @param expected\n */\nexport function assertTypes(\n  args: Omit<IArguments, 'callee'>,\n  ...expected: Array<TypeExpectation | Optional>\n): void {\n  if (args.length > expected.length) {\n    _fail(AuthErrorCode.ARGUMENT_ERROR, {});\n  }\n\n  for (let i = 0; i < expected.length; i++) {\n    let expect = expected[i];\n    const arg = args[i];\n\n    if (expect instanceof Optional) {\n      // If the arg is undefined, then it matches \"optional\" and we can move to\n      // the next arg\n      if (typeof arg === 'undefined') {\n        continue;\n      }\n      expect = expect.type;\n    }\n\n    if (typeof expect === 'string') {\n      // Handle the edge case for null because typeof null === 'object'\n      if (expect.includes('null') && arg === null) {\n        continue;\n      }\n\n      const required = expect.split('|');\n      _assert(required.includes(typeof arg), AuthErrorCode.ARGUMENT_ERROR, {});\n    } else if (typeof expect === 'object') {\n      // Recursively check record arguments\n      const record = arg as Record<string, unknown>;\n      const map = expect as MapType;\n      const keys = Object.keys(expect);\n\n      assertTypes(\n        keys.map(k => record[k]),\n        ...keys.map(k => map[k])\n      );\n    } else {\n      _assert(arg instanceof expect, AuthErrorCode.ARGUMENT_ERROR, {});\n    }\n  }\n}\n\n/**\n * Unconditionally fails, throwing an internal error with the given message.\n *\n * @param failure type of failure encountered\n * @throws Error\n */\nexport function debugFail(failure: string): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message = `INTERNAL ASSERTION FAILED: ` + failure;\n  _logError(message);\n\n  // NOTE: We don't use FirebaseError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * @param assertion\n * @param message\n */\nexport function debugAssert(\n  assertion: unknown,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    debugFail(message);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _getCurrentUrl(): string {\n  return (typeof self !== 'undefined' && self.location?.href) || '';\n}\n\nexport function _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\nexport function _getCurrentScheme(): string | null {\n  return (typeof self !== 'undefined' && self.location?.protocol) || null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isMobileCordova, isReactNative } from '@firebase/util';\nimport { _isOnline } from './navigator';\nimport { debugAssert } from './assert';\n\nexport const enum DelayMin {\n  OFFLINE = 5000\n}\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nexport class Delay {\n  // The default value for the offline delay timeout in ms.\n\n  private readonly isMobile: boolean;\n  constructor(\n    private readonly shortDelay: number,\n    private readonly longDelay: number\n  ) {\n    // Internal error when improperly initialized.\n    debugAssert(\n      longDelay > shortDelay,\n      'Short delay should be less than long delay!'\n    );\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n\n  get(): number {\n    if (!_isOnline()) {\n      // Pick the shorter timeout.\n      return Math.min(DelayMin.OFFLINE, this.shortDelay);\n    }\n    // If running in a mobile environment, return the long delay, otherwise\n    // return the short delay.\n    // This could be improved in the future to dynamically change based on other\n    // variables instead of just reading the current environment.\n    return this.isMobile ? this.longDelay : this.shortDelay;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isBrowserExtension } from '@firebase/util';\nimport { _isHttpOrHttps } from './location';\n\n/**\n * Determine whether the browser is working online\n */\nexport function _isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator &&\n    'onLine' in navigator &&\n    typeof navigator.onLine === 'boolean' &&\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)\n  ) {\n    return navigator.onLine;\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n}\n\nexport function _getUserLanguage(): string | null {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  const navigatorLanguage: NavigatorLanguage = navigator;\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language ||\n    // Couldn't determine language.\n    null\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigInternal } from '../../model/auth';\nimport { debugAssert } from './assert';\n\nexport function _emulatorUrl(config: ConfigInternal, path?: string): string {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  const { url } = config.emulator;\n\n  if (!path) {\n    return url;\n  }\n\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugFail } from './assert';\n\nexport class FetchProvider {\n  private static fetchImpl: typeof fetch | null;\n  private static headersImpl: typeof Headers | null;\n  private static responseImpl: typeof Response | null;\n\n  static initialize(\n    fetchImpl: typeof fetch,\n    headersImpl?: typeof Headers,\n    responseImpl?: typeof Response\n  ): void {\n    this.fetchImpl = fetchImpl;\n    if (headersImpl) {\n      this.headersImpl = headersImpl;\n    }\n    if (responseImpl) {\n      this.responseImpl = responseImpl;\n    }\n  }\n\n  static fetch(): typeof fetch {\n    if (this.fetchImpl) {\n      return this.fetchImpl;\n    }\n    if (typeof self !== 'undefined' && 'fetch' in self) {\n      return self.fetch;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.fetch) {\n      return globalThis.fetch;\n    }\n    if (typeof fetch !== 'undefined') {\n      return fetch;\n    }\n    debugFail(\n      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static headers(): typeof Headers {\n    if (this.headersImpl) {\n      return this.headersImpl;\n    }\n    if (typeof self !== 'undefined' && 'Headers' in self) {\n      return self.Headers;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Headers) {\n      return globalThis.Headers;\n    }\n    if (typeof Headers !== 'undefined') {\n      return Headers;\n    }\n    debugFail(\n      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static response(): typeof Response {\n    if (this.responseImpl) {\n      return this.responseImpl;\n    }\n    if (typeof self !== 'undefined' && 'Response' in self) {\n      return self.Response;\n    }\n    if (typeof globalThis !== 'undefined' && globalThis.Response) {\n      return globalThis.Response;\n    }\n    if (typeof Response !== 'undefined') {\n      return Response;\n    }\n    debugFail(\n      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\n\n/**\n * Errors that can be returned by the backend\n */\nexport const enum ServerError {\n  ADMIN_ONLY_OPERATION = 'ADMIN_ONLY_OPERATION',\n  BLOCKING_FUNCTION_ERROR_RESPONSE = 'BLOCKING_FUNCTION_ERROR_RESPONSE',\n  CAPTCHA_CHECK_FAILED = 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED = 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH = 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'EMAIL_CHANGE_NEEDS_VERIFICATION',\n  EMAIL_EXISTS = 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE = 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED = 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL = 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID = 'INVALID_APP_ID',\n  INVALID_CERT_HASH = 'INVALID_CERT_HASH',\n  INVALID_CODE = 'INVALID_CODE',\n  INVALID_CONTINUE_URI = 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN = 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL = 'INVALID_EMAIL',\n  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE = 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER = 'INVALID_IDENTIFIER',\n  INVALID_LOGIN_CREDENTIALS = 'INVALID_LOGIN_CREDENTIALS',\n  INVALID_MESSAGE_PAYLOAD = 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_MFA_PENDING_CREDENTIAL = 'INVALID_MFA_PENDING_CREDENTIAL',\n  INVALID_OAUTH_CLIENT_ID = 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE = 'INVALID_OOB_CODE',\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN = 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID = 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL = 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER = 'INVALID_SENDER',\n  INVALID_SESSION_INFO = 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF = 'INVALID_TEMPORARY_PROOF',\n  INVALID_TENANT_ID = 'INVALID_TENANT_ID',\n  MFA_ENROLLMENT_NOT_FOUND = 'MFA_ENROLLMENT_NOT_FOUND',\n  MISSING_ANDROID_PACKAGE_NAME = 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL = 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE = 'MISSING_CODE',\n  MISSING_CONTINUE_URI = 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN = 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID = 'MISSING_IOS_BUNDLE_ID',\n  MISSING_MFA_ENROLLMENT_ID = 'MISSING_MFA_ENROLLMENT_ID',\n  MISSING_MFA_PENDING_CREDENTIAL = 'MISSING_MFA_PENDING_CREDENTIAL',\n  MISSING_OOB_CODE = 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE = 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD = 'MISSING_PASSWORD',\n  MISSING_REQ_TYPE = 'MISSING_REQ_TYPE',\n  MISSING_PHONE_NUMBER = 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO = 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED = 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED = 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT = 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL = 'REJECTED_CREDENTIAL',\n  SECOND_FACTOR_EXISTS = 'SECOND_FACTOR_EXISTS',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\n  TENANT_ID_MISMATCH = 'TENANT_ID_MISMATCH',\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNSUPPORTED_FIRST_FACTOR = 'UNSUPPORTED_FIRST_FACTOR',\n  UNSUPPORTED_TENANT_OPERATION = 'UNSUPPORTED_TENANT_OPERATION',\n  UNAUTHORIZED_DOMAIN = 'UNAUTHORIZED_DOMAIN',\n  UNVERIFIED_EMAIL = 'UNVERIFIED_EMAIL',\n  USER_CANCELLED = 'USER_CANCELLED',\n  USER_DISABLED = 'USER_DISABLED',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n  WEAK_PASSWORD = 'WEAK_PASSWORD',\n  RECAPTCHA_NOT_ENABLED = 'RECAPTCHA_NOT_ENABLED',\n  MISSING_RECAPTCHA_TOKEN = 'MISSING_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_TOKEN = 'INVALID_RECAPTCHA_TOKEN',\n  INVALID_RECAPTCHA_ACTION = 'INVALID_RECAPTCHA_ACTION',\n  MISSING_CLIENT_TYPE = 'MISSING_CLIENT_TYPE',\n  MISSING_RECAPTCHA_VERSION = 'MISSING_RECAPTCHA_VERSION',\n  INVALID_RECAPTCHA_VERSION = 'INVALID_RECAPTCHA_VERSION',\n  INVALID_REQ_TYPE = 'INVALID_REQ_TYPE',\n  PASSWORD_DOES_NOT_MEET_REQUIREMENTS = 'PASSWORD_DOES_NOT_MEET_REQUIREMENTS'\n}\n\n/**\n * API Response in the event of an error\n */\nexport interface JsonError {\n  error: {\n    code: number;\n    message: string;\n    errors?: [\n      {\n        message: ServerError;\n        domain: string;\n        reason: string;\n      }\n    ];\n  };\n}\n\n/**\n * Type definition for a map from server errors to developer visible errors\n */\nexport declare type ServerErrorMap<ApiError extends string> = {\n  readonly [K in ApiError]: AuthErrorCode;\n};\n\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nexport const SERVER_ERROR_MAP: Partial<ServerErrorMap<ServerError>> = {\n  // Custom token errors.\n  [ServerError.CREDENTIAL_MISMATCH]: AuthErrorCode.CREDENTIAL_MISMATCH,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CUSTOM_TOKEN]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Create Auth URI errors.\n  [ServerError.INVALID_IDENTIFIER]: AuthErrorCode.INVALID_EMAIL,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CONTINUE_URI]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign in with email and password errors (some apply to sign up too).\n  [ServerError.INVALID_PASSWORD]: AuthErrorCode.INVALID_PASSWORD,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_PASSWORD]: AuthErrorCode.MISSING_PASSWORD,\n  // Thrown if Email Enumeration Protection is enabled in the project and the email or password is\n  // invalid.\n  [ServerError.INVALID_LOGIN_CREDENTIALS]: AuthErrorCode.INVALID_CREDENTIAL,\n\n  // Sign up with email and password errors.\n  [ServerError.EMAIL_EXISTS]: AuthErrorCode.EMAIL_EXISTS,\n  [ServerError.PASSWORD_LOGIN_DISABLED]: AuthErrorCode.OPERATION_NOT_ALLOWED,\n\n  // Verify assertion for sign in with credential errors:\n  [ServerError.INVALID_IDP_RESPONSE]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.INVALID_PENDING_TOKEN]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.FEDERATED_USER_ID_ALREADY_LINKED]:\n    AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_REQ_TYPE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Send Password reset email errors:\n  [ServerError.EMAIL_NOT_FOUND]: AuthErrorCode.USER_DELETED,\n  [ServerError.RESET_PASSWORD_EXCEED_LIMIT]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  [ServerError.EXPIRED_OOB_CODE]: AuthErrorCode.EXPIRED_OOB_CODE,\n  [ServerError.INVALID_OOB_CODE]: AuthErrorCode.INVALID_OOB_CODE,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_OOB_CODE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Operations that require ID token in request:\n  [ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n    AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN,\n  [ServerError.INVALID_ID_TOKEN]: AuthErrorCode.INVALID_AUTH,\n  [ServerError.TOKEN_EXPIRED]: AuthErrorCode.TOKEN_EXPIRED,\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.TOKEN_EXPIRED,\n\n  // Other errors.\n  [ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n  [ServerError.PASSWORD_DOES_NOT_MEET_REQUIREMENTS]:\n    AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS,\n\n  // Phone Auth related errors.\n  [ServerError.INVALID_CODE]: AuthErrorCode.INVALID_CODE,\n  [ServerError.INVALID_SESSION_INFO]: AuthErrorCode.INVALID_SESSION_INFO,\n  [ServerError.INVALID_TEMPORARY_PROOF]: AuthErrorCode.INVALID_CREDENTIAL,\n  [ServerError.MISSING_SESSION_INFO]: AuthErrorCode.MISSING_SESSION_INFO,\n  [ServerError.SESSION_EXPIRED]: AuthErrorCode.CODE_EXPIRED,\n\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  [ServerError.MISSING_ANDROID_PACKAGE_NAME]:\n    AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME,\n  [ServerError.UNAUTHORIZED_DOMAIN]: AuthErrorCode.UNAUTHORIZED_DOMAIN,\n\n  // getProjectConfig errors when clientId is passed.\n  [ServerError.INVALID_OAUTH_CLIENT_ID]: AuthErrorCode.INVALID_OAUTH_CLIENT_ID,\n\n  // User actions (sign-up or deletion) disabled errors.\n  [ServerError.ADMIN_ONLY_OPERATION]: AuthErrorCode.ADMIN_ONLY_OPERATION,\n\n  // Multi factor related errors.\n  [ServerError.INVALID_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.INVALID_MFA_SESSION,\n  [ServerError.MFA_ENROLLMENT_NOT_FOUND]: AuthErrorCode.MFA_INFO_NOT_FOUND,\n  [ServerError.MISSING_MFA_ENROLLMENT_ID]: AuthErrorCode.MISSING_MFA_INFO,\n  [ServerError.MISSING_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.MISSING_MFA_SESSION,\n  [ServerError.SECOND_FACTOR_EXISTS]:\n    AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED,\n  [ServerError.SECOND_FACTOR_LIMIT_EXCEEDED]:\n    AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED,\n\n  // Blocking functions related errors.\n  [ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Recaptcha related errors.\n  [ServerError.RECAPTCHA_NOT_ENABLED]: AuthErrorCode.RECAPTCHA_NOT_ENABLED,\n  [ServerError.MISSING_RECAPTCHA_TOKEN]: AuthErrorCode.MISSING_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_TOKEN]: AuthErrorCode.INVALID_RECAPTCHA_TOKEN,\n  [ServerError.INVALID_RECAPTCHA_ACTION]:\n    AuthErrorCode.INVALID_RECAPTCHA_ACTION,\n  [ServerError.MISSING_CLIENT_TYPE]: AuthErrorCode.MISSING_CLIENT_TYPE,\n  [ServerError.MISSING_RECAPTCHA_VERSION]:\n    AuthErrorCode.MISSING_RECAPTCHA_VERSION,\n  [ServerError.INVALID_RECAPTCHA_VERSION]:\n    AuthErrorCode.INVALID_RECAPTCHA_VERSION,\n  [ServerError.INVALID_REQ_TYPE]: AuthErrorCode.INVALID_REQ_TYPE\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError, querystring } from '@firebase/util';\n\nimport { AuthErrorCode, NamedErrorParams } from '../core/errors';\nimport {\n  _createError,\n  _errorWithCustomMessage,\n  _fail\n} from '../core/util/assert';\nimport { Delay } from '../core/util/delay';\nimport { _emulatorUrl } from '../core/util/emulator';\nimport { FetchProvider } from '../core/util/fetch_provider';\nimport { Auth } from '../model/public_types';\nimport { AuthInternal, ConfigInternal } from '../model/auth';\nimport { IdTokenResponse, TaggedWithTokenResponse } from '../model/id_token';\nimport { IdTokenMfaResponse } from './authentication/mfa';\nimport { SERVER_ERROR_MAP, ServerError, ServerErrorMap } from './errors';\n\nexport const enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET'\n}\n\nexport const enum HttpHeader {\n  CONTENT_TYPE = 'Content-Type',\n  X_FIREBASE_LOCALE = 'X-Firebase-Locale',\n  X_CLIENT_VERSION = 'X-Client-Version',\n  X_FIREBASE_GMPID = 'X-Firebase-gmpid',\n  X_FIREBASE_CLIENT = 'X-Firebase-Client',\n  X_FIREBASE_APP_CHECK = 'X-Firebase-AppCheck'\n}\n\nexport const enum Endpoint {\n  CREATE_AUTH_URI = '/v1/accounts:createAuthUri',\n  DELETE_ACCOUNT = '/v1/accounts:delete',\n  RESET_PASSWORD = '/v1/accounts:resetPassword',\n  SIGN_UP = '/v1/accounts:signUp',\n  SIGN_IN_WITH_CUSTOM_TOKEN = '/v1/accounts:signInWithCustomToken',\n  SIGN_IN_WITH_EMAIL_LINK = '/v1/accounts:signInWithEmailLink',\n  SIGN_IN_WITH_IDP = '/v1/accounts:signInWithIdp',\n  SIGN_IN_WITH_PASSWORD = '/v1/accounts:signInWithPassword',\n  SIGN_IN_WITH_PHONE_NUMBER = '/v1/accounts:signInWithPhoneNumber',\n  SEND_VERIFICATION_CODE = '/v1/accounts:sendVerificationCode',\n  SEND_OOB_CODE = '/v1/accounts:sendOobCode',\n  SET_ACCOUNT_INFO = '/v1/accounts:update',\n  GET_ACCOUNT_INFO = '/v1/accounts:lookup',\n  GET_RECAPTCHA_PARAM = '/v1/recaptchaParams',\n  START_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:start',\n  FINALIZE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:finalize',\n  START_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:start',\n  FINALIZE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:finalize',\n  WITHDRAW_MFA = '/v2/accounts/mfaEnrollment:withdraw',\n  GET_PROJECT_CONFIG = '/v1/projects',\n  GET_RECAPTCHA_CONFIG = '/v2/recaptchaConfig',\n  GET_PASSWORD_POLICY = '/v2/passwordPolicy',\n  TOKEN = '/v1/token',\n  REVOKE_TOKEN = '/v2/accounts:revokeToken'\n}\n\nexport const enum RecaptchaClientType {\n  WEB = 'CLIENT_TYPE_WEB',\n  ANDROID = 'CLIENT_TYPE_ANDROID',\n  IOS = 'CLIENT_TYPE_IOS'\n}\n\nexport const enum RecaptchaVersion {\n  ENTERPRISE = 'RECAPTCHA_ENTERPRISE'\n}\n\nexport const enum RecaptchaActionName {\n  SIGN_IN_WITH_PASSWORD = 'signInWithPassword',\n  GET_OOB_CODE = 'getOobCode',\n  SIGN_UP_PASSWORD = 'signUpPassword'\n}\n\nexport const enum EnforcementState {\n  ENFORCE = 'ENFORCE',\n  AUDIT = 'AUDIT',\n  OFF = 'OFF',\n  ENFORCEMENT_STATE_UNSPECIFIED = 'ENFORCEMENT_STATE_UNSPECIFIED'\n}\n\n// Providers that have reCAPTCHA Enterprise support.\nexport const enum RecaptchaProvider {\n  EMAIL_PASSWORD_PROVIDER = 'EMAIL_PASSWORD_PROVIDER'\n}\n\nexport const DEFAULT_API_TIMEOUT_MS = new Delay(30_000, 60_000);\n\nexport function _addTidIfNecessary<T extends { tenantId?: string }>(\n  auth: Auth,\n  request: T\n): T {\n  if (auth.tenantId && !request.tenantId) {\n    return {\n      ...request,\n      tenantId: auth.tenantId\n    };\n  }\n  return request;\n}\n\nexport async function _performApiRequest<T, V>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\n    let body = {};\n    let params = {};\n    if (request) {\n      if (method === HttpMethod.GET) {\n        params = request;\n      } else {\n        body = {\n          body: JSON.stringify(request)\n        };\n      }\n    }\n\n    const query = querystring({\n      key: auth.config.apiKey,\n      ...params\n    }).slice(1);\n\n    const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n    headers[HttpHeader.CONTENT_TYPE] = 'application/json';\n\n    if (auth.languageCode) {\n      headers[HttpHeader.X_FIREBASE_LOCALE] = auth.languageCode;\n    }\n\n    return FetchProvider.fetch()(\n      _getFinalTarget(auth, auth.config.apiHost, path, query),\n      {\n        method,\n        headers,\n        referrerPolicy: 'no-referrer',\n        ...body\n      }\n    );\n  });\n}\n\nexport async function _performFetchWithErrorHandling<V>(\n  auth: Auth,\n  customErrorMap: Partial<ServerErrorMap<ServerError>>,\n  fetchFn: () => Promise<Response>\n): Promise<V> {\n  (auth as AuthInternal)._canInitEmulator = false;\n  const errorMap = { ...SERVER_ERROR_MAP, ...customErrorMap };\n  try {\n    const networkTimeout = new NetworkTimeout<Response>(auth);\n    const response: Response = await Promise.race<Promise<Response>>([\n      fetchFn(),\n      networkTimeout.promise\n    ]);\n\n    // If we've reached this point, the fetch succeeded and the networkTimeout\n    // didn't throw; clear the network timeout delay so that Node won't hang\n    networkTimeout.clearNetworkTimeout();\n\n    const json = await response.json();\n    if ('needConfirmation' in json) {\n      throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, json);\n    }\n\n    if (response.ok && !('errorMessage' in json)) {\n      return json;\n    } else {\n      const errorMessage = response.ok ? json.errorMessage : json.error.message;\n      const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\n      if (serverErrorCode === ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n        throw _makeTaggedError(\n          auth,\n          AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n          json\n        );\n      } else if (serverErrorCode === ServerError.EMAIL_EXISTS) {\n        throw _makeTaggedError(auth, AuthErrorCode.EMAIL_EXISTS, json);\n      } else if (serverErrorCode === ServerError.USER_DISABLED) {\n        throw _makeTaggedError(auth, AuthErrorCode.USER_DISABLED, json);\n      }\n      const authError =\n        errorMap[serverErrorCode as ServerError] ||\n        (serverErrorCode\n          .toLowerCase()\n          .replace(/[_\\s]+/g, '-') as unknown as AuthErrorCode);\n      if (serverErrorMessage) {\n        throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n      } else {\n        _fail(auth, authError);\n      }\n    }\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      throw e;\n    }\n    // Changing this to a different error code will log user out when there is a network error\n    // because we treat any error other than NETWORK_REQUEST_FAILED as token is invalid.\n    // https://github.com/firebase/firebase-js-sdk/blob/4fbc73610d70be4e0852e7de63a39cb7897e8546/packages/auth/src/core/auth/auth_impl.ts#L309-L316\n    _fail(auth, AuthErrorCode.NETWORK_REQUEST_FAILED, { 'message': String(e) });\n  }\n}\n\nexport async function _performSignInRequest<T, V extends IdTokenResponse>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  const serverResponse = (await _performApiRequest<T, V | IdTokenMfaResponse>(\n    auth,\n    method,\n    path,\n    request,\n    customErrorMap\n  )) as V;\n  if ('mfaPendingCredential' in serverResponse) {\n    _fail(auth, AuthErrorCode.MFA_REQUIRED, {\n      _serverResponse: serverResponse\n    });\n  }\n\n  return serverResponse;\n}\n\nexport function _getFinalTarget(\n  auth: Auth,\n  host: string,\n  path: string,\n  query: string\n): string {\n  const base = `${host}${path}?${query}`;\n\n  if (!(auth as AuthInternal).config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n\n  return _emulatorUrl(auth.config as ConfigInternal, base);\n}\n\nexport function _parseEnforcementState(\n  enforcementStateStr: string\n): EnforcementState {\n  switch (enforcementStateStr) {\n    case 'ENFORCE':\n      return EnforcementState.ENFORCE;\n    case 'AUDIT':\n      return EnforcementState.AUDIT;\n    case 'OFF':\n      return EnforcementState.OFF;\n    default:\n      return EnforcementState.ENFORCEMENT_STATE_UNSPECIFIED;\n  }\n}\n\nclass NetworkTimeout<T> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timer: any | null = null;\n  readonly promise = new Promise<T>((_, reject) => {\n    this.timer = setTimeout(() => {\n      return reject(\n        _createError(this.auth, AuthErrorCode.NETWORK_REQUEST_FAILED)\n      );\n    }, DEFAULT_API_TIMEOUT_MS.get());\n  });\n\n  clearNetworkTimeout(): void {\n    clearTimeout(this.timer);\n  }\n\n  constructor(private readonly auth: Auth) {}\n}\n\ninterface PotentialResponse extends IdTokenResponse {\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport function _makeTaggedError(\n  auth: Auth,\n  code: AuthErrorCode,\n  response: PotentialResponse\n): FirebaseError {\n  const errorParams: NamedErrorParams = {\n    appName: auth.name\n  };\n\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n\n  const error = _createError(auth, code, errorParams);\n\n  // We know customData is defined on error because errorParams is defined\n  (error.customData! as TaggedWithTokenResponse)._tokenResponse = response;\n  return error;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RecaptchaParameters } from '../../model/public_types';\nimport {\n  GetRecaptchaConfigResponse,\n  RecaptchaEnforcementProviderState\n} from '../../api/authentication/recaptcha';\nimport { EnforcementState, _parseEnforcementState } from '../../api/index';\n\n// reCAPTCHA v2 interface\nexport interface Recaptcha {\n  render: (container: HTMLElement, parameters: RecaptchaParameters) => number;\n  getResponse: (id: number) => string;\n  execute: (id: number) => unknown;\n  reset: (id: number) => unknown;\n}\n\nexport function isV2(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is Recaptcha {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as Recaptcha).getResponse !== undefined\n  );\n}\n\n// reCAPTCHA Enterprise & v3 shared interface\nexport interface GreCAPTCHATopLevel extends GreCAPTCHA {\n  enterprise: GreCAPTCHA;\n}\n\n// reCAPTCHA Enterprise interface\nexport interface GreCAPTCHA {\n  ready: (callback: () => void) => void;\n  execute: (siteKey: string, options: { action: string }) => Promise<string>;\n  render: (\n    container: string | HTMLElement,\n    parameters: GreCAPTCHARenderOption\n  ) => string;\n}\n\nexport interface GreCAPTCHARenderOption {\n  sitekey: string;\n  size: 'invisible';\n}\n\nexport function isEnterprise(\n  grecaptcha: Recaptcha | GreCAPTCHA | undefined\n): grecaptcha is GreCAPTCHATopLevel {\n  return (\n    grecaptcha !== undefined &&\n    (grecaptcha as GreCAPTCHATopLevel).enterprise !== undefined\n  );\n}\n\n// TODO(chuanr): Replace this with the AuthWindow after resolving the dependency issue in Node.js env.\ndeclare global {\n  interface Window {\n    grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  }\n}\n\nexport class RecaptchaConfig {\n  /**\n   * The reCAPTCHA site key.\n   */\n  siteKey: string = '';\n\n  /**\n   * The list of providers and their enablement status for reCAPTCHA Enterprise.\n   */\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[] = [];\n\n  constructor(response: GetRecaptchaConfigResponse) {\n    if (response.recaptchaKey === undefined) {\n      throw new Error('recaptchaKey undefined');\n    }\n    // Example response.recaptchaKey: \"projects/proj123/keys/sitekey123\"\n    this.siteKey = response.recaptchaKey.split('/')[3];\n    this.recaptchaEnforcementState = response.recaptchaEnforcementState;\n  }\n\n  /**\n   * Returns the reCAPTCHA Enterprise enforcement state for the given provider.\n   *\n   * @param providerStr - The provider whose enforcement state is to be returned.\n   * @returns The reCAPTCHA Enterprise enforcement state for the given provider.\n   */\n  getProviderEnforcementState(providerStr: string): EnforcementState | null {\n    if (\n      !this.recaptchaEnforcementState ||\n      this.recaptchaEnforcementState.length === 0\n    ) {\n      return null;\n    }\n\n    for (const recaptchaEnforcementState of this.recaptchaEnforcementState) {\n      if (\n        recaptchaEnforcementState.provider &&\n        recaptchaEnforcementState.provider === providerStr\n      ) {\n        return _parseEnforcementState(\n          recaptchaEnforcementState.enforcementState\n        );\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns true if the reCAPTCHA Enterprise enforcement state for the provider is set to ENFORCE or AUDIT.\n   *\n   * @param providerStr - The provider whose enablement state is to be returned.\n   * @returns Whether or not reCAPTCHA Enterprise protection is enabled for the given provider.\n   */\n  isProviderEnabled(providerStr: string): boolean {\n    return (\n      this.getProviderEnforcementState(providerStr) ===\n        EnforcementState.ENFORCE ||\n      this.getProviderEnforcementState(providerStr) === EnforcementState.AUDIT\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _performApiRequest,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\ninterface GetRecaptchaParamResponse {\n  recaptchaSiteKey?: string;\n}\n\nexport async function getRecaptchaParams(auth: Auth): Promise<string> {\n  return (\n    (\n      await _performApiRequest<void, GetRecaptchaParamResponse>(\n        auth,\n        HttpMethod.GET,\n        Endpoint.GET_RECAPTCHA_PARAM\n      )\n    ).recaptchaSiteKey || ''\n  );\n}\n\n// The following functions are for reCAPTCHA enterprise integration.\ninterface GetRecaptchaConfigRequest {\n  tenantId?: string;\n  clientType?: RecaptchaClientType;\n  version?: RecaptchaVersion;\n}\n\nexport interface RecaptchaEnforcementProviderState {\n  provider: string;\n  enforcementState: string;\n}\n\nexport interface GetRecaptchaConfigResponse {\n  recaptchaKey: string;\n  recaptchaEnforcementState: RecaptchaEnforcementProviderState[];\n}\n\nexport async function getRecaptchaConfig(\n  auth: Auth,\n  request: GetRecaptchaConfigRequest\n): Promise<GetRecaptchaConfigResponse> {\n  return _performApiRequest<\n    GetRecaptchaConfigRequest,\n    GetRecaptchaConfigResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_RECAPTCHA_CONFIG,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { MfaEnrollment } from './mfa';\nimport { Auth } from '../../model/public_types';\n\nexport interface DeleteAccountRequest {\n  idToken: string;\n}\n\nexport async function deleteAccount(\n  auth: Auth,\n  request: DeleteAccountRequest\n): Promise<void> {\n  return _performApiRequest<DeleteAccountRequest, void>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.DELETE_ACCOUNT,\n    request\n  );\n}\n\nexport interface ProviderUserInfo {\n  providerId: string;\n  rawId?: string;\n  email?: string;\n  displayName?: string;\n  photoUrl?: string;\n  phoneNumber?: string;\n}\n\nexport interface DeleteLinkedAccountsRequest {\n  idToken: string;\n  deleteProvider: string[];\n}\n\nexport interface DeleteLinkedAccountsResponse {\n  providerUserInfo: ProviderUserInfo[];\n}\n\nexport async function deleteLinkedAccounts(\n  auth: Auth,\n  request: DeleteLinkedAccountsRequest\n): Promise<DeleteLinkedAccountsResponse> {\n  return _performApiRequest<\n    DeleteLinkedAccountsRequest,\n    DeleteLinkedAccountsResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface APIUserInfo {\n  localId?: string;\n  displayName?: string;\n  photoUrl?: string;\n  email?: string;\n  emailVerified?: boolean;\n  phoneNumber?: string;\n  lastLoginAt?: number;\n  createdAt?: number;\n  tenantId?: string;\n  passwordHash?: string;\n  providerUserInfo?: ProviderUserInfo[];\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface GetAccountInfoRequest {\n  idToken: string;\n}\n\nexport interface GetAccountInfoResponse {\n  users: APIUserInfo[];\n}\n\nexport async function getAccountInfo(\n  auth: Auth,\n  request: GetAccountInfoRequest\n): Promise<GetAccountInfoResponse> {\n  return _performApiRequest<GetAccountInfoRequest, GetAccountInfoResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.GET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function utcTimestampToDateString(\n  utcTimestamp?: string | number\n): string | undefined {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    // Convert to date object.\n    const date = new Date(Number(utcTimestamp));\n    // Test date is valid.\n    if (!isNaN(date.getTime())) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. undefined will be returned.\n  }\n  return undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ParsedToken, User } from '../../model/public_types';\nimport { base64Decode, getModularInstance } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { _logError } from '../util/log';\nimport { utcTimestampToDateString } from '../util/time';\nimport { AuthErrorCode } from '../errors';\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport function getIdToken(user: User, forceRefresh = false): Promise<string> {\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getIdTokenResult(\n  user: User,\n  forceRefresh = false\n): Promise<IdTokenResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const token = await userInternal.getIdToken(forceRefresh);\n  const claims = _parseToken(token);\n\n  _assert(\n    claims && claims.exp && claims.auth_time && claims.iat,\n    userInternal.auth,\n    AuthErrorCode.INTERNAL_ERROR\n  );\n  const firebase =\n    typeof claims.firebase === 'object' ? claims.firebase : undefined;\n\n  const signInProvider: string | undefined = firebase?.['sign_in_provider'];\n\n  return {\n    claims,\n    token,\n    authTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.auth_time)\n    )!,\n    issuedAtTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.iat)\n    )!,\n    expirationTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.exp)\n    )!,\n    signInProvider: signInProvider || null,\n    signInSecondFactor: firebase?.['sign_in_second_factor'] || null\n  };\n}\n\nfunction secondsStringToMilliseconds(seconds: string): number {\n  return Number(seconds) * 1000;\n}\n\nexport function _parseToken(token: string): ParsedToken | null {\n  const [algorithm, payload, signature] = token.split('.');\n  if (\n    algorithm === undefined ||\n    payload === undefined ||\n    signature === undefined\n  ) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n\n  try {\n    const decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError(\n      'Caught error parsing JWT payload as JSON',\n      (e as Error)?.toString()\n    );\n    return null;\n  }\n}\n\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nexport function _tokenExpiresIn(token: string): number {\n  const parsedToken = _parseToken(token);\n  _assert(parsedToken, AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.exp !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.iat !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\nexport async function _logoutIfInvalidated<T>(\n  user: UserInternal,\n  promise: Promise<T>,\n  bypassAuthState = false\n): Promise<T> {\n  if (bypassAuthState) {\n    return promise;\n  }\n  try {\n    return await promise;\n  } catch (e) {\n    if (e instanceof FirebaseError && isUserInvalidated(e)) {\n      if (user.auth.currentUser === user) {\n        await user.auth.signOut();\n      }\n    }\n\n    throw e;\n  }\n}\n\nfunction isUserInvalidated({ code }: FirebaseError): boolean {\n  return (\n    code === `auth/${AuthErrorCode.USER_DISABLED}` ||\n    code === `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\n// Refresh the token five minutes before expiration\nexport const enum Duration {\n  OFFSET = 5 * 1000 * 60,\n  RETRY_BACKOFF_MIN = 30 * 1000,\n  RETRY_BACKOFF_MAX = 16 * 60 * 1000\n}\n\nexport class ProactiveRefresh {\n  private isRunning = false;\n\n  // Node timers and browser timers return fundamentally different types.\n  // We don't actually care what the value is but TS won't accept unknown and\n  // we can't cast properly in both environments.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timerId: any | null = null;\n  private errorBackoff = Duration.RETRY_BACKOFF_MIN;\n\n  constructor(private readonly user: UserInternal) {}\n\n  _start(): void {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.schedule();\n  }\n\n  _stop(): void {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  private getInterval(wasError: boolean): number {\n    if (wasError) {\n      const interval = this.errorBackoff;\n      this.errorBackoff = Math.min(\n        this.errorBackoff * 2,\n        Duration.RETRY_BACKOFF_MAX\n      );\n      return interval;\n    } else {\n      // Reset the error backoff\n      this.errorBackoff = Duration.RETRY_BACKOFF_MIN;\n      const expTime = this.user.stsTokenManager.expirationTime ?? 0;\n      const interval = expTime - Date.now() - Duration.OFFSET;\n\n      return Math.max(0, interval);\n    }\n  }\n\n  private schedule(wasError = false): void {\n    if (!this.isRunning) {\n      // Just in case...\n      return;\n    }\n\n    const interval = this.getInterval(wasError);\n    this.timerId = setTimeout(async () => {\n      await this.iteration();\n    }, interval);\n  }\n\n  private async iteration(): Promise<void> {\n    try {\n      await this.user.getIdToken(true);\n    } catch (e) {\n      // Only retry on network errors\n      if (\n        (e as FirebaseError)?.code ===\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        this.schedule(/* wasError */ true);\n      }\n\n      return;\n    }\n    this.schedule();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserMetadata as UserMetadataType } from '../../model/public_types';\n\nimport { utcTimestampToDateString } from '../util/time';\n\nexport class UserMetadata implements UserMetadataType {\n  creationTime?: string;\n  lastSignInTime?: string;\n\n  constructor(\n    private createdAt?: string | number,\n    private lastLoginAt?: string | number\n  ) {\n    this._initializeTime();\n  }\n\n  private _initializeTime(): void {\n    this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n    this.creationTime = utcTimestampToDateString(this.createdAt);\n  }\n\n  _copy(metadata: UserMetadata): void {\n    this.createdAt = metadata.createdAt;\n    this.lastLoginAt = metadata.lastLoginAt;\n    this._initializeTime();\n  }\n\n  toJSON(): object {\n    return {\n      createdAt: this.createdAt,\n      lastLoginAt: this.lastLoginAt\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User, UserInfo } from '../../model/public_types';\n\nimport {\n  getAccountInfo,\n  ProviderUserInfo\n} from '../../api/account_management/account';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserMetadata } from './user_metadata';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _reloadWithoutSaving(user: UserInternal): Promise<void> {\n  const auth = user.auth;\n  const idToken = await user.getIdToken();\n  const response = await _logoutIfInvalidated(\n    user,\n    getAccountInfo(auth, { idToken })\n  );\n\n  _assert(response?.users.length, auth, AuthErrorCode.INTERNAL_ERROR);\n\n  const coreAccount = response.users[0];\n\n  user._notifyReloadListener(coreAccount);\n\n  const newProviderData = coreAccount.providerUserInfo?.length\n    ? extractProviderData(coreAccount.providerUserInfo)\n    : [];\n\n  const providerData = mergeProviderData(user.providerData, newProviderData);\n\n  // Preserves the non-nonymous status of the stored user, even if no more\n  // credentials (federated or email/password) are linked to the user. If\n  // the user was previously anonymous, then use provider data to update.\n  // On the other hand, if it was not anonymous before, it should never be\n  // considered anonymous now.\n  const oldIsAnonymous = user.isAnonymous;\n  const newIsAnonymous =\n    !(user.email && coreAccount.passwordHash) && !providerData?.length;\n  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n\n  const updates: Partial<UserInternal> = {\n    uid: coreAccount.localId,\n    displayName: coreAccount.displayName || null,\n    photoURL: coreAccount.photoUrl || null,\n    email: coreAccount.email || null,\n    emailVerified: coreAccount.emailVerified || false,\n    phoneNumber: coreAccount.phoneNumber || null,\n    tenantId: coreAccount.tenantId || null,\n    providerData,\n    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n    isAnonymous\n  };\n\n  Object.assign(user, updates);\n}\n\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function reload(user: User): Promise<void> {\n  const userInternal: UserInternal = getModularInstance(user) as UserInternal;\n  await _reloadWithoutSaving(userInternal);\n\n  // Even though the current user hasn't changed, update\n  // current user will trigger a persistence update w/ the\n  // new info.\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\n\nfunction mergeProviderData(\n  original: UserInfo[],\n  newData: UserInfo[]\n): UserInfo[] {\n  const deduped = original.filter(\n    o => !newData.some(n => n.providerId === o.providerId)\n  );\n  return [...deduped, ...newData];\n}\n\nexport function extractProviderData(providers: ProviderUserInfo[]): UserInfo[] {\n  return providers.map(({ providerId, ...provider }) => {\n    return {\n      providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  _getFinalTarget,\n  _performFetchWithErrorHandling,\n  _performApiRequest,\n  _addTidIfNecessary,\n  HttpMethod,\n  HttpHeader,\n  Endpoint\n} from '../index';\nimport { FetchProvider } from '../../core/util/fetch_provider';\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\n\nexport const enum TokenType {\n  REFRESH_TOKEN = 'REFRESH_TOKEN',\n  ACCESS_TOKEN = 'ACCESS_TOKEN'\n}\n\n/** The server responses with snake_case; we convert to camelCase */\ninterface RequestStsTokenServerResponse {\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n}\n\nexport interface RequestStsTokenResponse {\n  accessToken: string;\n  expiresIn: string;\n  refreshToken: string;\n}\n\nexport interface RevokeTokenRequest {\n  providerId: string;\n  tokenType: TokenType;\n  token: string;\n  idToken: string;\n  tenantId?: string;\n}\n\nexport interface RevokeTokenResponse {}\n\nexport async function requestStsToken(\n  auth: Auth,\n  refreshToken: string\n): Promise<RequestStsTokenResponse> {\n  const response =\n    await _performFetchWithErrorHandling<RequestStsTokenServerResponse>(\n      auth,\n      {},\n      async () => {\n        const body = querystring({\n          'grant_type': 'refresh_token',\n          'refresh_token': refreshToken\n        }).slice(1);\n        const { tokenApiHost, apiKey } = auth.config;\n        const url = _getFinalTarget(\n          auth,\n          tokenApiHost,\n          Endpoint.TOKEN,\n          `key=${apiKey}`\n        );\n\n        const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n        headers[HttpHeader.CONTENT_TYPE] = 'application/x-www-form-urlencoded';\n\n        return FetchProvider.fetch()(url, {\n          method: HttpMethod.POST,\n          headers,\n          body\n        });\n      }\n    );\n\n  // The response comes back in snake_case. Convert to camel:\n  return {\n    accessToken: response.access_token,\n    expiresIn: response.expires_in,\n    refreshToken: response.refresh_token\n  };\n}\n\nexport async function revokeToken(\n  auth: Auth,\n  request: RevokeTokenRequest\n): Promise<RevokeTokenResponse> {\n  return _performApiRequest<RevokeTokenRequest, RevokeTokenResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.REVOKE_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { requestStsToken } from '../../api/authentication/token';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert, debugFail } from '../util/assert';\nimport { _tokenExpiresIn } from './id_token_result';\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n */\nexport const enum Buffer {\n  TOKEN_REFRESH = 30_000\n}\n\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport class StsTokenManager {\n  refreshToken: string | null = null;\n  accessToken: string | null = null;\n  expirationTime: number | null = null;\n\n  get isExpired(): boolean {\n    return (\n      !this.expirationTime ||\n      Date.now() > this.expirationTime - Buffer.TOKEN_REFRESH\n    );\n  }\n\n  updateFromServerResponse(\n    response: IdTokenResponse | FinalizeMfaResponse\n  ): void {\n    _assert(response.idToken, AuthErrorCode.INTERNAL_ERROR);\n    _assert(\n      typeof response.idToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof response.refreshToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const expiresIn =\n      'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n        ? Number(response.expiresIn)\n        : _tokenExpiresIn(response.idToken);\n    this.updateTokensAndExpiration(\n      response.idToken,\n      response.refreshToken,\n      expiresIn\n    );\n  }\n\n  updateFromIdToken(idToken: string): void {\n    _assert(idToken.length !== 0, AuthErrorCode.INTERNAL_ERROR);\n    const expiresIn = _tokenExpiresIn(idToken);\n    this.updateTokensAndExpiration(idToken, null, expiresIn);\n  }\n\n  async getToken(\n    auth: AuthInternal,\n    forceRefresh = false\n  ): Promise<string | null> {\n    if (!forceRefresh && this.accessToken && !this.isExpired) {\n      return this.accessToken;\n    }\n\n    _assert(this.refreshToken, auth, AuthErrorCode.TOKEN_EXPIRED);\n\n    if (this.refreshToken) {\n      await this.refresh(auth, this.refreshToken!);\n      return this.accessToken;\n    }\n\n    return null;\n  }\n\n  clearRefreshToken(): void {\n    this.refreshToken = null;\n  }\n\n  private async refresh(auth: AuthInternal, oldToken: string): Promise<void> {\n    const { accessToken, refreshToken, expiresIn } = await requestStsToken(\n      auth,\n      oldToken\n    );\n    this.updateTokensAndExpiration(\n      accessToken,\n      refreshToken,\n      Number(expiresIn)\n    );\n  }\n\n  private updateTokensAndExpiration(\n    accessToken: string,\n    refreshToken: string | null,\n    expiresInSec: number\n  ): void {\n    this.refreshToken = refreshToken || null;\n    this.accessToken = accessToken || null;\n    this.expirationTime = Date.now() + expiresInSec * 1000;\n  }\n\n  static fromJSON(appName: string, object: PersistedBlob): StsTokenManager {\n    const { refreshToken, accessToken, expirationTime } = object;\n\n    const manager = new StsTokenManager();\n    if (refreshToken) {\n      _assert(typeof refreshToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.refreshToken = refreshToken;\n    }\n    if (accessToken) {\n      _assert(typeof accessToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.accessToken = accessToken;\n    }\n    if (expirationTime) {\n      _assert(\n        typeof expirationTime === 'number',\n        AuthErrorCode.INTERNAL_ERROR,\n        {\n          appName\n        }\n      );\n      manager.expirationTime = expirationTime;\n    }\n    return manager;\n  }\n\n  toJSON(): object {\n    return {\n      refreshToken: this.refreshToken,\n      accessToken: this.accessToken,\n      expirationTime: this.expirationTime\n    };\n  }\n\n  _assign(stsTokenManager: StsTokenManager): void {\n    this.accessToken = stsTokenManager.accessToken;\n    this.refreshToken = stsTokenManager.refreshToken;\n    this.expirationTime = stsTokenManager.expirationTime;\n  }\n\n  _clone(): StsTokenManager {\n    return Object.assign(new StsTokenManager(), this.toJSON());\n  }\n\n  _performRefresh(): never {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, UserInfo } from '../../model/public_types';\nimport { NextFn } from '@firebase/util';\nimport {\n  APIUserInfo,\n  GetAccountInfoResponse,\n  deleteAccount\n} from '../../api/account_management/account';\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport {\n  MutableUserInfo,\n  UserInternal,\n  UserParameters\n} from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { getIdTokenResult } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { ProactiveRefresh } from './proactive_refresh';\nimport { extractProviderData, _reloadWithoutSaving, reload } from './reload';\nimport { StsTokenManager } from './token_manager';\nimport { UserMetadata } from './user_metadata';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\nfunction assertStringOrUndefined(\n  assertion: unknown,\n  appName: string\n): asserts assertion is string | undefined {\n  _assert(\n    typeof assertion === 'string' || typeof assertion === 'undefined',\n    AuthErrorCode.INTERNAL_ERROR,\n    { appName }\n  );\n}\n\nexport class UserImpl implements UserInternal {\n  // For the user object, provider is always Firebase.\n  readonly providerId = ProviderId.FIREBASE;\n  stsTokenManager: StsTokenManager;\n  // Last known accessToken so we know when it changes\n  private accessToken: string | null;\n\n  uid: string;\n  auth: AuthInternal;\n  emailVerified: boolean;\n  isAnonymous: boolean;\n  tenantId: string | null;\n  readonly metadata: UserMetadata;\n  providerData: MutableUserInfo[];\n\n  // Optional fields from UserInfo\n  displayName: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  photoURL: string | null;\n\n  _redirectEventId?: string;\n  private readonly proactiveRefresh = new ProactiveRefresh(this);\n\n  constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters) {\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.emailVerified = opt.emailVerified || false;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.tenantId = opt.tenantId || null;\n    this.providerData = opt.providerData ? [...opt.providerData] : [];\n    this.metadata = new UserMetadata(\n      opt.createdAt || undefined,\n      opt.lastLoginAt || undefined\n    );\n  }\n\n  async getIdToken(forceRefresh?: boolean): Promise<string> {\n    const accessToken = await _logoutIfInvalidated(\n      this,\n      this.stsTokenManager.getToken(this.auth, forceRefresh)\n    );\n    _assert(accessToken, this.auth, AuthErrorCode.INTERNAL_ERROR);\n\n    if (this.accessToken !== accessToken) {\n      this.accessToken = accessToken;\n      await this.auth._persistUserIfCurrent(this);\n      this.auth._notifyListenersIfCurrent(this);\n    }\n\n    return accessToken;\n  }\n\n  getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult> {\n    return getIdTokenResult(this, forceRefresh);\n  }\n\n  reload(): Promise<void> {\n    return reload(this);\n  }\n\n  private reloadUserInfo: APIUserInfo | null = null;\n  private reloadListener: NextFn<APIUserInfo> | null = null;\n\n  _assign(user: UserInternal): void {\n    if (this === user) {\n      return;\n    }\n    _assert(this.uid === user.uid, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.displayName = user.displayName;\n    this.photoURL = user.photoURL;\n    this.email = user.email;\n    this.emailVerified = user.emailVerified;\n    this.phoneNumber = user.phoneNumber;\n    this.isAnonymous = user.isAnonymous;\n    this.tenantId = user.tenantId;\n    this.providerData = user.providerData.map(userInfo => ({ ...userInfo }));\n    this.metadata._copy(user.metadata);\n    this.stsTokenManager._assign(user.stsTokenManager);\n  }\n\n  _clone(auth: AuthInternal): UserInternal {\n    const newUser = new UserImpl({\n      ...this,\n      auth,\n      stsTokenManager: this.stsTokenManager._clone()\n    });\n    newUser.metadata._copy(this.metadata);\n    return newUser;\n  }\n\n  _onReload(callback: NextFn<APIUserInfo>): void {\n    // There should only ever be one listener, and that is a single instance of MultiFactorUser\n    _assert(!this.reloadListener, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.reloadListener = callback;\n    if (this.reloadUserInfo) {\n      this._notifyReloadListener(this.reloadUserInfo);\n      this.reloadUserInfo = null;\n    }\n  }\n\n  _notifyReloadListener(userInfo: APIUserInfo): void {\n    if (this.reloadListener) {\n      this.reloadListener(userInfo);\n    } else {\n      // If no listener is subscribed yet, save the result so it's available when they do subscribe\n      this.reloadUserInfo = userInfo;\n    }\n  }\n\n  _startProactiveRefresh(): void {\n    this.proactiveRefresh._start();\n  }\n\n  _stopProactiveRefresh(): void {\n    this.proactiveRefresh._stop();\n  }\n\n  async _updateTokensIfNecessary(\n    response: IdTokenResponse | FinalizeMfaResponse,\n    reload = false\n  ): Promise<void> {\n    let tokensRefreshed = false;\n    if (\n      response.idToken &&\n      response.idToken !== this.stsTokenManager.accessToken\n    ) {\n      this.stsTokenManager.updateFromServerResponse(response);\n      tokensRefreshed = true;\n    }\n\n    if (reload) {\n      await _reloadWithoutSaving(this);\n    }\n\n    await this.auth._persistUserIfCurrent(this);\n    if (tokensRefreshed) {\n      this.auth._notifyListenersIfCurrent(this);\n    }\n  }\n\n  async delete(): Promise<void> {\n    if (_isFirebaseServerApp(this.auth.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this.auth)\n      );\n    }\n    const idToken = await this.getIdToken();\n    await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n    this.stsTokenManager.clearRefreshToken();\n\n    // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n    //       cancels pending actions...\n\n    return this.auth.signOut();\n  }\n\n  toJSON(): PersistedBlob {\n    return {\n      uid: this.uid,\n      email: this.email || undefined,\n      emailVerified: this.emailVerified,\n      displayName: this.displayName || undefined,\n      isAnonymous: this.isAnonymous,\n      photoURL: this.photoURL || undefined,\n      phoneNumber: this.phoneNumber || undefined,\n      tenantId: this.tenantId || undefined,\n      providerData: this.providerData.map(userInfo => ({ ...userInfo })),\n      stsTokenManager: this.stsTokenManager.toJSON(),\n      // Redirect event ID must be maintained in case there is a pending\n      // redirect event.\n      _redirectEventId: this._redirectEventId,\n      ...this.metadata.toJSON(),\n\n      // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n      apiKey: this.auth.config.apiKey,\n      appName: this.auth.name\n      // Missing authDomain will be tolerated by the legacy SDK.\n      // stsTokenManager.apiKey isn't actually required (despite the legacy SDK persisting it).\n    };\n  }\n\n  get refreshToken(): string {\n    return this.stsTokenManager.refreshToken || '';\n  }\n\n  static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal {\n    const displayName = object.displayName ?? undefined;\n    const email = object.email ?? undefined;\n    const phoneNumber = object.phoneNumber ?? undefined;\n    const photoURL = object.photoURL ?? undefined;\n    const tenantId = object.tenantId ?? undefined;\n    const _redirectEventId = object._redirectEventId ?? undefined;\n    const createdAt = object.createdAt ?? undefined;\n    const lastLoginAt = object.lastLoginAt ?? undefined;\n    const {\n      uid,\n      emailVerified,\n      isAnonymous,\n      providerData,\n      stsTokenManager: plainObjectTokenManager\n    } = object;\n\n    _assert(uid && plainObjectTokenManager, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const stsTokenManager = StsTokenManager.fromJSON(\n      this.name,\n      plainObjectTokenManager as PersistedBlob\n    );\n\n    _assert(typeof uid === 'string', auth, AuthErrorCode.INTERNAL_ERROR);\n    assertStringOrUndefined(displayName, auth.name);\n    assertStringOrUndefined(email, auth.name);\n    _assert(\n      typeof emailVerified === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof isAnonymous === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    assertStringOrUndefined(phoneNumber, auth.name);\n    assertStringOrUndefined(photoURL, auth.name);\n    assertStringOrUndefined(tenantId, auth.name);\n    assertStringOrUndefined(_redirectEventId, auth.name);\n    assertStringOrUndefined(createdAt, auth.name);\n    assertStringOrUndefined(lastLoginAt, auth.name);\n    const user = new UserImpl({\n      uid,\n      auth,\n      email,\n      emailVerified,\n      displayName,\n      isAnonymous,\n      photoURL,\n      phoneNumber,\n      tenantId,\n      stsTokenManager,\n      createdAt,\n      lastLoginAt\n    });\n\n    if (providerData && Array.isArray(providerData)) {\n      user.providerData = providerData.map(userInfo => ({ ...userInfo }));\n    }\n\n    if (_redirectEventId) {\n      user._redirectEventId = _redirectEventId;\n    }\n\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserInternal> {\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromServerResponse(idTokenResponse);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: idTokenResponse.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // Updates the user info and data and resolves with a user instance.\n    await _reloadWithoutSaving(user);\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromGetAccountInfoResponse(\n    auth: AuthInternal,\n    response: GetAccountInfoResponse,\n    idToken: string\n  ): Promise<UserInternal> {\n    const coreAccount = response.users[0];\n    _assert(coreAccount.localId !== undefined, AuthErrorCode.INTERNAL_ERROR);\n\n    const providerData: UserInfo[] =\n      coreAccount.providerUserInfo !== undefined\n        ? extractProviderData(coreAccount.providerUserInfo)\n        : [];\n\n    const isAnonymous =\n      !(coreAccount.email && coreAccount.passwordHash) && !providerData?.length;\n\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromIdToken(idToken);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: coreAccount.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // update the user with data from the GetAccountInfo response.\n    const updates: Partial<UserInternal> = {\n      uid: coreAccount.localId,\n      displayName: coreAccount.displayName || null,\n      photoURL: coreAccount.photoUrl || null,\n      email: coreAccount.email || null,\n      emailVerified: coreAccount.emailVerified || false,\n      phoneNumber: coreAccount.phoneNumber || null,\n      tenantId: coreAccount.tenantId || null,\n      providerData,\n      metadata: new UserMetadata(\n        coreAccount.createdAt,\n        coreAccount.lastLoginAt\n      ),\n      isAnonymous:\n        !(coreAccount.email && coreAccount.passwordHash) &&\n        !providerData?.length\n    };\n\n    Object.assign(user, updates);\n    return user;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\n/**\n * Our API has a lot of one-off constants that are used to do things.\n * Unfortunately we can't export these as classes instantiated directly since\n * the constructor may side effect and therefore can't be proven to be safely\n * culled. Instead, we export these classes themselves as a lowerCamelCase\n * constant, and instantiate them under the hood.\n */\nexport interface SingletonInstantiator<T> {\n  new (): T;\n}\n\nconst instanceCache: Map<unknown, unknown> = new Map();\n\nexport function _getInstance<T>(cls: unknown): T {\n  debugAssert(cls instanceof Function, 'Expected a class definition');\n  let instance = instanceCache.get(cls) as T | undefined;\n\n  if (instance) {\n    debugAssert(\n      instance instanceof cls,\n      'Instance stored in cache mismatched with class'\n    );\n    return instance;\n  }\n\n  instance = new (cls as SingletonInstantiator<T>)();\n  instanceCache.set(cls, instance);\n  return instance;\n}\n\nexport function _clearInstanceMap(): void {\n  instanceCache.clear();\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../persistence';\n\nexport class InMemoryPersistence implements PersistenceInternal {\n  static type: 'NONE' = 'NONE';\n  readonly type = PersistenceType.NONE;\n  storage: Record<string, PersistenceValue> = {};\n\n  async _isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage[key] = value;\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = this.storage[key];\n    return value === undefined ? null : (value as T);\n  }\n\n  async _remove(key: string): Promise<void> {\n    delete this.storage[key];\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nexport const inMemoryPersistence: Persistence = InMemoryPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { PersistedBlob, PersistenceInternal } from '../persistence';\nimport { UserImpl } from '../user/user_impl';\nimport { _getInstance } from '../util/instantiator';\nimport { inMemoryPersistence } from './in_memory';\n\nexport const enum KeyName {\n  AUTH_USER = 'authUser',\n  AUTH_EVENT = 'authEvent',\n  REDIRECT_USER = 'redirectUser',\n  PERSISTENCE_USER = 'persistence'\n}\nexport const enum Namespace {\n  PERSISTENCE = 'firebase'\n}\n\nexport function _persistenceKeyName(\n  key: string,\n  apiKey: ApiKey,\n  appName: AppName\n): string {\n  return `${Namespace.PERSISTENCE}:${key}:${apiKey}:${appName}`;\n}\n\nexport class PersistenceUserManager {\n  private readonly fullUserKey: string;\n  private readonly fullPersistenceKey: string;\n  private readonly boundEventHandler: () => void;\n\n  private constructor(\n    public persistence: PersistenceInternal,\n    private readonly auth: AuthInternal,\n    private readonly userKey: string\n  ) {\n    const { config, name } = this.auth;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\n      KeyName.PERSISTENCE_USER,\n      config.apiKey,\n      name\n    );\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  setCurrentUser(user: UserInternal): Promise<void> {\n    return this.persistence._set(this.fullUserKey, user.toJSON());\n  }\n\n  async getCurrentUser(): Promise<UserInternal | null> {\n    const blob = await this.persistence._get<PersistedBlob>(this.fullUserKey);\n    return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n  }\n\n  removeCurrentUser(): Promise<void> {\n    return this.persistence._remove(this.fullUserKey);\n  }\n\n  savePersistenceForRedirect(): Promise<void> {\n    return this.persistence._set(\n      this.fullPersistenceKey,\n      this.persistence.type\n    );\n  }\n\n  async setPersistence(newPersistence: PersistenceInternal): Promise<void> {\n    if (this.persistence === newPersistence) {\n      return;\n    }\n\n    const currentUser = await this.getCurrentUser();\n    await this.removeCurrentUser();\n\n    this.persistence = newPersistence;\n\n    if (currentUser) {\n      return this.setCurrentUser(currentUser);\n    }\n  }\n\n  delete(): void {\n    this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  static async create(\n    auth: AuthInternal,\n    persistenceHierarchy: PersistenceInternal[],\n    userKey = KeyName.AUTH_USER\n  ): Promise<PersistenceUserManager> {\n    if (!persistenceHierarchy.length) {\n      return new PersistenceUserManager(\n        _getInstance(inMemoryPersistence),\n        auth,\n        userKey\n      );\n    }\n\n    // Eliminate any persistences that are not available\n    const availablePersistences = (\n      await Promise.all(\n        persistenceHierarchy.map(async persistence => {\n          if (await persistence._isAvailable()) {\n            return persistence;\n          }\n          return undefined;\n        })\n      )\n    ).filter(persistence => persistence) as PersistenceInternal[];\n\n    // Fall back to the first persistence listed, or in memory if none available\n    let selectedPersistence =\n      availablePersistences[0] ||\n      _getInstance<PersistenceInternal>(inMemoryPersistence);\n\n    const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n\n    // Pull out the existing user, setting the chosen persistence to that\n    // persistence if the user exists.\n    let userToMigrate: UserInternal | null = null;\n    // Note, here we check for a user in _all_ persistences, not just the\n    // ones deemed available. If we can migrate a user out of a broken\n    // persistence, we will (but only if that persistence supports migration).\n    for (const persistence of persistenceHierarchy) {\n      try {\n        const blob = await persistence._get<PersistedBlob>(key);\n        if (blob) {\n          const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n          if (persistence !== selectedPersistence) {\n            userToMigrate = user;\n          }\n          selectedPersistence = persistence;\n          break;\n        }\n      } catch {}\n    }\n\n    // If we find the user in a persistence that does support migration, use\n    // that migration path (of only persistences that support migration)\n    const migrationHierarchy = availablePersistences.filter(\n      p => p._shouldAllowMigration\n    );\n\n    // If the persistence does _not_ allow migration, just finish off here\n    if (\n      !selectedPersistence._shouldAllowMigration ||\n      !migrationHierarchy.length\n    ) {\n      return new PersistenceUserManager(selectedPersistence, auth, userKey);\n    }\n\n    selectedPersistence = migrationHierarchy[0];\n    if (userToMigrate) {\n      // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n      // we'll just let it bubble to surface the error.\n      await selectedPersistence._set(key, userToMigrate.toJSON());\n    }\n\n    // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n    // such as users getting stuck with a previous account after signing out and refreshing the tab.\n    await Promise.all(\n      persistenceHierarchy.map(async persistence => {\n        if (persistence !== selectedPersistence) {\n          try {\n            await persistence._remove(key);\n          } catch {}\n        }\n      })\n    );\n    return new PersistenceUserManager(selectedPersistence, auth, userKey);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIE, getUA } from '@firebase/util';\n\ninterface NavigatorStandalone extends Navigator {\n  standalone?: unknown;\n}\n\ninterface Document {\n  documentMode?: number;\n}\n\n/**\n * Enums for Browser name.\n */\nexport const enum BrowserName {\n  ANDROID = 'Android',\n  BLACKBERRY = 'Blackberry',\n  EDGE = 'Edge',\n  FIREFOX = 'Firefox',\n  IE = 'IE',\n  IEMOBILE = 'IEMobile',\n  OPERA = 'Opera',\n  OTHER = 'Other',\n  CHROME = 'Chrome',\n  SAFARI = 'Safari',\n  SILK = 'Silk',\n  WEBOS = 'Webos'\n}\n\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nexport function _getBrowserName(userAgent: string): BrowserName | string {\n  const ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return BrowserName.OPERA;\n  } else if (_isIEMobile(ua)) {\n    // Windows phone IEMobile browser.\n    return BrowserName.IEMOBILE;\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return BrowserName.IE;\n  } else if (ua.includes('edge/')) {\n    return BrowserName.EDGE;\n  } else if (_isFirefox(ua)) {\n    return BrowserName.FIREFOX;\n  } else if (ua.includes('silk/')) {\n    return BrowserName.SILK;\n  } else if (_isBlackBerry(ua)) {\n    // Blackberry browser.\n    return BrowserName.BLACKBERRY;\n  } else if (_isWebOS(ua)) {\n    // WebOS default browser.\n    return BrowserName.WEBOS;\n  } else if (_isSafari(ua)) {\n    return BrowserName.SAFARI;\n  } else if (\n    (ua.includes('chrome/') || _isChromeIOS(ua)) &&\n    !ua.includes('edge/')\n  ) {\n    return BrowserName.CHROME;\n  } else if (_isAndroid(ua)) {\n    // Android stock browser.\n    return BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    const matches = userAgent.match(re);\n    if (matches?.length === 2) {\n      return matches[1];\n    }\n  }\n  return BrowserName.OTHER;\n}\n\nexport function _isFirefox(ua = getUA()): boolean {\n  return /firefox\\//i.test(ua);\n}\n\nexport function _isSafari(userAgent = getUA()): boolean {\n  const ua = userAgent.toLowerCase();\n  return (\n    ua.includes('safari/') &&\n    !ua.includes('chrome/') &&\n    !ua.includes('crios/') &&\n    !ua.includes('android')\n  );\n}\n\nexport function _isChromeIOS(ua = getUA()): boolean {\n  return /crios\\//i.test(ua);\n}\n\nexport function _isIEMobile(ua = getUA()): boolean {\n  return /iemobile/i.test(ua);\n}\n\nexport function _isAndroid(ua = getUA()): boolean {\n  return /android/i.test(ua);\n}\n\nexport function _isBlackBerry(ua = getUA()): boolean {\n  return /blackberry/i.test(ua);\n}\n\nexport function _isWebOS(ua = getUA()): boolean {\n  return /webos/i.test(ua);\n}\n\nexport function _isIOS(ua = getUA()): boolean {\n  return (\n    /iphone|ipad|ipod/i.test(ua) ||\n    (/macintosh/i.test(ua) && /mobile/i.test(ua))\n  );\n}\n\nexport function _isIOS7Or8(ua = getUA()): boolean {\n  return (\n    /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n    /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua)\n  );\n}\n\nexport function _isIOSStandalone(ua = getUA()): boolean {\n  return _isIOS(ua) && !!(window.navigator as NavigatorStandalone)?.standalone;\n}\n\nexport function _isIE10(): boolean {\n  return isIE() && (document as Document).documentMode === 10;\n}\n\nexport function _isMobileBrowser(ua: string = getUA()): boolean {\n  // TODO: implement getBrowserName equivalent for OS.\n  return (\n    _isIOS(ua) ||\n    _isAndroid(ua) ||\n    _isWebOS(ua) ||\n    _isBlackBerry(ua) ||\n    /windows phone/i.test(ua) ||\n    _isIEMobile(ua)\n  );\n}\n\nexport function _isIframe(): boolean {\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { _getBrowserName } from './browser';\nimport { getUA } from '@firebase/util';\n\nexport const enum ClientImplementation {\n  CORE = 'JsCore'\n}\n\n/**\n * @internal\n */\nexport const enum ClientPlatform {\n  BROWSER = 'Browser',\n  NODE = 'Node',\n  REACT_NATIVE = 'ReactNative',\n  CORDOVA = 'Cordova',\n  WORKER = 'Worker',\n  WEB_EXTENSION = 'WebExtension'\n}\n\n/*\n * Determine the SDK version string\n */\nexport function _getClientVersion(\n  clientPlatform: ClientPlatform,\n  frameworks: readonly string[] = []\n): string {\n  let reportedPlatform: string;\n  switch (clientPlatform) {\n    case ClientPlatform.BROWSER:\n      // In a browser environment, report the browser name.\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case ClientPlatform.WORKER:\n      // Technically a worker runs from a browser but we need to differentiate a\n      // worker from a browser.\n      // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  const reportedFrameworks = frameworks.length\n    ? frameworks.join(',')\n    : 'FirebaseCore-web'; /* default value if no other framework is used */\n  return `${reportedPlatform}/${ClientImplementation.CORE}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport { Unsubscribe, User } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\n\ninterface MiddlewareEntry {\n  (user: User | null): Promise<void>;\n  onAbort?: () => void;\n}\n\nexport class AuthMiddlewareQueue {\n  private readonly queue: MiddlewareEntry[] = [];\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  pushCallback(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    // The callback could be sync or async. Wrap it into a\n    // function that is always async.\n    const wrappedCallback: MiddlewareEntry = (\n      user: User | null\n    ): Promise<void> =>\n      new Promise((resolve, reject) => {\n        try {\n          const result = callback(user);\n          // Either resolve with existing promise or wrap a non-promise\n          // return value into a promise.\n          resolve(result);\n        } catch (e) {\n          // Sync callback throws.\n          reject(e);\n        }\n      });\n    // Attach the onAbort if present\n    wrappedCallback.onAbort = onAbort;\n    this.queue.push(wrappedCallback);\n\n    const index = this.queue.length - 1;\n    return () => {\n      // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n      // indexing of other elements.\n      this.queue[index] = () => Promise.resolve();\n    };\n  }\n\n  async runMiddleware(nextUser: User | null): Promise<void> {\n    if (this.auth.currentUser === nextUser) {\n      return;\n    }\n\n    // While running the middleware, build a temporary stack of onAbort\n    // callbacks to call if one middleware callback rejects.\n\n    const onAbortStack: Array<() => void> = [];\n    try {\n      for (const beforeStateCallback of this.queue) {\n        await beforeStateCallback(nextUser);\n\n        // Only push the onAbort if the callback succeeds\n        if (beforeStateCallback.onAbort) {\n          onAbortStack.push(beforeStateCallback.onAbort);\n        }\n      }\n    } catch (e) {\n      // Run all onAbort, with separate try/catch to ignore any errors and\n      // continue\n      onAbortStack.reverse();\n      for (const onAbort of onAbortStack) {\n        try {\n          onAbort();\n        } catch (_) {\n          /* swallow error */\n        }\n      }\n\n      throw this.auth._errorFactory.create(AuthErrorCode.LOGIN_BLOCKED, {\n        originalMessage: (e as Error)?.message\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\n/**\n * Request object for fetching the password policy.\n */\nexport interface GetPasswordPolicyRequest {\n  tenantId?: string;\n}\n\n/**\n * Response object for fetching the password policy.\n */\nexport interface GetPasswordPolicyResponse {\n  customStrengthOptions: {\n    minPasswordLength?: number;\n    maxPasswordLength?: number;\n    containsLowercaseCharacter?: boolean;\n    containsUppercaseCharacter?: boolean;\n    containsNumericCharacter?: boolean;\n    containsNonAlphanumericCharacter?: boolean;\n  };\n  allowedNonAlphanumericCharacters?: string[];\n  enforcementState: string;\n  forceUpgradeOnSignin?: boolean;\n  schemaVersion: number;\n}\n\n/**\n * Fetches the password policy for the currently set tenant or the project if no tenant is set.\n *\n * @param auth Auth object.\n * @param request Password policy request.\n * @returns Password policy response.\n */\nexport async function _getPasswordPolicy(\n  auth: Auth,\n  request: GetPasswordPolicyRequest = {}\n): Promise<GetPasswordPolicyResponse> {\n  return _performApiRequest<\n    GetPasswordPolicyRequest,\n    GetPasswordPolicyResponse\n  >(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PASSWORD_POLICY,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GetPasswordPolicyResponse } from '../../api/password_policy/get_password_policy';\nimport {\n  PasswordPolicyCustomStrengthOptions,\n  PasswordPolicyInternal,\n  PasswordValidationStatusInternal\n} from '../../model/password_policy';\nimport { PasswordValidationStatus } from '../../model/public_types';\n\n// Minimum min password length enforced by the backend, even if no minimum length is set.\nconst MINIMUM_MIN_PASSWORD_LENGTH = 6;\n\n/**\n * Stores password policy requirements and provides password validation against the policy.\n *\n * @internal\n */\nexport class PasswordPolicyImpl implements PasswordPolicyInternal {\n  readonly customStrengthOptions: PasswordPolicyCustomStrengthOptions;\n  readonly allowedNonAlphanumericCharacters: string;\n  readonly enforcementState: string;\n  readonly forceUpgradeOnSignin: boolean;\n  readonly schemaVersion: number;\n\n  constructor(response: GetPasswordPolicyResponse) {\n    // Only include custom strength options defined in the response.\n    const responseOptions = response.customStrengthOptions;\n    this.customStrengthOptions = {};\n    // TODO: Remove once the backend is updated to include the minimum min password length instead of undefined when there is no minimum length set.\n    this.customStrengthOptions.minPasswordLength =\n      responseOptions.minPasswordLength ?? MINIMUM_MIN_PASSWORD_LENGTH;\n    if (responseOptions.maxPasswordLength) {\n      this.customStrengthOptions.maxPasswordLength =\n        responseOptions.maxPasswordLength;\n    }\n    if (responseOptions.containsLowercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsLowercaseLetter =\n        responseOptions.containsLowercaseCharacter;\n    }\n    if (responseOptions.containsUppercaseCharacter !== undefined) {\n      this.customStrengthOptions.containsUppercaseLetter =\n        responseOptions.containsUppercaseCharacter;\n    }\n    if (responseOptions.containsNumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNumericCharacter =\n        responseOptions.containsNumericCharacter;\n    }\n    if (responseOptions.containsNonAlphanumericCharacter !== undefined) {\n      this.customStrengthOptions.containsNonAlphanumericCharacter =\n        responseOptions.containsNonAlphanumericCharacter;\n    }\n\n    this.enforcementState = response.enforcementState;\n    if (this.enforcementState === 'ENFORCEMENT_STATE_UNSPECIFIED') {\n      this.enforcementState = 'OFF';\n    }\n\n    // Use an empty string if no non-alphanumeric characters are specified in the response.\n    this.allowedNonAlphanumericCharacters =\n      response.allowedNonAlphanumericCharacters?.join('') ?? '';\n\n    this.forceUpgradeOnSignin = response.forceUpgradeOnSignin ?? false;\n    this.schemaVersion = response.schemaVersion;\n  }\n\n  validatePassword(password: string): PasswordValidationStatus {\n    const status: PasswordValidationStatusInternal = {\n      isValid: true,\n      passwordPolicy: this\n    };\n\n    // Check the password length and character options.\n    this.validatePasswordLengthOptions(password, status);\n    this.validatePasswordCharacterOptions(password, status);\n\n    // Combine the status into single isValid property.\n    status.isValid &&= status.meetsMinPasswordLength ?? true;\n    status.isValid &&= status.meetsMaxPasswordLength ?? true;\n    status.isValid &&= status.containsLowercaseLetter ?? true;\n    status.isValid &&= status.containsUppercaseLetter ?? true;\n    status.isValid &&= status.containsNumericCharacter ?? true;\n    status.isValid &&= status.containsNonAlphanumericCharacter ?? true;\n\n    return status;\n  }\n\n  /**\n   * Validates that the password meets the length options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordLengthOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    const minPasswordLength = this.customStrengthOptions.minPasswordLength;\n    const maxPasswordLength = this.customStrengthOptions.maxPasswordLength;\n    if (minPasswordLength) {\n      status.meetsMinPasswordLength = password.length >= minPasswordLength;\n    }\n    if (maxPasswordLength) {\n      status.meetsMaxPasswordLength = password.length <= maxPasswordLength;\n    }\n  }\n\n  /**\n   * Validates that the password meets the character options for the policy.\n   *\n   * @param password Password to validate.\n   * @param status Validation status.\n   */\n  private validatePasswordCharacterOptions(\n    password: string,\n    status: PasswordValidationStatusInternal\n  ): void {\n    // Assign statuses for requirements even if the password is an empty string.\n    this.updatePasswordCharacterOptionsStatuses(\n      status,\n      /* containsLowercaseCharacter= */ false,\n      /* containsUppercaseCharacter= */ false,\n      /* containsNumericCharacter= */ false,\n      /* containsNonAlphanumericCharacter= */ false\n    );\n\n    let passwordChar;\n    for (let i = 0; i < password.length; i++) {\n      passwordChar = password.charAt(i);\n      this.updatePasswordCharacterOptionsStatuses(\n        status,\n        /* containsLowercaseCharacter= */ passwordChar >= 'a' &&\n          passwordChar <= 'z',\n        /* containsUppercaseCharacter= */ passwordChar >= 'A' &&\n          passwordChar <= 'Z',\n        /* containsNumericCharacter= */ passwordChar >= '0' &&\n          passwordChar <= '9',\n        /* containsNonAlphanumericCharacter= */ this.allowedNonAlphanumericCharacters.includes(\n          passwordChar\n        )\n      );\n    }\n  }\n\n  /**\n   * Updates the running validation status with the statuses for the character options.\n   * Expected to be called each time a character is processed to update each option status\n   * based on the current character.\n   *\n   * @param status Validation status.\n   * @param containsLowercaseCharacter Whether the character is a lowercase letter.\n   * @param containsUppercaseCharacter Whether the character is an uppercase letter.\n   * @param containsNumericCharacter Whether the character is a numeric character.\n   * @param containsNonAlphanumericCharacter Whether the character is a non-alphanumeric character.\n   */\n  private updatePasswordCharacterOptionsStatuses(\n    status: PasswordValidationStatusInternal,\n    containsLowercaseCharacter: boolean,\n    containsUppercaseCharacter: boolean,\n    containsNumericCharacter: boolean,\n    containsNonAlphanumericCharacter: boolean\n  ): void {\n    if (this.customStrengthOptions.containsLowercaseLetter) {\n      status.containsLowercaseLetter ||= containsLowercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsUppercaseLetter) {\n      status.containsUppercaseLetter ||= containsUppercaseCharacter;\n    }\n    if (this.customStrengthOptions.containsNumericCharacter) {\n      status.containsNumericCharacter ||= containsNumericCharacter;\n    }\n    if (this.customStrengthOptions.containsNonAlphanumericCharacter) {\n      status.containsNonAlphanumericCharacter ||=\n        containsNonAlphanumericCharacter;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _isFirebaseServerApp,\n  _FirebaseService,\n  FirebaseApp\n} from '@firebase/app';\nimport { Provider } from '@firebase/component';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport {\n  Auth,\n  AuthErrorMap,\n  AuthSettings,\n  EmulatorConfig,\n  NextOrObserver,\n  Persistence,\n  PopupRedirectResolver,\n  User,\n  UserCredential,\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../../model/public_types';\nimport {\n  createSubscribe,\n  ErrorFactory,\n  FirebaseError,\n  getModularInstance,\n  Observer,\n  Subscribe\n} from '@firebase/util';\n\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport {\n  AuthErrorCode,\n  AuthErrorParams,\n  ErrorMapRetriever,\n  _DEFAULT_AUTH_ERROR_FACTORY\n} from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport {\n  KeyName,\n  PersistenceUserManager\n} from '../persistence/persistence_user_manager';\nimport { _reloadWithoutSaving } from '../user/reload';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { _getUserLanguage } from '../util/navigator';\nimport { _getClientVersion } from '../util/version';\nimport { HttpHeader } from '../../api';\nimport {\n  RevokeTokenRequest,\n  TokenType,\n  revokeToken\n} from '../../api/authentication/token';\nimport { AuthMiddlewareQueue } from './middleware';\nimport { RecaptchaConfig } from '../../platform_browser/recaptcha/recaptcha';\nimport { _logWarn } from '../util/log';\nimport { _getPasswordPolicy } from '../../api/password_policy/get_password_policy';\nimport { PasswordPolicyInternal } from '../../model/password_policy';\nimport { PasswordPolicyImpl } from './password_policy_impl';\nimport { getAccountInfo } from '../../api/account_management/account';\nimport { UserImpl } from '../user/user_impl';\n\ninterface AsyncAction {\n  (): Promise<void>;\n}\n\nexport const enum DefaultConfig {\n  TOKEN_API_HOST = 'securetoken.googleapis.com',\n  API_HOST = 'identitytoolkit.googleapis.com',\n  API_SCHEME = 'https'\n}\n\nexport class AuthImpl implements AuthInternal, _FirebaseService {\n  currentUser: User | null = null;\n  emulatorConfig: EmulatorConfig | null = null;\n  private operations = Promise.resolve();\n  private persistenceManager?: PersistenceUserManager;\n  private redirectPersistenceManager?: PersistenceUserManager;\n  private authStateSubscription = new Subscription<User>(this);\n  private idTokenSubscription = new Subscription<User>(this);\n  private readonly beforeStateQueue = new AuthMiddlewareQueue(this);\n  private redirectUser: UserInternal | null = null;\n  private isProactiveRefreshEnabled = false;\n  private readonly EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION: number = 1;\n\n  // Any network calls will set this to true and prevent subsequent emulator\n  // initialization\n  _canInitEmulator = true;\n  _isInitialized = false;\n  _deleted = false;\n  _initializationPromise: Promise<void> | null = null;\n  _popupRedirectResolver: PopupRedirectResolverInternal | null = null;\n  _errorFactory: ErrorFactory<AuthErrorCode, AuthErrorParams> =\n    _DEFAULT_AUTH_ERROR_FACTORY;\n  _agentRecaptchaConfig: RecaptchaConfig | null = null;\n  _tenantRecaptchaConfigs: Record<string, RecaptchaConfig> = {};\n  _projectPasswordPolicy: PasswordPolicyInternal | null = null;\n  _tenantPasswordPolicies: Record<string, PasswordPolicyInternal> = {};\n  readonly name: string;\n\n  // Tracks the last notified UID for state change listeners to prevent\n  // repeated calls to the callbacks. Undefined means it's never been\n  // called, whereas null means it's been called with a signed out user\n  private lastNotifiedUid: string | null | undefined = undefined;\n\n  languageCode: string | null = null;\n  tenantId: string | null = null;\n  settings: AuthSettings = { appVerificationDisabledForTesting: false };\n\n  constructor(\n    public readonly app: FirebaseApp,\n    private readonly heartbeatServiceProvider: Provider<'heartbeat'>,\n    private readonly appCheckServiceProvider: Provider<AppCheckInternalComponentName>,\n    public readonly config: ConfigInternal\n  ) {\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n\n  _initializeWithPersistence(\n    persistenceHierarchy: PersistenceInternal[],\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (popupRedirectResolver) {\n      this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n    }\n\n    // Have to check for app deletion throughout initialization (after each\n    // promise resolution)\n    this._initializationPromise = this.queue(async () => {\n      if (this._deleted) {\n        return;\n      }\n\n      this.persistenceManager = await PersistenceUserManager.create(\n        this,\n        persistenceHierarchy\n      );\n\n      if (this._deleted) {\n        return;\n      }\n\n      // Initialize the resolver early if necessary (only applicable to web:\n      // this will cause the iframe to load immediately in certain cases)\n      if (this._popupRedirectResolver?._shouldInitProactively) {\n        // If this fails, don't halt auth loading\n        try {\n          await this._popupRedirectResolver._initialize(this);\n        } catch (e) {\n          /* Ignore the error */\n        }\n      }\n\n      await this.initializeCurrentUser(popupRedirectResolver);\n\n      this.lastNotifiedUid = this.currentUser?.uid || null;\n\n      if (this._deleted) {\n        return;\n      }\n\n      this._isInitialized = true;\n    });\n\n    return this._initializationPromise;\n  }\n\n  /**\n   * If the persistence is changed in another window, the user manager will let us know\n   */\n  async _onStorageEvent(): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n\n    const user = await this.assertedPersistence.getCurrentUser();\n\n    if (!this.currentUser && !user) {\n      // No change, do nothing (was signed out and remained signed out).\n      return;\n    }\n\n    // If the same user is to be synchronized.\n    if (this.currentUser && user && this.currentUser.uid === user.uid) {\n      // Data update, simply copy data changes.\n      this._currentUser._assign(user);\n      // If tokens changed from previous user tokens, this will trigger\n      // notifyAuthListeners_.\n      await this.currentUser.getIdToken();\n      return;\n    }\n\n    // Update current Auth state. Either a new login or logout.\n    // Skip blocking callbacks, they should not apply to a change in another tab.\n    await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\n  }\n\n  private async initializeCurrentUserFromIdToken(\n    idToken: string\n  ): Promise<void> {\n    try {\n      const response = await getAccountInfo(this, { idToken });\n      const user = await UserImpl._fromGetAccountInfoResponse(\n        this,\n        response,\n        idToken\n      );\n      await this.directlySetCurrentUser(user);\n    } catch (err) {\n      console.warn(\n        'FirebaseServerApp could not login user with provided authIdToken: ',\n        err\n      );\n      await this.directlySetCurrentUser(null);\n    }\n  }\n\n  private async initializeCurrentUser(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      const idToken = this.app.settings.authIdToken;\n      if (idToken) {\n        // Start the auth operation in the next tick to allow a moment for the customer's app to\n        // attach an emulator, if desired.\n        return new Promise<void>(resolve => {\n          setTimeout(() =>\n            this.initializeCurrentUserFromIdToken(idToken).then(\n              resolve,\n              resolve\n            )\n          );\n        });\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    // First check to see if we have a pending redirect event.\n    const previouslyStoredUser =\n      (await this.assertedPersistence.getCurrentUser()) as UserInternal | null;\n    let futureCurrentUser = previouslyStoredUser;\n    let needsTocheckMiddleware = false;\n    if (popupRedirectResolver && this.config.authDomain) {\n      await this.getOrInitRedirectPersistenceManager();\n      const redirectUserEventId = this.redirectUser?._redirectEventId;\n      const storedUserEventId = futureCurrentUser?._redirectEventId;\n      const result = await this.tryRedirectSignIn(popupRedirectResolver);\n\n      // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n      // matches the redirect user, then we want to initially sign in with the\n      // new user object from result.\n      // TODO(samgho): More thoroughly test all of this\n      if (\n        (!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n        result?.user\n      ) {\n        futureCurrentUser = result.user as UserInternal;\n        needsTocheckMiddleware = true;\n      }\n    }\n\n    // If no user in persistence, there is no current user. Set to null.\n    if (!futureCurrentUser) {\n      return this.directlySetCurrentUser(null);\n    }\n\n    if (!futureCurrentUser._redirectEventId) {\n      // This isn't a redirect link operation, we can reload and bail.\n      // First though, ensure that we check the middleware is happy.\n      if (needsTocheckMiddleware) {\n        try {\n          await this.beforeStateQueue.runMiddleware(futureCurrentUser);\n        } catch (e) {\n          futureCurrentUser = previouslyStoredUser;\n          // We know this is available since the bit is only set when the\n          // resolver is available\n          this._popupRedirectResolver!._overrideRedirectResult(this, () =>\n            Promise.reject(e)\n          );\n        }\n      }\n\n      if (futureCurrentUser) {\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    _assert(this._popupRedirectResolver, this, AuthErrorCode.ARGUMENT_ERROR);\n    await this.getOrInitRedirectPersistenceManager();\n\n    // If the redirect user's event ID matches the current user's event ID,\n    // DO NOT reload the current user, otherwise they'll be cleared from storage.\n    // This is important for the reauthenticateWithRedirect() flow.\n    if (\n      this.redirectUser &&\n      this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId\n    ) {\n      return this.directlySetCurrentUser(futureCurrentUser);\n    }\n\n    return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n  }\n\n  private async tryRedirectSignIn(\n    redirectResolver: PopupRedirectResolver\n  ): Promise<UserCredential | null> {\n    // The redirect user needs to be checked (and signed in if available)\n    // during auth initialization. All of the normal sign in and link/reauth\n    // flows call back into auth and push things onto the promise queue. We\n    // need to await the result of the redirect sign in *inside the promise\n    // queue*. This presents a problem: we run into deadlock. See:\n    //    ┌> [Initialization] ─────┐\n    //    ┌> [<other queue tasks>] │\n    //    └─ [getRedirectResult] <─┘\n    //    where [] are tasks on the queue and arrows denote awaits\n    // Initialization will never complete because it's waiting on something\n    // that's waiting for initialization to complete!\n    //\n    // Instead, this method calls getRedirectResult() (stored in\n    // _completeRedirectFn) with an optional parameter that instructs all of\n    // the underlying auth operations to skip anything that mutates auth state.\n\n    let result: UserCredential | null = null;\n    try {\n      // We know this._popupRedirectResolver is set since redirectResolver\n      // is passed in. The _completeRedirectFn expects the unwrapped extern.\n      result = await this._popupRedirectResolver!._completeRedirectFn(\n        this,\n        redirectResolver,\n        true\n      );\n    } catch (e) {\n      // Swallow any errors here; the code can retrieve them in\n      // getRedirectResult().\n      await this._setRedirectUser(null);\n    }\n\n    return result;\n  }\n\n  private async reloadAndSetCurrentUserOrClear(\n    user: UserInternal\n  ): Promise<void> {\n    try {\n      await _reloadWithoutSaving(user);\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !==\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        // Something's wrong with the user's token. Log them out and remove\n        // them from storage\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    return this.directlySetCurrentUser(user);\n  }\n\n  useDeviceLanguage(): void {\n    this.languageCode = _getUserLanguage();\n  }\n\n  async _delete(): Promise<void> {\n    this._deleted = true;\n  }\n\n  async updateCurrentUser(userExtern: User | null): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    // The public updateCurrentUser method needs to make a copy of the user,\n    // and also check that the project matches\n    const user = userExtern\n      ? (getModularInstance(userExtern) as UserInternal)\n      : null;\n    if (user) {\n      _assert(\n        user.auth.config.apiKey === this.config.apiKey,\n        this,\n        AuthErrorCode.INVALID_AUTH\n      );\n    }\n    return this._updateCurrentUser(user && user._clone(this));\n  }\n\n  async _updateCurrentUser(\n    user: User | null,\n    skipBeforeStateCallbacks: boolean = false\n  ): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n    if (user) {\n      _assert(\n        this.tenantId === user.tenantId,\n        this,\n        AuthErrorCode.TENANT_ID_MISMATCH\n      );\n    }\n\n    if (!skipBeforeStateCallbacks) {\n      await this.beforeStateQueue.runMiddleware(user);\n    }\n\n    return this.queue(async () => {\n      await this.directlySetCurrentUser(user as UserInternal | null);\n      this.notifyAuthListeners();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    // Run first, to block _setRedirectUser() if any callbacks fail.\n    await this.beforeStateQueue.runMiddleware(null);\n    // Clear the redirect user when signOut is called\n    if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n      await this._setRedirectUser(null);\n    }\n\n    // Prevent callbacks from being called again in _updateCurrentUser, as\n    // they were already called in the first line.\n    return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\n  }\n\n  setPersistence(persistence: Persistence): Promise<void> {\n    if (_isFirebaseServerApp(this.app)) {\n      return Promise.reject(\n        _serverAppCurrentUserOperationNotSupportedError(this)\n      );\n    }\n    return this.queue(async () => {\n      await this.assertedPersistence.setPersistence(_getInstance(persistence));\n    });\n  }\n\n  _getRecaptchaConfig(): RecaptchaConfig | null {\n    if (this.tenantId == null) {\n      return this._agentRecaptchaConfig;\n    } else {\n      return this._tenantRecaptchaConfigs[this.tenantId];\n    }\n  }\n\n  async validatePassword(password: string): Promise<PasswordValidationStatus> {\n    if (!this._getPasswordPolicyInternal()) {\n      await this._updatePasswordPolicy();\n    }\n\n    // Password policy will be defined after fetching.\n    const passwordPolicy: PasswordPolicyInternal =\n      this._getPasswordPolicyInternal()!;\n\n    // Check that the policy schema version is supported by the SDK.\n    // TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.\n    if (\n      passwordPolicy.schemaVersion !==\n      this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION\n    ) {\n      return Promise.reject(\n        this._errorFactory.create(\n          AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION,\n          {}\n        )\n      );\n    }\n\n    return passwordPolicy.validatePassword(password);\n  }\n\n  _getPasswordPolicyInternal(): PasswordPolicyInternal | null {\n    if (this.tenantId === null) {\n      return this._projectPasswordPolicy;\n    } else {\n      return this._tenantPasswordPolicies[this.tenantId];\n    }\n  }\n\n  async _updatePasswordPolicy(): Promise<void> {\n    const response = await _getPasswordPolicy(this);\n\n    const passwordPolicy: PasswordPolicyInternal = new PasswordPolicyImpl(\n      response\n    );\n\n    if (this.tenantId === null) {\n      this._projectPasswordPolicy = passwordPolicy;\n    } else {\n      this._tenantPasswordPolicies[this.tenantId] = passwordPolicy;\n    }\n  }\n\n  _getPersistence(): string {\n    return this.assertedPersistence.persistence.type;\n  }\n\n  _updateErrorMap(errorMap: AuthErrorMap): void {\n    this._errorFactory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n      'auth',\n      'Firebase',\n      (errorMap as ErrorMapRetriever)()\n    );\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.authStateSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  beforeAuthStateChanged(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    return this.beforeStateQueue.pushCallback(callback, onAbort);\n  }\n\n  onIdTokenChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.idTokenSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  authStateReady(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.currentUser) {\n        resolve();\n      } else {\n        const unsubscribe = this.onAuthStateChanged(() => {\n          unsubscribe();\n          resolve();\n        }, reject);\n      }\n    });\n  }\n\n  /**\n   * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n   */\n  async revokeAccessToken(token: string): Promise<void> {\n    if (this.currentUser) {\n      const idToken = await this.currentUser.getIdToken();\n      // Generalize this to accept other providers once supported.\n      const request: RevokeTokenRequest = {\n        providerId: 'apple.com',\n        tokenType: TokenType.ACCESS_TOKEN,\n        token,\n        idToken\n      };\n      if (this.tenantId != null) {\n        request.tenantId = this.tenantId;\n      }\n      await revokeToken(this, request);\n    }\n  }\n\n  toJSON(): object {\n    return {\n      apiKey: this.config.apiKey,\n      authDomain: this.config.authDomain,\n      appName: this.name,\n      currentUser: this._currentUser?.toJSON()\n    };\n  }\n\n  async _setRedirectUser(\n    user: UserInternal | null,\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    const redirectManager = await this.getOrInitRedirectPersistenceManager(\n      popupRedirectResolver\n    );\n    return user === null\n      ? redirectManager.removeCurrentUser()\n      : redirectManager.setCurrentUser(user);\n  }\n\n  private async getOrInitRedirectPersistenceManager(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<PersistenceUserManager> {\n    if (!this.redirectPersistenceManager) {\n      const resolver: PopupRedirectResolverInternal | null =\n        (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n        this._popupRedirectResolver;\n      _assert(resolver, this, AuthErrorCode.ARGUMENT_ERROR);\n      this.redirectPersistenceManager = await PersistenceUserManager.create(\n        this,\n        [_getInstance(resolver._redirectPersistence)],\n        KeyName.REDIRECT_USER\n      );\n      this.redirectUser =\n        await this.redirectPersistenceManager.getCurrentUser();\n    }\n\n    return this.redirectPersistenceManager;\n  }\n\n  async _redirectUserForId(id: string): Promise<UserInternal | null> {\n    // Make sure we've cleared any pending persistence actions if we're not in\n    // the initializer\n    if (this._isInitialized) {\n      await this.queue(async () => {});\n    }\n\n    if (this._currentUser?._redirectEventId === id) {\n      return this._currentUser;\n    }\n\n    if (this.redirectUser?._redirectEventId === id) {\n      return this.redirectUser;\n    }\n\n    return null;\n  }\n\n  async _persistUserIfCurrent(user: UserInternal): Promise<void> {\n    if (user === this.currentUser) {\n      return this.queue(async () => this.directlySetCurrentUser(user));\n    }\n  }\n\n  /** Notifies listeners only if the user is current */\n  _notifyListenersIfCurrent(user: UserInternal): void {\n    if (user === this.currentUser) {\n      this.notifyAuthListeners();\n    }\n  }\n\n  _key(): string {\n    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n  }\n\n  _startProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = true;\n    if (this.currentUser) {\n      this._currentUser._startProactiveRefresh();\n    }\n  }\n\n  _stopProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = false;\n    if (this.currentUser) {\n      this._currentUser._stopProactiveRefresh();\n    }\n  }\n\n  /** Returns the current user cast as the internal type */\n  get _currentUser(): UserInternal {\n    return this.currentUser as UserInternal;\n  }\n\n  private notifyAuthListeners(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    this.idTokenSubscription.next(this.currentUser);\n\n    const currentUid = this.currentUser?.uid ?? null;\n    if (this.lastNotifiedUid !== currentUid) {\n      this.lastNotifiedUid = currentUid;\n      this.authStateSubscription.next(this.currentUser);\n    }\n  }\n\n  private registerStateListener(\n    subscription: Subscription<User>,\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    if (this._deleted) {\n      return () => {};\n    }\n\n    const cb =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next.bind(nextOrObserver);\n\n    let isUnsubscribed = false;\n\n    const promise = this._isInitialized\n      ? Promise.resolve()\n      : this._initializationPromise;\n    _assert(promise, this, AuthErrorCode.INTERNAL_ERROR);\n    // The callback needs to be called asynchronously per the spec.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    promise.then(() => {\n      if (isUnsubscribed) {\n        return;\n      }\n      cb(this.currentUser);\n    });\n\n    if (typeof nextOrObserver === 'function') {\n      const unsubscribe = subscription.addObserver(\n        nextOrObserver,\n        error,\n        completed\n      );\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    } else {\n      const unsubscribe = subscription.addObserver(nextOrObserver);\n      return () => {\n        isUnsubscribed = true;\n        unsubscribe();\n      };\n    }\n  }\n\n  /**\n   * Unprotected (from race conditions) method to set the current user. This\n   * should only be called from within a queued callback. This is necessary\n   * because the queue shouldn't rely on another queued callback.\n   */\n  private async directlySetCurrentUser(\n    user: UserInternal | null\n  ): Promise<void> {\n    if (this.currentUser && this.currentUser !== user) {\n      this._currentUser._stopProactiveRefresh();\n    }\n    if (user && this.isProactiveRefreshEnabled) {\n      user._startProactiveRefresh();\n    }\n\n    this.currentUser = user;\n\n    if (user) {\n      await this.assertedPersistence.setCurrentUser(user);\n    } else {\n      await this.assertedPersistence.removeCurrentUser();\n    }\n  }\n\n  private queue(action: AsyncAction): Promise<void> {\n    // In case something errors, the callback still should be called in order\n    // to keep the promise chain alive\n    this.operations = this.operations.then(action, action);\n    return this.operations;\n  }\n\n  private get assertedPersistence(): PersistenceUserManager {\n    _assert(this.persistenceManager, this, AuthErrorCode.INTERNAL_ERROR);\n    return this.persistenceManager;\n  }\n\n  private frameworks: string[] = [];\n  private clientVersion: string;\n  _logFramework(framework: string): void {\n    if (!framework || this.frameworks.includes(framework)) {\n      return;\n    }\n    this.frameworks.push(framework);\n\n    // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n    // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n    this.frameworks.sort();\n    this.clientVersion = _getClientVersion(\n      this.config.clientPlatform,\n      this._getFrameworks()\n    );\n  }\n  _getFrameworks(): readonly string[] {\n    return this.frameworks;\n  }\n  async _getAdditionalHeaders(): Promise<Record<string, string>> {\n    // Additional headers on every request\n    const headers: Record<string, string> = {\n      [HttpHeader.X_CLIENT_VERSION]: this.clientVersion\n    };\n\n    if (this.app.options.appId) {\n      headers[HttpHeader.X_FIREBASE_GMPID] = this.app.options.appId;\n    }\n\n    // If the heartbeat service exists, add the heartbeat string\n    const heartbeatsHeader = await this.heartbeatServiceProvider\n      .getImmediate({\n        optional: true\n      })\n      ?.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers[HttpHeader.X_FIREBASE_CLIENT] = heartbeatsHeader;\n    }\n\n    // If the App Check service exists, add the App Check token in the headers\n    const appCheckToken = await this._getAppCheckToken();\n    if (appCheckToken) {\n      headers[HttpHeader.X_FIREBASE_APP_CHECK] = appCheckToken;\n    }\n\n    return headers;\n  }\n\n  async _getAppCheckToken(): Promise<string | undefined> {\n    const appCheckTokenResult = await this.appCheckServiceProvider\n      .getImmediate({ optional: true })\n      ?.getToken();\n    if (appCheckTokenResult?.error) {\n      // Context: appCheck.getToken() will never throw even if an error happened.\n      // In the error case, a dummy token will be returned along with an error field describing\n      // the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      _logWarn(\n        `Error while retrieving App Check token: ${appCheckTokenResult.error}`\n      );\n    }\n    return appCheckTokenResult?.token;\n  }\n}\n\n/**\n * Method to be used to cast down to our private implmentation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nexport function _castAuth(auth: Auth): AuthInternal {\n  return getModularInstance(auth) as AuthInternal;\n}\n\n/** Helper class to wrap subscriber logic */\nclass Subscription<T> {\n  private observer: Observer<T | null> | null = null;\n  readonly addObserver: Subscribe<T | null> = createSubscribe(\n    observer => (this.observer = observer)\n  );\n\n  constructor(readonly auth: AuthInternal) {}\n\n  get next(): NextFn<T | null> {\n    _assert(this.observer, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.observer.next.bind(this.observer);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface ExternalJSProvider {\n  loadJS(url: string): Promise<Event>;\n  recaptchaV2Script: string;\n  recaptchaEnterpriseScript: string;\n  gapiScript: string;\n}\n\nlet externalJSProvider: ExternalJSProvider = {\n  async loadJS() {\n    throw new Error('Unable to load external scripts');\n  },\n\n  recaptchaV2Script: '',\n  recaptchaEnterpriseScript: '',\n  gapiScript: ''\n};\n\nexport function _setExternalJSProvider(p: ExternalJSProvider): void {\n  externalJSProvider = p;\n}\n\nexport function _loadJS(url: string): Promise<Event> {\n  return externalJSProvider.loadJS(url);\n}\n\nexport function _recaptchaV2ScriptUrl(): string {\n  return externalJSProvider.recaptchaV2Script;\n}\n\nexport function _recaptchaEnterpriseScriptUrl(): string {\n  return externalJSProvider.recaptchaEnterpriseScript;\n}\n\nexport function _gapiScriptUrl(): string {\n  return externalJSProvider.gapiScript;\n}\n\nexport function _generateCallbackName(prefix: string): string {\n  return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\n}\n","/* eslint-disable @typescript-eslint/no-require-imports */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isEnterprise, RecaptchaConfig } from './recaptcha';\nimport { getRecaptchaConfig } from '../../api/authentication/recaptcha';\nimport {\n  RecaptchaClientType,\n  RecaptchaVersion,\n  RecaptchaActionName,\n  RecaptchaProvider\n} from '../../api';\n\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport * as jsHelpers from '../load_js';\nimport { AuthErrorCode } from '../../core/errors';\n\nexport const RECAPTCHA_ENTERPRISE_VERIFIER_TYPE = 'recaptcha-enterprise';\nexport const FAKE_TOKEN = 'NO_RECAPTCHA';\n\nexport class RecaptchaEnterpriseVerifier {\n  /**\n   * Identifies the type of application verifier (e.g. \"recaptcha-enterprise\").\n   */\n  readonly type = RECAPTCHA_ENTERPRISE_VERIFIER_TYPE;\n\n  private readonly auth: AuthInternal;\n\n  /**\n   *\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   */\n  constructor(authExtern: Auth) {\n    this.auth = _castAuth(authExtern);\n  }\n\n  /**\n   * Executes the verification process.\n   *\n   * @returns A Promise for a token that can be used to assert the validity of a request.\n   */\n  async verify(\n    action: string = 'verify',\n    forceRefresh = false\n  ): Promise<string> {\n    async function retrieveSiteKey(auth: AuthInternal): Promise<string> {\n      if (!forceRefresh) {\n        if (auth.tenantId == null && auth._agentRecaptchaConfig != null) {\n          return auth._agentRecaptchaConfig.siteKey;\n        }\n        if (\n          auth.tenantId != null &&\n          auth._tenantRecaptchaConfigs[auth.tenantId] !== undefined\n        ) {\n          return auth._tenantRecaptchaConfigs[auth.tenantId].siteKey;\n        }\n      }\n\n      return new Promise<string>(async (resolve, reject) => {\n        getRecaptchaConfig(auth, {\n          clientType: RecaptchaClientType.WEB,\n          version: RecaptchaVersion.ENTERPRISE\n        })\n          .then(response => {\n            if (response.recaptchaKey === undefined) {\n              reject(new Error('recaptcha Enterprise site key undefined'));\n            } else {\n              const config = new RecaptchaConfig(response);\n              if (auth.tenantId == null) {\n                auth._agentRecaptchaConfig = config;\n              } else {\n                auth._tenantRecaptchaConfigs[auth.tenantId] = config;\n              }\n              return resolve(config.siteKey);\n            }\n          })\n          .catch(error => {\n            reject(error);\n          });\n      });\n    }\n\n    function retrieveRecaptchaToken(\n      siteKey: string,\n      resolve: (value: string | PromiseLike<string>) => void,\n      reject: (reason?: unknown) => void\n    ): void {\n      const grecaptcha = window.grecaptcha;\n      if (isEnterprise(grecaptcha)) {\n        grecaptcha.enterprise.ready(() => {\n          grecaptcha.enterprise\n            .execute(siteKey, { action })\n            .then(token => {\n              resolve(token);\n            })\n            .catch(() => {\n              resolve(FAKE_TOKEN);\n            });\n        });\n      } else {\n        reject(Error('No reCAPTCHA enterprise script loaded.'));\n      }\n    }\n\n    return new Promise<string>((resolve, reject) => {\n      retrieveSiteKey(this.auth)\n        .then(siteKey => {\n          if (!forceRefresh && isEnterprise(window.grecaptcha)) {\n            retrieveRecaptchaToken(siteKey, resolve, reject);\n          } else {\n            if (typeof window === 'undefined') {\n              reject(\n                new Error('RecaptchaVerifier is only supported in browser')\n              );\n              return;\n            }\n            let url = jsHelpers._recaptchaEnterpriseScriptUrl();\n            if (url.length !== 0) {\n              url += siteKey;\n            }\n            jsHelpers\n              ._loadJS(url)\n              .then(() => {\n                retrieveRecaptchaToken(siteKey, resolve, reject);\n              })\n              .catch(error => {\n                reject(error);\n              });\n          }\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n}\n\nexport async function injectRecaptchaFields<T>(\n  auth: AuthInternal,\n  request: T,\n  action: RecaptchaActionName,\n  captchaResp = false\n): Promise<T> {\n  const verifier = new RecaptchaEnterpriseVerifier(auth);\n  let captchaResponse;\n  try {\n    captchaResponse = await verifier.verify(action);\n  } catch (error) {\n    captchaResponse = await verifier.verify(action, true);\n  }\n  const newRequest = { ...request };\n  if (!captchaResp) {\n    Object.assign(newRequest, { captchaResponse });\n  } else {\n    Object.assign(newRequest, { 'captchaResp': captchaResponse });\n  }\n  Object.assign(newRequest, { 'clientType': RecaptchaClientType.WEB });\n  Object.assign(newRequest, {\n    'recaptchaVersion': RecaptchaVersion.ENTERPRISE\n  });\n  return newRequest;\n}\n\ntype ActionMethod<TRequest, TResponse> = (\n  auth: Auth,\n  request: TRequest\n) => Promise<TResponse>;\n\nexport async function handleRecaptchaFlow<TRequest, TResponse>(\n  authInstance: AuthInternal,\n  request: TRequest,\n  actionName: RecaptchaActionName,\n  actionMethod: ActionMethod<TRequest, TResponse>\n): Promise<TResponse> {\n  if (\n    authInstance\n      ._getRecaptchaConfig()\n      ?.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)\n  ) {\n    const requestWithRecaptcha = await injectRecaptchaFields(\n      authInstance,\n      request,\n      actionName,\n      actionName === RecaptchaActionName.GET_OOB_CODE\n    );\n    return actionMethod(authInstance, requestWithRecaptcha);\n  } else {\n    return actionMethod(authInstance, request).catch(async error => {\n      if (error.code === `auth/${AuthErrorCode.MISSING_RECAPTCHA_TOKEN}`) {\n        console.log(\n          `${actionName} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`\n        );\n        const requestWithRecaptcha = await injectRecaptchaFields(\n          authInstance,\n          request,\n          actionName,\n          actionName === RecaptchaActionName.GET_OOB_CODE\n        );\n        return actionMethod(authInstance, requestWithRecaptcha);\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n}\n\nexport async function _initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  const authInternal = _castAuth(auth);\n\n  const response = await getRecaptchaConfig(authInternal, {\n    clientType: RecaptchaClientType.WEB,\n    version: RecaptchaVersion.ENTERPRISE\n  });\n\n  const config = new RecaptchaConfig(response);\n  if (authInternal.tenantId == null) {\n    authInternal._agentRecaptchaConfig = config;\n  } else {\n    authInternal._tenantRecaptchaConfigs[authInternal.tenantId] = config;\n  }\n\n  if (config.isProviderEnabled(RecaptchaProvider.EMAIL_PASSWORD_PROVIDER)) {\n    const verifier = new RecaptchaEnterpriseVerifier(authInternal);\n    void verifier.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp } from '@firebase/app';\nimport { deepEqual } from '@firebase/util';\nimport { Auth, Dependencies } from '../../model/public_types';\n\nimport { AuthErrorCode } from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport { _fail } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { AuthImpl } from './auth_impl';\n\n/**\n * Initializes an {@link Auth} instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the {@link Auth} instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize `Auth` with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nexport function initializeAuth(app: FirebaseApp, deps?: Dependencies): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    const auth = provider.getImmediate() as AuthImpl;\n    const initialOptions = provider.getOptions() as Dependencies;\n    if (deepEqual(initialOptions, deps ?? {})) {\n      return auth;\n    } else {\n      _fail(auth, AuthErrorCode.ALREADY_INITIALIZED);\n    }\n  }\n\n  const auth = provider.initialize({ options: deps }) as AuthImpl;\n\n  return auth;\n}\n\nexport function _initializeAuthInstance(\n  auth: AuthImpl,\n  deps?: Dependencies\n): void {\n  const persistence = deps?.persistence || [];\n  const hierarchy = (\n    Array.isArray(persistence) ? persistence : [persistence]\n  ).map<PersistenceInternal>(_getInstance);\n  if (deps?.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n\n  // This promise is intended to float; auth initialization happens in the\n  // background, meanwhile the auth object may be used by the app.\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  auth._initializeWithPersistence(hierarchy, deps?.popupRedirectResolver);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Auth } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _castAuth } from './auth_impl';\n\n/**\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\n * `true` to disable the warning banner attached to the DOM.\n *\n * @public\n */\nexport function connectAuthEmulator(\n  auth: Auth,\n  url: string,\n  options?: { disableWarnings: boolean }\n): void {\n  const authInternal = _castAuth(auth);\n  _assert(\n    authInternal._canInitEmulator,\n    authInternal,\n    AuthErrorCode.EMULATOR_CONFIG_FAILED\n  );\n\n  _assert(\n    /^https?:\\/\\//.test(url),\n    authInternal,\n    AuthErrorCode.INVALID_EMULATOR_SCHEME\n  );\n\n  const disableWarnings = !!options?.disableWarnings;\n\n  const protocol = extractProtocol(url);\n  const { host, port } = extractHostAndPort(url);\n  const portStr = port === null ? '' : `:${port}`;\n\n  // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n  authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host,\n    port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({ disableWarnings })\n  });\n\n  if (!disableWarnings) {\n    emitEmulatorWarning();\n  }\n}\n\nfunction extractProtocol(url: string): string {\n  const protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\n\nfunction extractHostAndPort(url: string): {\n  host: string;\n  port: number | null;\n} {\n  const protocol = extractProtocol(url);\n  const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n  if (!authority) {\n    return { host: '', port: null };\n  }\n  const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n  const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    const host = bracketedIPv6[1];\n    return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n  } else {\n    const [host, port] = hostAndPort.split(':');\n    return { host, port: parsePort(port) };\n  }\n}\n\nfunction parsePort(portStr: string): number | null {\n  if (!portStr) {\n    return null;\n  }\n  const port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\n\nfunction emitEmulatorWarning(): void {\n  function attachBanner(): void {\n    const el = document.createElement('p');\n    const sty = el.style;\n    el.innerText =\n      'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info(\n      'WARNING: You are using the Auth Emulator,' +\n        ' which is intended for local testing only.  Do not use with' +\n        ' production credentials.'\n    );\n  }\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { debugFail } from '../util/assert';\n\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class AuthCredential {\n  /** @internal */\n  protected constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    readonly providerId: string,\n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    readonly signInMethod: string\n  ) {}\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object {\n    return debugFail('not implemented');\n  }\n\n  /** @internal */\n  _getIdTokenResponse(_auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _linkToIdToken(\n    _auth: AuthInternal,\n    _idToken: string\n  ): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _getReauthenticationResolver(_auth: AuthInternal): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from './mfa';\nimport { SignUpRequest, SignUpResponse } from '../authentication/sign_up';\n\nexport interface ResetPasswordRequest {\n  oobCode: string;\n  newPassword?: string;\n  tenantId?: string;\n}\n\nexport interface ResetPasswordResponse {\n  email: string;\n  newEmail?: string;\n  requestType?: ActionCodeOperation;\n  mfaInfo?: MfaEnrollment;\n}\n\nexport async function resetPassword(\n  auth: Auth,\n  request: ResetPasswordRequest\n): Promise<ResetPasswordResponse> {\n  return _performApiRequest<ResetPasswordRequest, ResetPasswordResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.RESET_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface UpdateEmailPasswordRequest {\n  idToken: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n}\n\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {}\n\nexport async function updateEmailPassword(\n  auth: Auth,\n  request: UpdateEmailPasswordRequest\n): Promise<UpdateEmailPasswordResponse> {\n  return _performApiRequest<\n    UpdateEmailPasswordRequest,\n    UpdateEmailPasswordResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\n// Used for linking an email/password account to an existing idToken. Uses the same request/response\n// format as updateEmailPassword.\nexport async function linkEmailPassword(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performApiRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    request\n  );\n}\n\nexport interface ApplyActionCodeRequest {\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface ApplyActionCodeResponse {}\n\nexport async function applyActionCode(\n  auth: Auth,\n  request: ApplyActionCodeRequest\n): Promise<ApplyActionCodeResponse> {\n  return _performApiRequest<ApplyActionCodeRequest, ApplyActionCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _addTidIfNecessary,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\n\nexport interface SignInWithPasswordRequest {\n  returnSecureToken?: boolean;\n  email: string;\n  password: string;\n  tenantId?: string;\n  captchaResponse?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\n  email: string;\n  displayName: string;\n}\n\nexport async function signInWithPassword(\n  auth: Auth,\n  request: SignInWithPasswordRequest\n): Promise<SignInWithPasswordResponse> {\n  return _performSignInRequest<\n    SignInWithPasswordRequest,\n    SignInWithPasswordResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface GetOobCodeRequest {\n  email?: string; // Everything except VERIFY_AND_CHANGE_EMAIL\n  continueUrl?: string;\n  iOSBundleId?: string;\n  iosAppStoreId?: string;\n  androidPackageName?: string;\n  androidInstallApp?: boolean;\n  androidMinimumVersionCode?: string;\n  canHandleCodeInApp?: boolean;\n  dynamicLinkDomain?: string;\n  tenantId?: string;\n  targetProjectid?: string;\n}\n\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_EMAIL;\n  idToken: IdToken;\n}\n\nexport interface PasswordResetRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.PASSWORD_RESET;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface EmailSignInRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.EMAIL_SIGNIN;\n  email: string;\n  captchaResp?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n  idToken: IdToken;\n  newEmail: string;\n}\n\ninterface GetOobCodeResponse {\n  email: string;\n}\n\nexport interface VerifyEmailResponse extends GetOobCodeResponse {}\nexport interface PasswordResetResponse extends GetOobCodeResponse {}\nexport interface EmailSignInResponse extends GetOobCodeResponse {}\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {}\n\nasync function sendOobCode(\n  auth: Auth,\n  request: GetOobCodeRequest\n): Promise<GetOobCodeResponse> {\n  return _performApiRequest<GetOobCodeRequest, GetOobCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_OOB_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function sendEmailVerification(\n  auth: Auth,\n  request: VerifyEmailRequest\n): Promise<VerifyEmailResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  request: PasswordResetRequest\n): Promise<PasswordResetResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  request: EmailSignInRequest\n): Promise<EmailSignInResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function verifyAndChangeEmail(\n  auth: Auth,\n  request: VerifyAndChangeEmailRequest\n): Promise<VerifyAndChangeEmailResponse> {\n  return sendOobCode(auth, request);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performSignInRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithEmailLinkRequest {\n  email: string;\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithEmailLinkResponse extends IdTokenResponse {\n  email: string;\n  isNewUser: boolean;\n}\n\nexport async function signInWithEmailLink(\n  auth: Auth,\n  request: SignInWithEmailLinkRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithEmailLinkForLinkingRequest\n  extends SignInWithEmailLinkRequest {\n  idToken: string;\n}\n\nexport async function signInWithEmailLinkForLinking(\n  auth: Auth,\n  request: SignInWithEmailLinkForLinkingRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkForLinkingRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { linkEmailPassword } from '../../api/account_management/email_and_password';\nimport {\n  signInWithPassword,\n  SignInWithPasswordRequest\n} from '../../api/authentication/email_and_password';\nimport {\n  signInWithEmailLink,\n  signInWithEmailLinkForLinking\n} from '../../api/authentication/email_link';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { SignUpRequest } from '../../api/authentication/sign_up';\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId}.PASSWORD\n *\n * @remarks\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @public\n */\nexport class EmailAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    /** @internal */\n    readonly _email: string,\n    /** @internal */\n    readonly _password: string,\n    signInMethod: SignInMethod,\n    /** @internal */\n    readonly _tenantId: string | null = null\n  ) {\n    super(ProviderId.PASSWORD, signInMethod);\n  }\n\n  /** @internal */\n  static _fromEmailAndPassword(\n    email: string,\n    password: string\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      password,\n      SignInMethod.EMAIL_PASSWORD\n    );\n  }\n\n  /** @internal */\n  static _fromEmailAndCode(\n    email: string,\n    oobCode: string,\n    tenantId: string | null = null\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      oobCode,\n      SignInMethod.EMAIL_LINK,\n      tenantId\n    );\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    return {\n      email: this._email,\n      password: this._password,\n      signInMethod: this.signInMethod,\n      tenantId: this._tenantId\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n   *\n   * @param json - Either `object` or the stringified representation of the object. When string is\n   * provided, `JSON.parse` would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n   */\n  static fromJSON(json: object | string): EmailAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    if (obj?.email && obj?.password) {\n      if (obj.signInMethod === SignInMethod.EMAIL_PASSWORD) {\n        return this._fromEmailAndPassword(obj.email, obj.password);\n      } else if (obj.signInMethod === SignInMethod.EMAIL_LINK) {\n        return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  async _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignInWithPasswordRequest = {\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_IN_WITH_PASSWORD,\n          signInWithPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLink(auth, {\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  async _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        const request: SignUpRequest = {\n          idToken,\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password,\n          clientType: RecaptchaClientType.WEB\n        };\n        return handleRecaptchaFlow(\n          auth,\n          request,\n          RecaptchaActionName.SIGN_UP_PASSWORD,\n          linkEmailPassword\n        );\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLinkForLinking(auth, {\n          idToken,\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return this._getIdTokenResponse(auth);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithIdpRequest {\n  requestUri: string;\n  postBody?: string;\n  sessionId?: string;\n  tenantId?: string;\n  returnSecureToken: boolean;\n  returnIdpCredential?: boolean;\n  idToken?: IdToken;\n  autoCreate?: boolean;\n  pendingToken?: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithIdpResponse extends IdTokenResponse {\n  oauthAccessToken?: string;\n  oauthTokenSecret?: string;\n  nonce?: string;\n  oauthIdToken?: string;\n  pendingToken?: string;\n}\n\nexport async function signInWithIdp(\n  auth: Auth,\n  request: SignInWithIdpRequest\n): Promise<SignInWithIdpResponse> {\n  return _performSignInRequest<SignInWithIdpRequest, SignInWithIdpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_IDP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\nexport interface OAuthCredentialParams {\n  // OAuth 2 uses either id token or access token\n  idToken?: string | null;\n  accessToken?: string | null;\n\n  // These fields are used with OAuth 1\n  oauthToken?: string;\n  secret?: string;\n  oauthTokenSecret?: string;\n\n  // Nonce is only set if pendingToken is not present\n  nonce?: string;\n  pendingToken?: string;\n\n  // Utilities\n  providerId: string;\n  signInMethod: string;\n}\n\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class OAuthCredential extends AuthCredential {\n  /**\n   * The OAuth ID token associated with the credential if it belongs to an OIDC provider,\n   * such as `google.com`.\n   * @readonly\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token associated with the credential if it belongs to an\n   * {@link OAuthProvider}, such as `facebook.com`, `twitter.com`, etc.\n   * @readonly\n   */\n  accessToken?: string;\n  /**\n   * The OAuth access token secret associated with the credential if it belongs to an OAuth 1.0\n   * provider, such as `twitter.com`.\n   * @readonly\n   */\n  secret?: string;\n\n  private nonce?: string;\n  private pendingToken: string | null = null;\n\n  /** @internal */\n  static _fromParams(params: OAuthCredentialParams): OAuthCredential {\n    const cred = new OAuthCredential(params.providerId, params.signInMethod);\n\n    if (params.idToken || params.accessToken) {\n      // OAuth 2 and either ID token or access token.\n      if (params.idToken) {\n        cred.idToken = params.idToken;\n      }\n\n      if (params.accessToken) {\n        cred.accessToken = params.accessToken;\n      }\n\n      // Add nonce if available and no pendingToken is present.\n      if (params.nonce && !params.pendingToken) {\n        cred.nonce = params.nonce;\n      }\n\n      if (params.pendingToken) {\n        cred.pendingToken = params.pendingToken;\n      }\n    } else if (params.oauthToken && params.oauthTokenSecret) {\n      // OAuth 1 and OAuth token with token secret\n      cred.accessToken = params.oauthToken;\n      cred.secret = params.oauthTokenSecret;\n    } else {\n      _fail(AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    return cred;\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      idToken: this.idToken,\n      accessToken: this.accessToken,\n      secret: this.secret,\n      nonce: this.nonce,\n      pendingToken: this.pendingToken,\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): OAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, ...rest }: OAuthCredentialParams = obj;\n    if (!providerId || !signInMethod) {\n      return null;\n    }\n\n    const cred = new OAuthCredential(providerId, signInMethod);\n    cred.idToken = rest.idToken || undefined;\n    cred.accessToken = rest.accessToken || undefined;\n    cred.secret = rest.secret;\n    cred.nonce = rest.nonce;\n    cred.pendingToken = rest.pendingToken || null;\n    return cred;\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true\n    };\n\n    if (this.pendingToken) {\n      request.pendingToken = this.pendingToken;\n    } else {\n      const postBody: Record<string, string> = {};\n      if (this.idToken) {\n        postBody['id_token'] = this.idToken;\n      }\n      if (this.accessToken) {\n        postBody['access_token'] = this.accessToken;\n      }\n      if (this.secret) {\n        postBody['oauth_token_secret'] = this.secret;\n      }\n\n      postBody['providerId'] = this.providerId;\n      if (this.nonce && !this.pendingToken) {\n        postBody['nonce'] = this.nonce;\n      }\n\n      request.postBody = querystring(postBody);\n    }\n\n    return request;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _makeTaggedError,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { AuthErrorCode } from '../../core/errors';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { ServerError, ServerErrorMap } from '../errors';\nimport { Auth } from '../../model/public_types';\n\nexport interface SendPhoneVerificationCodeRequest {\n  phoneNumber: string;\n  recaptchaToken: string;\n  tenantId?: string;\n}\n\nexport interface SendPhoneVerificationCodeResponse {\n  sessionInfo: string;\n}\n\nexport async function sendPhoneVerificationCode(\n  auth: Auth,\n  request: SendPhoneVerificationCodeRequest\n): Promise<SendPhoneVerificationCodeResponse> {\n  return _performApiRequest<\n    SendPhoneVerificationCodeRequest,\n    SendPhoneVerificationCodeResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_VERIFICATION_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberRequest {\n  temporaryProof?: string;\n  phoneNumber?: string;\n  sessionInfo?: string;\n  code?: string;\n  tenantId?: string;\n}\n\nexport interface LinkWithPhoneNumberRequest\n  extends SignInWithPhoneNumberRequest {\n  idToken: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\n  temporaryProof?: string;\n  phoneNumber?: string;\n}\n\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  return _performSignInRequest<\n    SignInWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function linkWithPhoneNumber(\n  auth: Auth,\n  request: LinkWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const response = await _performSignInRequest<\n    LinkWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n  if (response.temporaryProof) {\n    throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, response);\n  }\n  return response;\n}\n\ninterface VerifyPhoneNumberForExistingRequest\n  extends SignInWithPhoneNumberRequest {\n  operation: 'REAUTH';\n}\n\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_: Partial<\n  ServerErrorMap<ServerError>\n> = {\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.USER_DELETED\n};\n\nexport async function verifyPhoneNumberForExisting(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const apiRequest: VerifyPhoneNumberForExistingRequest = {\n    ...request,\n    operation: 'REAUTH'\n  };\n  return _performSignInRequest<\n    VerifyPhoneNumberForExistingRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, apiRequest),\n    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport {\n  linkWithPhoneNumber,\n  signInWithPhoneNumber,\n  SignInWithPhoneNumberRequest,\n  verifyPhoneNumberForExisting\n} from '../../api/authentication/sms';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nexport interface PhoneAuthCredentialParameters {\n  verificationId?: string;\n  verificationCode?: string;\n  phoneNumber?: string;\n  temporaryProof?: string;\n}\n\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nexport class PhoneAuthCredential extends AuthCredential {\n  private constructor(private readonly params: PhoneAuthCredentialParameters) {\n    super(ProviderId.PHONE, SignInMethod.PHONE);\n  }\n\n  /** @internal */\n  static _fromVerification(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ verificationId, verificationCode });\n  }\n\n  /** @internal */\n  static _fromTokenResponse(\n    phoneNumber: string,\n    temporaryProof: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithPhoneNumber(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return linkWithPhoneNumber(auth, {\n      idToken,\n      ...this._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _makeVerificationRequest(): SignInWithPhoneNumberRequest {\n    const { temporaryProof, phoneNumber, verificationId, verificationCode } =\n      this.params;\n    if (temporaryProof && phoneNumber) {\n      return { temporaryProof, phoneNumber };\n    }\n\n    return {\n      sessionInfo: verificationId,\n      code: verificationCode\n    };\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    const obj: Record<string, string> = {\n      providerId: this.providerId\n    };\n    if (this.params.phoneNumber) {\n      obj.phoneNumber = this.params.phoneNumber;\n    }\n    if (this.params.temporaryProof) {\n      obj.temporaryProof = this.params.temporaryProof;\n    }\n    if (this.params.verificationCode) {\n      obj.verificationCode = this.params.verificationCode;\n    }\n    if (this.params.verificationId) {\n      obj.verificationId = this.params.verificationId;\n    }\n\n    return obj;\n  }\n\n  /** Generates a phone credential based on a plain object or a JSON string. */\n  static fromJSON(json: object | string): PhoneAuthCredential | null {\n    if (typeof json === 'string') {\n      json = JSON.parse(json);\n    }\n\n    const { verificationId, verificationCode, phoneNumber, temporaryProof } =\n      json as { [key: string]: string };\n    if (\n      !verificationCode &&\n      !verificationId &&\n      !phoneNumber &&\n      !temporaryProof\n    ) {\n      return null;\n    }\n\n    return new PhoneAuthCredential({\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractQuerystring, querystringDecode } from '@firebase/util';\nimport { ActionCodeOperation } from '../model/public_types';\nimport { AuthErrorCode } from './errors';\nimport { _assert } from './util/assert';\n\n/**\n * Enums for fields in URL query string.\n *\n * @enum {string}\n */\nconst enum QueryField {\n  API_KEY = 'apiKey',\n  CODE = 'oobCode',\n  CONTINUE_URL = 'continueUrl',\n  LANGUAGE_CODE = 'languageCode',\n  MODE = 'mode',\n  TENANT_ID = 'tenantId'\n}\n\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode: string | null): ActionCodeOperation | null {\n  switch (mode) {\n    case 'recoverEmail':\n      return ActionCodeOperation.RECOVER_EMAIL;\n    case 'resetPassword':\n      return ActionCodeOperation.PASSWORD_RESET;\n    case 'signIn':\n      return ActionCodeOperation.EMAIL_SIGNIN;\n    case 'verifyEmail':\n      return ActionCodeOperation.VERIFY_EMAIL;\n    case 'verifyAndChangeEmail':\n      return ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n    case 'revertSecondFactorAddition':\n      return ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION;\n    default:\n      return null;\n  }\n}\n\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url: string): string {\n  const link = querystringDecode(extractQuerystring(url))['link'];\n\n  // Double link case (automatic redirect).\n  const doubleDeepLink = link\n    ? querystringDecode(extractQuerystring(link))['deep_link_id']\n    : null;\n  // iOS custom scheme links.\n  const iOSDeepLink = querystringDecode(extractQuerystring(url))[\n    'deep_link_id'\n  ];\n  const iOSDoubleDeepLink = iOSDeepLink\n    ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n    : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nexport class ActionCodeURL {\n  /**\n   * The API key of the email action link.\n   */\n  readonly apiKey: string;\n  /**\n   * The action code of the email action link.\n   */\n  readonly code: string;\n  /**\n   * The continue URL of the email action link. Null if not provided.\n   */\n  readonly continueUrl: string | null;\n  /**\n   * The language code of the email action link. Null if not provided.\n   */\n  readonly languageCode: string | null;\n  /**\n   * The action performed by the email action link. It returns from one of the types from\n   * {@link ActionCodeInfo}\n   */\n  readonly operation: string;\n  /**\n   * The tenant ID of the email action link. Null if the email action is from the parent project.\n   */\n  readonly tenantId: string | null;\n\n  /**\n   * @param actionLink - The link from which to extract the URL.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @internal\n   */\n  constructor(actionLink: string) {\n    const searchParams = querystringDecode(extractQuerystring(actionLink));\n    const apiKey = searchParams[QueryField.API_KEY] ?? null;\n    const code = searchParams[QueryField.CODE] ?? null;\n    const operation = parseMode(searchParams[QueryField.MODE] ?? null);\n    // Validate API key, code and mode.\n    _assert(apiKey && code && operation, AuthErrorCode.ARGUMENT_ERROR);\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = searchParams[QueryField.CONTINUE_URL] ?? null;\n    this.languageCode = searchParams[QueryField.LANGUAGE_CODE] ?? null;\n    this.tenantId = searchParams[QueryField.TENANT_ID] ?? null;\n  }\n\n  /**\n   * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n   * otherwise returns null.\n   *\n   * @param link  - The email action link string.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @public\n   */\n  static parseLink(link: string): ActionCodeURL | null {\n    const actionLink = parseDeepLink(link);\n    try {\n      return new ActionCodeURL(actionLink);\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nexport function parseActionCodeURL(link: string): ActionCodeURL | null {\n  return ActionCodeURL.parseLink(link);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\nimport { AuthProvider } from '../../model/public_types';\n\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthCredential } from '../credentials/email';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nexport class EmailAuthProvider implements AuthProvider {\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  static readonly PROVIDER_ID: 'password' = ProviderId.PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\n   */\n  static readonly EMAIL_PASSWORD_SIGN_IN_METHOD: 'password' =\n    SignInMethod.EMAIL_PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_LINK.\n   */\n  static readonly EMAIL_LINK_SIGN_IN_METHOD: 'emailLink' =\n    SignInMethod.EMAIL_LINK;\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  readonly providerId = EmailAuthProvider.PROVIDER_ID;\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and password.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credential(email, password);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n   * ```\n   *\n   * @param email - Email address.\n   * @param password - User account password.\n   * @returns The auth provider credential.\n   */\n  static credential(email: string, password: string): EmailAuthCredential {\n    return EmailAuthCredential._fromEmailAndPassword(email, password);\n  }\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n   * email link operation.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * await sendSignInLinkToEmail(auth, email);\n   * // Obtain emailLink from user.\n   * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n   * ```\n   *\n   * @param auth - The {@link Auth} instance used to verify the link.\n   * @param email - Email address.\n   * @param emailLink - Sign-in email link.\n   * @returns - The auth provider credential.\n   */\n  static credentialWithLink(\n    email: string,\n    emailLink: string\n  ): EmailAuthCredential {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    _assert(actionCodeUrl, AuthErrorCode.ARGUMENT_ERROR);\n\n    return EmailAuthCredential._fromEmailAndCode(\n      email,\n      actionCodeUrl.code,\n      actionCodeUrl.tenantId\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\n\n/**\n * Map of OAuth Custom Parameters.\n *\n * @public\n */\nexport type CustomParameters = Record<string, string>;\n\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nexport abstract class FederatedAuthProvider implements AuthProvider {\n  /** @internal */\n  defaultLanguageCode: string | null = null;\n  /** @internal */\n  private customParameters: CustomParameters = {};\n\n  /**\n   * Constructor for generic OAuth providers.\n   *\n   * @param providerId - Provider for which credentials should be generated.\n   */\n  constructor(readonly providerId: string) {}\n\n  /**\n   * Set the language gode.\n   *\n   * @param languageCode - language code\n   */\n  setDefaultLanguage(languageCode: string | null): void {\n    this.defaultLanguageCode = languageCode;\n  }\n\n  /**\n   * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n   * operations.\n   *\n   * @remarks\n   * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n   * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n   *\n   * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n   */\n  setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider {\n    this.customParameters = customOAuthParameters;\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of {@link CustomParameters}.\n   */\n  getCustomParameters(): CustomParameters {\n    return this.customParameters;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, UserCredential } from '../../model/public_types';\n\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\nimport { OAuthCredential, OAuthCredentialParams } from '../credentials/oauth';\nimport { UserCredentialInternal } from '../../model/user';\nimport { FirebaseError } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { SignInWithIdpResponse } from '../../../internal';\nimport { FederatedAuthProvider } from './federated';\n\n/**\n * Defines the options for initializing an {@link OAuthCredential}.\n *\n * @remarks\n * For ID tokens with nonce claim, the raw nonce has to also be provided.\n *\n * @public\n */\nexport interface OAuthCredentialOptions {\n  /**\n   * The OAuth ID token used to initialize the {@link OAuthCredential}.\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token used to initialize the {@link OAuthCredential}.\n   */\n  accessToken?: string;\n  /**\n   * The raw nonce associated with the ID token.\n   *\n   * @remarks\n   * It is required when an ID token with a nonce field is provided. The SHA-256 hash of the\n   * raw nonce must match the nonce field in the ID token.\n   */\n  rawNonce?: string;\n}\n\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nexport abstract class BaseOAuthProvider\n  extends FederatedAuthProvider\n  implements AuthProvider\n{\n  /** @internal */\n  private scopes: string[] = [];\n\n  /**\n   * Add an OAuth scope to the credential.\n   *\n   * @param scope - Provider OAuth scope to add.\n   */\n  addScope(scope: string): AuthProvider {\n    // If not already added, add scope to list.\n    if (!this.scopes.includes(scope)) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of OAuth scopes.\n   */\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n}\n\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class OAuthProvider extends BaseOAuthProvider {\n  /**\n   * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: object | string): OAuthCredential {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    _assert(\n      'providerId' in obj && 'signInMethod' in obj,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return OAuthCredential._fromParams(obj);\n  }\n\n  /**\n   * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n   *\n   * @remarks\n   * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n   * the raw nonce must match the nonce field in the ID token.\n   *\n   * @example\n   * ```javascript\n   * // `googleUser` from the onsuccess Google Sign In callback.\n   * // Initialize a generate OAuth provider with a `google.com` providerId.\n   * const provider = new OAuthProvider('google.com');\n   * const credential = provider.credential({\n   *   idToken: googleUser.getAuthResponse().id_token,\n   * });\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param params - Either the options object containing the ID token, access token and raw nonce\n   * or the ID token string.\n   */\n  credential(params: OAuthCredentialOptions): OAuthCredential {\n    return this._credential({ ...params, nonce: params.rawNonce });\n  }\n\n  /** An internal credential method that accepts more permissive options */\n  private _credential(\n    params: Omit<OAuthCredentialParams, 'signInMethod' | 'providerId'>\n  ): OAuthCredential {\n    _assert(params.idToken || params.accessToken, AuthErrorCode.ARGUMENT_ERROR);\n    // For OAuthCredential, sign in method is same as providerId.\n    return OAuthCredential._fromParams({\n      ...params,\n      providerId: this.providerId,\n      signInMethod: this.providerId\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static oauthCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken,\n      oauthTokenSecret,\n      pendingToken,\n      nonce,\n      providerId\n    } = tokenResponse as SignInWithIdpResponse;\n    if (\n      !oauthAccessToken &&\n      !oauthTokenSecret &&\n      !oauthIdToken &&\n      !pendingToken\n    ) {\n      return null;\n    }\n\n    if (!providerId) {\n      return null;\n    }\n\n    try {\n      return new OAuthProvider(providerId)._credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        nonce,\n        pendingToken\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = FacebookAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class FacebookAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.FACEBOOK. */\n  static readonly FACEBOOK_SIGN_IN_METHOD: 'facebook.com' =\n    SignInMethod.FACEBOOK;\n  /** Always set to {@link ProviderId}.FACEBOOK. */\n  static readonly PROVIDER_ID: 'facebook.com' = ProviderId.FACEBOOK;\n\n  constructor() {\n    super(ProviderId.FACEBOOK);\n  }\n\n  /**\n   * Creates a credential for Facebook.\n   *\n   * @example\n   * ```javascript\n   * // `event` from the Facebook auth.authResponseChange callback.\n   * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param accessToken - Facebook access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: FacebookAuthProvider.PROVIDER_ID,\n      signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = GoogleAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class GoogleAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GOOGLE. */\n  static readonly GOOGLE_SIGN_IN_METHOD: 'google.com' = SignInMethod.GOOGLE;\n  /** Always set to {@link ProviderId}.GOOGLE. */\n  static readonly PROVIDER_ID: 'google.com' = ProviderId.GOOGLE;\n\n  constructor() {\n    super(ProviderId.GOOGLE);\n    this.addScope('profile');\n  }\n\n  /**\n   * Creates a credential for Google. At least one of ID token and access token is required.\n   *\n   * @example\n   * ```javascript\n   * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n   * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param idToken - Google ID token.\n   * @param accessToken - Google access token.\n   */\n  static credential(\n    idToken?: string | null,\n    accessToken?: string | null\n  ): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GoogleAuthProvider.PROVIDER_ID,\n      signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n      idToken,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { oauthIdToken, oauthAccessToken } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthIdToken && !oauthAccessToken) {\n      // This could be an oauth 1 credential or a phone credential\n      return null;\n    }\n\n    try {\n      return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Github Access Token.\n *   const credential = GithubAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Github Access Token.\n * const credential = GithubAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class GithubAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GITHUB. */\n  static readonly GITHUB_SIGN_IN_METHOD: 'github.com' = SignInMethod.GITHUB;\n  /** Always set to {@link ProviderId}.GITHUB. */\n  static readonly PROVIDER_ID: 'github.com' = ProviderId.GITHUB;\n\n  constructor() {\n    super(ProviderId.GITHUB);\n  }\n\n  /**\n   * Creates a credential for Github.\n   *\n   * @param accessToken - Github access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GithubAuthProvider.PROVIDER_ID,\n      signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents the SAML credentials returned by an {@link SAMLAuthProvider}.\n *\n * @public\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\n/**\n * @public\n */\nexport class SAMLAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    providerId: string,\n    private readonly pendingToken: string\n  ) {\n    super(providerId, providerId);\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      signInMethod: this.signInMethod,\n      providerId: this.providerId,\n      pendingToken: this.pendingToken\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): SAMLAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, pendingToken }: Record<string, string> =\n      obj;\n    if (\n      !providerId ||\n      !signInMethod ||\n      !pendingToken ||\n      providerId !== signInMethod\n    ) {\n      return null;\n    }\n\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  /**\n   * Helper static method to avoid exposing the constructor to end users.\n   *\n   * @internal\n   */\n  static _create(providerId: string, pendingToken: string): SAMLAuthCredential {\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    return {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true,\n      pendingToken: this.pendingToken\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Twitter LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = TwitterAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nexport class TwitterAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.TWITTER. */\n  static readonly TWITTER_SIGN_IN_METHOD: 'twitter.com' = SignInMethod.TWITTER;\n  /** Always set to {@link ProviderId}.TWITTER. */\n  static readonly PROVIDER_ID: 'twitter.com' = ProviderId.TWITTER;\n\n  constructor() {\n    super(ProviderId.TWITTER);\n  }\n\n  /**\n   * Creates a credential for Twitter.\n   *\n   * @param token - Twitter access token.\n   * @param secret - Twitter secret.\n   */\n  static credential(token: string, secret: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: TwitterAuthProvider.PROVIDER_ID,\n      signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n      oauthToken: token,\n      oauthTokenSecret: secret\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { oauthAccessToken, oauthTokenSecret } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthAccessToken || !oauthTokenSecret) {\n      return null;\n    }\n\n    try {\n      return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  RecaptchaClientType,\n  RecaptchaVersion,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignUpRequest {\n  idToken?: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n  tenantId?: string;\n  captchaResponse?: string;\n  clientType?: RecaptchaClientType;\n  recaptchaVersion?: RecaptchaVersion;\n}\n\nexport interface SignUpResponse extends IdTokenResponse {\n  displayName?: string;\n  email?: string;\n}\n\nexport async function signUp(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performSignInRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { UserImpl } from './user_impl';\nimport { AuthInternal } from '../../model/auth';\nimport { OperationType, ProviderId } from '../../model/enums';\n\ninterface UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse?: PhoneOrOauthTokenResponse;\n  readonly operationType: OperationType;\n}\n\nexport class UserCredentialImpl\n  implements UserCredentialInternal, UserCredentialParams\n{\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\n  readonly operationType: OperationType;\n\n  constructor(params: UserCredentialParams) {\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    operationType: OperationType,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserCredentialInternal> {\n    const user = await UserImpl._fromIdTokenResponse(\n      auth,\n      idTokenResponse,\n      isAnonymous\n    );\n    const providerId = providerIdForResponse(idTokenResponse);\n    const userCred = new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: idTokenResponse,\n      operationType\n    });\n    return userCred;\n  }\n\n  static async _forOperation(\n    user: UserInternal,\n    operationType: OperationType,\n    response: PhoneOrOauthTokenResponse\n  ): Promise<UserCredentialImpl> {\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n    const providerId = providerIdForResponse(response);\n    return new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: response,\n      operationType\n    });\n  }\n}\n\nfunction providerIdForResponse(\n  response: IdTokenResponse\n): ProviderId | string | null {\n  if (response.providerId) {\n    return response.providerId;\n  }\n\n  if ('phoneNumber' in response) {\n    return ProviderId.PHONE;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { UserInternal } from '../../model/user';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\n/**\n * Asynchronously signs in as an anonymous user.\n *\n * @remarks\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\n * new anonymous user identity will be created and returned.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport async function signInAnonymously(auth: Auth): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  await authInternal._initializationPromise;\n  if (authInternal.currentUser?.isAnonymous) {\n    // If an anonymous user is already signed in, no need to sign them in again.\n    return new UserCredentialImpl({\n      user: authInternal.currentUser as UserInternal,\n      providerId: null,\n      operationType: OperationType.SIGN_IN\n    });\n  }\n  const response = await signUp(authInternal, {\n    returnSecureToken: true\n  });\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response,\n    true\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n  return userCredential;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MultiFactorError as MultiFactorErrorPublic } from '../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../model/auth';\nimport { IdTokenResponse } from '../model/id_token';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserInternal } from '../model/user';\nimport { AuthCredential } from '../core/credentials';\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { OperationType } from '../model/enums';\n\nexport type MultiFactorErrorData = MultiFactorErrorPublic['customData'] & {\n  _serverResponse: IdTokenMfaResponse;\n};\n\nexport class MultiFactorError\n  extends FirebaseError\n  implements MultiFactorErrorPublic\n{\n  readonly customData: MultiFactorErrorData;\n\n  private constructor(\n    auth: AuthInternal,\n    error: FirebaseError,\n    readonly operationType: OperationType,\n    readonly user?: UserInternal\n  ) {\n    super(error.code, error.message);\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, MultiFactorError.prototype);\n    this.customData = {\n      appName: auth.name,\n      tenantId: auth.tenantId ?? undefined,\n      _serverResponse: error.customData!._serverResponse as IdTokenMfaResponse,\n      operationType\n    };\n  }\n\n  static _fromErrorAndOperation(\n    auth: AuthInternal,\n    error: FirebaseError,\n    operationType: OperationType,\n    user?: UserInternal\n  ): MultiFactorError {\n    return new MultiFactorError(auth, error, operationType, user);\n  }\n}\n\nexport function _processCredentialSavingMfaContextIfNecessary(\n  auth: AuthInternal,\n  operationType: OperationType,\n  credential: AuthCredential,\n  user?: UserInternal\n): Promise<IdTokenResponse> {\n  const idTokenProvider =\n    operationType === OperationType.REAUTHENTICATE\n      ? credential._getReauthenticationResolver(auth)\n      : credential._getIdTokenResponse(auth);\n\n  return idTokenProvider.catch(error => {\n    if (error.code === `auth/${AuthErrorCode.MFA_REQUIRED}`) {\n      throw MultiFactorError._fromErrorAndOperation(\n        auth,\n        error,\n        operationType,\n        user\n      );\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { providerDataAsNames } from '../util/providers';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { _reloadWithoutSaving } from './reload';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType, ProviderId } from '../../model/enums';\n\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nexport async function unlink(user: User, providerId: string): Promise<User> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(true, userInternal, providerId);\n  const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n    idToken: await userInternal.getIdToken(),\n    deleteProvider: [providerId]\n  });\n\n  const providersLeft = providerDataAsNames(providerUserInfo || []);\n\n  userInternal.providerData = userInternal.providerData.filter(pd =>\n    providersLeft.has(pd.providerId)\n  );\n  if (!providersLeft.has(ProviderId.PHONE)) {\n    userInternal.phoneNumber = null;\n  }\n\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  return userInternal;\n}\n\nexport async function _link(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialInternal> {\n  const response = await _logoutIfInvalidated(\n    user,\n    credential._linkToIdToken(user.auth, await user.getIdToken()),\n    bypassAuthState\n  );\n  return UserCredentialImpl._forOperation(user, OperationType.LINK, response);\n}\n\nexport async function _assertLinkedStatus(\n  expected: boolean,\n  user: UserInternal,\n  provider: string\n): Promise<void> {\n  await _reloadWithoutSaving(user);\n  const providerIds = providerDataAsNames(user.providerData);\n\n  const code =\n    expected === false\n      ? AuthErrorCode.PROVIDER_ALREADY_LINKED\n      : AuthErrorCode.NO_SUCH_PROVIDER;\n  _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { OperationType } from '../../model/enums';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert, _fail } from '../util/assert';\nimport { _parseToken } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\nexport async function _reauthenticate(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialImpl> {\n  const { auth } = user;\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const operationType = OperationType.REAUTHENTICATE;\n\n  try {\n    const response = await _logoutIfInvalidated(\n      user,\n      _processCredentialSavingMfaContextIfNecessary(\n        auth,\n        operationType,\n        credential,\n        user\n      ),\n      bypassAuthState\n    );\n    _assert(response.idToken, auth, AuthErrorCode.INTERNAL_ERROR);\n    const parsed = _parseToken(response.idToken);\n    _assert(parsed, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const { sub: localId } = parsed;\n    _assert(user.uid === localId, auth, AuthErrorCode.USER_MISMATCH);\n\n    return UserCredentialImpl._forOperation(user, operationType, response);\n  } catch (e) {\n    // Convert user deleted error into user mismatch\n    if ((e as FirebaseError)?.code === `auth/${AuthErrorCode.USER_DELETED}`) {\n      _fail(auth, AuthErrorCode.USER_MISMATCH);\n    }\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential, Auth, User } from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\nimport { _serverAppCurrentUserOperationNotSupportedError } from '../../core/util/assert';\n\nexport async function _signInWithCredential(\n  auth: AuthInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const operationType = OperationType.SIGN_IN;\n  const response = await _processCredentialSavingMfaContextIfNecessary(\n    auth,\n    operationType,\n    credential\n  );\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    auth,\n    operationType,\n    response\n  );\n\n  if (!bypassAuthState) {\n    await auth._updateCurrentUser(userCredential.user);\n  }\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function signInWithCredential(\n  auth: Auth,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _signInWithCredential(_castAuth(auth), credential);\n}\n\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function linkWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n\n  await _assertLinkedStatus(false, userInternal, credential.providerId);\n\n  return _link(userInternal, credential);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error\n * or a `TOKEN_EXPIRED` error.\n *\n * This method is not supported on any {@link User} signed in by {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function reauthenticateWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _reauthenticate(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeInfo,\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as account from '../../api/account_management/email_and_password';\nimport * as authentication from '../../api/authentication/email_and_password';\nimport { signUp, SignUpRequest } from '../../api/authentication/sign_up';\nimport { MultiFactorInfoImpl } from '../../mfa/mfa_info';\nimport { EmailAuthProvider } from '../providers/email';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../util/assert';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { _castAuth } from '../auth/auth_impl';\nimport { AuthErrorCode } from '../errors';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\nimport { handleRecaptchaFlow } from '../../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { RecaptchaActionName, RecaptchaClientType } from '../../api';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/**\n * Updates the password policy cached in the {@link Auth} instance if a policy is already\n * cached for the project or tenant.\n *\n * @remarks\n * We only fetch the password policy if the password did not meet policy requirements and\n * there is an existing policy cached. A developer must call validatePassword at least\n * once for the cache to be automatically updated.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @private\n */\nasync function recachePasswordPolicy(auth: Auth): Promise<void> {\n  const authInternal = _castAuth(auth);\n  if (authInternal._getPasswordPolicyInternal()) {\n    await authInternal._updatePasswordPolicy();\n  }\n}\n\n/**\n * Sends a password reset email to the given email address. This method does not throw an error when\n * there's no user account with the given email address and\n * [Email Enumeration Protection](https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection) is enabled.\n *\n * @remarks\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\n * the email sent to the user, along with the new password specified by the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain code from user.\n * await confirmPasswordReset('user@example.com', code);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings?: ActionCodeSettings\n): Promise<void> {\n  const authInternal = _castAuth(auth);\n  const request: authentication.PasswordResetRequest = {\n    requestType: ActionCodeOperation.PASSWORD_RESET,\n    email,\n    clientType: RecaptchaClientType.WEB\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authInternal, request, actionCodeSettings);\n  }\n  await handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.GET_OOB_CODE,\n    authentication.sendPasswordResetEmail\n  );\n}\n\n/**\n * Completes the password reset process, given a confirmation code and new password.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A confirmation code sent to the user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport async function confirmPasswordReset(\n  auth: Auth,\n  oobCode: string,\n  newPassword: string\n): Promise<void> {\n  await account\n    .resetPassword(getModularInstance(auth), {\n      oobCode,\n      newPassword\n    })\n    .catch(async error => {\n      if (\n        error.code ===\n        `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n      ) {\n        void recachePasswordPolicy(auth);\n      }\n\n      throw error;\n    });\n  // Do not return the email.\n}\n\n/**\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function applyActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<void> {\n  await account.applyActionCode(getModularInstance(auth), { oobCode });\n}\n\n/**\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @returns metadata about the code.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function checkActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<ActionCodeInfo> {\n  const authModular = getModularInstance(auth);\n  const response = await account.resetPassword(authModular, { oobCode });\n\n  // Email could be empty only if the request type is EMAIL_SIGNIN or\n  // VERIFY_AND_CHANGE_EMAIL.\n  // New email should not be empty if the request type is\n  // VERIFY_AND_CHANGE_EMAIL.\n  // Multi-factor info could not be empty if the request type is\n  // REVERT_SECOND_FACTOR_ADDITION.\n  const operation = response.requestType;\n  _assert(operation, authModular, AuthErrorCode.INTERNAL_ERROR);\n  switch (operation) {\n    case ActionCodeOperation.EMAIL_SIGNIN:\n      break;\n    case ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL:\n      _assert(response.newEmail, authModular, AuthErrorCode.INTERNAL_ERROR);\n      break;\n    case ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION:\n      _assert(response.mfaInfo, authModular, AuthErrorCode.INTERNAL_ERROR);\n    // fall through\n    default:\n      _assert(response.email, authModular, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  // The multi-factor info for revert second factor addition\n  let multiFactorInfo: MultiFactorInfoImpl | null = null;\n  if (response.mfaInfo) {\n    multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(\n      _castAuth(authModular),\n      response.mfaInfo\n    );\n  }\n\n  return {\n    data: {\n      email:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.newEmail\n          : response.email) || null,\n      previousEmail:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.email\n          : response.newEmail) || null,\n      multiFactorInfo\n    },\n    operation\n  };\n}\n\n/**\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\n *\n * @returns the user's email address if valid.\n *\n * @param auth - The {@link Auth} instance.\n * @param code - A verification code sent to the user.\n *\n * @public\n */\nexport async function verifyPasswordResetCode(\n  auth: Auth,\n  code: string\n): Promise<string> {\n  const { data } = await checkActionCode(getModularInstance(auth), code);\n  // Email should always be present since a code was sent to it\n  return data.email!;\n}\n\n/**\n * Creates a new user account associated with the specified email address and password.\n *\n * @remarks\n * On successful creation of the user account, this user will also be signed in to your application.\n *\n * User account creation can fail if the account already exists or the password is invalid.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The email address acts as a unique identifier for the user and enables an email-based\n * password reset. This function will create a new user account and set the initial user password.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param password - The user's chosen password.\n *\n * @public\n */\nexport async function createUserWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const request: SignUpRequest = {\n    returnSecureToken: true,\n    email,\n    password,\n    clientType: RecaptchaClientType.WEB\n  };\n  const signUpResponse: Promise<IdTokenResponse> = handleRecaptchaFlow(\n    authInternal,\n    request,\n    RecaptchaActionName.SIGN_UP_PASSWORD,\n    signUp\n  );\n  const response = await signUpResponse.catch(error => {\n    if (\n      error.code === `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n    ) {\n      void recachePasswordPolicy(auth);\n    }\n\n    throw error;\n  });\n\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in using an email and password.\n *\n * @remarks\n * Fails with an error if the email address and password do not match.\n * When [Email Enumeration Protection](https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection) is enabled,\n * this method fails with \"auth/invalid-credential\" in case of an invalid email/password.\n *\n * This method is not supported on {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * Note: The user's password is NOT the password used to access the user's email account. The\n * email address serves as a unique identifier for the user, and the password is used to access\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\n *\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The users email address.\n * @param password - The users password.\n *\n * @public\n */\nexport function signInWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  return signInWithCredential(\n    getModularInstance(auth),\n    EmailAuthProvider.credential(email, password)\n  ).catch(async error => {\n    if (\n      error.code === `auth/${AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS}`\n    ) {\n      void recachePasswordPolicy(auth);\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\nimport {\n  Auth,\n  NextOrObserver,\n  Persistence,\n  User,\n  CompleteFn,\n  ErrorFn,\n  Unsubscribe,\n  PasswordValidationStatus\n} from '../model/public_types';\nimport { _initializeRecaptchaConfig } from '../platform_browser/recaptcha/recaptcha_enterprise_verifier';\nimport { _castAuth } from '../core/auth/auth_impl';\n\nexport {\n  debugErrorMap,\n  prodErrorMap,\n  AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as AuthErrorCodes\n} from './errors';\n\n// Non-optional auth methods.\n/**\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\n * `Auth` session and applies this type of persistence for future sign-in requests, including\n * sign-in with redirect requests.\n *\n * @remarks\n * This makes it easy for a user signing in to specify whether their session should be\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\n * that are shared by other users or have sensitive data.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * setPersistence(auth, browserSessionPersistence);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param persistence - The {@link Persistence} to use.\n * @returns A `Promise` that resolves once the persistence change has completed\n *\n * @public\n */\nexport function setPersistence(\n  auth: Auth,\n  persistence: Persistence\n): Promise<void> {\n  return getModularInstance(auth).setPersistence(persistence);\n}\n\n/**\n * Loads the reCAPTCHA configuration into the `Auth` instance.\n *\n * @remarks\n * This will load the reCAPTCHA config, which indicates whether the reCAPTCHA\n * verification flow should be triggered for each auth provider, into the\n * current Auth session.\n *\n * If initializeRecaptchaConfig() is not invoked, the auth flow will always start\n * without reCAPTCHA verification. If the provider is configured to require reCAPTCHA\n * verification, the SDK will transparently load the reCAPTCHA config and restart the\n * auth flows.\n *\n * Thus, by calling this optional method, you will reduce the latency of future auth flows.\n * Loading the reCAPTCHA config early will also enhance the signal collected by reCAPTCHA.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * initializeRecaptchaConfig(auth);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function initializeRecaptchaConfig(auth: Auth): Promise<void> {\n  return _initializeRecaptchaConfig(auth);\n}\n\n/**\n * Validates the password against the password policy configured for the project or tenant.\n *\n * @remarks\n * If no tenant ID is set on the `Auth` instance, then this method will use the password\n * policy configured for the project. Otherwise, this method will use the policy configured\n * for the tenant. If a password policy has not been configured, then the default policy\n * configured for all projects will be used.\n *\n * If an auth flow fails because a submitted password does not meet the password policy\n * requirements and this method has previously been called, then this method will use the\n * most recent policy available when called again.\n *\n * @example\n * ```javascript\n * validatePassword(auth, 'some-password');\n * ```\n *\n * @param auth The {@link Auth} instance.\n * @param password The password to validate.\n *\n * @public\n */\nexport async function validatePassword(\n  auth: Auth,\n  password: string\n): Promise<PasswordValidationStatus> {\n  const authInternal = _castAuth(auth);\n  return authInternal.validatePassword(password);\n}\n\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n *\n * @remarks\n * This includes sign-in, sign-out, and token refresh events.\n * This will not be triggered automatically upon ID token expiration. Use {@link User.getIdToken} to refresh the ID token.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onIdTokenChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onIdTokenChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Adds a blocking callback that runs before an auth state change\n * sets a new user.\n *\n * @param auth - The {@link Auth} instance.\n * @param callback - callback triggered before new user value is set.\n *   If this throws, it blocks the user from being set.\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\n *   callback throws, allowing you to undo any side effects.\n */\nexport function beforeAuthStateChanged(\n  auth: Auth,\n  callback: (user: User | null) => void | Promise<void>,\n  onAbort?: () => void\n): Unsubscribe {\n  return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\n/**\n * Adds an observer for changes to the user's sign-in state.\n *\n * @remarks\n * To keep the old behavior, see {@link onIdTokenChanged}.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onAuthStateChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onAuthStateChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Sets the current language to the default device/browser preference.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function useDeviceLanguage(auth: Auth): void {\n  getModularInstance(auth).useDeviceLanguage();\n}\n/**\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\n * {@link Auth} instance.\n *\n * @remarks\n * A new instance copy of the user provided will be made and set as currentUser.\n *\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\n * like other sign in methods.\n *\n * The operation fails with an error if the user to be updated belongs to a different Firebase\n * project.\n *\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n * @param user - The new {@link User}.\n *\n * @public\n */\nexport function updateCurrentUser(\n  auth: Auth,\n  user: User | null\n): Promise<void> {\n  return getModularInstance(auth).updateCurrentUser(user);\n}\n/**\n * Signs out the current user.\n *\n * @remarks\n * This method is not supported by {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function signOut(auth: Auth): Promise<void> {\n  return getModularInstance(auth).signOut();\n}\n\n/**\n * Revokes the given access token. Currently only supports Apple OAuth access tokens.\n *\n * @param auth - The {@link Auth} instance.\n * @param token - The Apple OAuth access token.\n *\n * @public\n */\nexport function revokeAccessToken(auth: Auth, token: string): Promise<void> {\n  const authInternal = _castAuth(auth);\n  return authInternal.revokeAccessToken(token);\n}\n\nexport { initializeAuth } from './auth/initialize';\nexport { connectAuthEmulator } from './auth/emulator';\n\n// credentials\nexport { AuthCredential } from './credentials';\nexport { EmailAuthCredential } from './credentials/email';\nexport { OAuthCredential } from './credentials/oauth';\nexport { PhoneAuthCredential } from './credentials/phone';\n\n// persistence\nexport { inMemoryPersistence } from './persistence/in_memory';\n\n// providers\nexport { EmailAuthProvider } from './providers/email';\nexport { FacebookAuthProvider } from './providers/facebook';\nexport { CustomParameters } from './providers/federated';\nexport { GoogleAuthProvider } from './providers/google';\nexport { GithubAuthProvider } from './providers/github';\nexport { OAuthProvider, OAuthCredentialOptions } from './providers/oauth';\nexport { SAMLAuthProvider } from './providers/saml';\nexport { TwitterAuthProvider } from './providers/twitter';\n\n// strategies\nexport { signInAnonymously } from './strategies/anonymous';\nexport {\n  signInWithCredential,\n  linkWithCredential,\n  reauthenticateWithCredential\n} from './strategies/credential';\nexport { signInWithCustomToken } from './strategies/custom_token';\nexport {\n  sendPasswordResetEmail,\n  confirmPasswordReset,\n  applyActionCode,\n  checkActionCode,\n  verifyPasswordResetCode,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from './strategies/email_and_password';\nexport {\n  sendSignInLinkToEmail,\n  isSignInWithEmailLink,\n  signInWithEmailLink\n} from './strategies/email_link';\nexport {\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  verifyBeforeUpdateEmail\n} from './strategies/email';\n\n// core\nexport { ActionCodeURL, parseActionCodeURL } from './action_code_url';\n\n// user\nexport {\n  updateProfile,\n  updateEmail,\n  updatePassword\n} from './user/account_info';\nexport { getIdToken, getIdTokenResult } from './user/id_token_result';\nexport { unlink } from './user/link_unlink';\nexport { getAdditionalUserInfo } from './user/additional_user_info';\n\n// Non-optional user methods.\nexport { reload } from './user/reload';\n/**\n * Deletes and signs out the user.\n *\n * @remarks\n * Important: this is a security-sensitive operation that requires the user to have recently\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function deleteUser(user: User): Promise<void> {\n  return getModularInstance(user).delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { SignInWithPhoneNumberRequest } from '../authentication/sms';\nimport { FinalizeMfaResponse } from '../authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\n\n/**\n * MFA Info as returned by the API.\n */\ninterface BaseMfaEnrollment {\n  mfaEnrollmentId: string;\n  enrolledAt: number;\n  displayName?: string;\n}\n\n/**\n * An MFA provided by SMS verification.\n */\nexport interface PhoneMfaEnrollment extends BaseMfaEnrollment {\n  phoneInfo: string;\n}\n\n/**\n * An MFA provided by TOTP (Time-based One Time Password).\n */\nexport interface TotpMfaEnrollment extends BaseMfaEnrollment {}\n\n/**\n * MfaEnrollment can be any subtype of BaseMfaEnrollment, currently only PhoneMfaEnrollment and TotpMfaEnrollment are supported.\n */\nexport type MfaEnrollment = PhoneMfaEnrollment | TotpMfaEnrollment;\n\nexport interface StartPhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneEnrollmentInfo: {\n    phoneNumber: string;\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaEnrollmentResponse {\n  phoneSessionInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: StartPhoneMfaEnrollmentRequest\n): Promise<StartPhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartPhoneMfaEnrollmentRequest,\n    StartPhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizePhoneMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: FinalizePhoneMfaEnrollmentRequest\n): Promise<FinalizePhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaEnrollmentRequest,\n    FinalizePhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface StartTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpEnrollmentInfo: {};\n  tenantId?: string;\n}\n\nexport interface StartTotpMfaEnrollmentResponse {\n  totpSessionInfo: {\n    sharedSecretKey: string;\n    verificationCodeLength: number;\n    hashingAlgorithm: string;\n    periodSec: number;\n    sessionInfo: string;\n    finalizeEnrollmentTime: number;\n  };\n}\n\nexport function startEnrollTotpMfa(\n  auth: AuthInternal,\n  request: StartTotpMfaEnrollmentRequest\n): Promise<StartTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartTotpMfaEnrollmentRequest,\n    StartTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface TotpVerificationInfo {\n  sessionInfo: string;\n  verificationCode: string;\n}\nexport interface FinalizeTotpMfaEnrollmentRequest {\n  idToken: string;\n  totpVerificationInfo: TotpVerificationInfo;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizeTotpMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollTotpMfa(\n  auth: AuthInternal,\n  request: FinalizeTotpMfaEnrollmentRequest\n): Promise<FinalizeTotpMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaEnrollmentRequest,\n    FinalizeTotpMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface WithdrawMfaRequest {\n  idToken: string;\n  mfaEnrollmentId: string;\n  tenantId?: string;\n}\n\nexport interface WithdrawMfaResponse extends FinalizeMfaResponse {}\n\nexport function withdrawMfa(\n  auth: AuthInternal,\n  request: WithdrawMfaRequest\n): Promise<WithdrawMfaResponse> {\n  return _performApiRequest<WithdrawMfaRequest, WithdrawMfaResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.WITHDRAW_MFA,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MultiFactorAssertion,\n  MultiFactorInfo,\n  MultiFactorSession,\n  MultiFactorUser,\n  User\n} from '../model/public_types';\n\nimport { withdrawMfa } from '../api/account_management/mfa';\nimport { _logoutIfInvalidated } from '../core/user/invalidation';\nimport { UserInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\n\nexport class MultiFactorUserImpl implements MultiFactorUser {\n  enrolledFactors: MultiFactorInfo[] = [];\n\n  private constructor(readonly user: UserInternal) {\n    user._onReload(userInfo => {\n      if (userInfo.mfaInfo) {\n        this.enrolledFactors = userInfo.mfaInfo.map(enrollment =>\n          MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment)\n        );\n      }\n    });\n  }\n\n  static _fromUser(user: UserInternal): MultiFactorUserImpl {\n    return new MultiFactorUserImpl(user);\n  }\n\n  async getSession(): Promise<MultiFactorSession> {\n    return MultiFactorSessionImpl._fromIdtoken(\n      await this.user.getIdToken(),\n      this.user\n    );\n  }\n\n  async enroll(\n    assertionExtern: MultiFactorAssertion,\n    displayName?: string | null\n  ): Promise<void> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    const session = (await this.getSession()) as MultiFactorSessionImpl;\n    const finalizeMfaResponse = await _logoutIfInvalidated(\n      this.user,\n      assertion._process(this.user.auth, session, displayName)\n    );\n    // New tokens will be issued after enrollment of the new second factors.\n    // They need to be updated on the user.\n    await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n    // The user needs to be reloaded to get the new multi-factor information\n    // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n    // will be updated.\n    return this.user.reload();\n  }\n\n  async unenroll(infoOrUid: MultiFactorInfo | string): Promise<void> {\n    const mfaEnrollmentId =\n      typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n    const idToken = await this.user.getIdToken();\n    try {\n      const idTokenResponse = await _logoutIfInvalidated(\n        this.user,\n        withdrawMfa(this.user.auth, {\n          idToken,\n          mfaEnrollmentId\n        })\n      );\n      // Remove the second factor from the user's list.\n      this.enrolledFactors = this.enrolledFactors.filter(\n        ({ uid }) => uid !== mfaEnrollmentId\n      );\n      // Depending on whether the backend decided to revoke the user's session,\n      // the tokenResponse may be empty. If the tokens were not updated (and they\n      // are now invalid), reloading the user will discover this and invalidate\n      // the user's state accordingly.\n      await this.user._updateTokensIfNecessary(idTokenResponse);\n      await this.user.reload();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nconst multiFactorUserCache = new WeakMap<User, MultiFactorUser>();\n\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nexport function multiFactor(user: User): MultiFactorUser {\n  const userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(\n      userModular,\n      MultiFactorUserImpl._fromUser(userModular as UserInternal)\n    );\n  }\n  return multiFactorUserCache.get(userModular)!;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Persistence } from '../../model/public_types';\n\nexport const enum PersistenceType {\n  SESSION = 'SESSION',\n  LOCAL = 'LOCAL',\n  NONE = 'NONE'\n}\n\nexport type PersistedBlob = Record<string, unknown>;\n\nexport interface Instantiator<T> {\n  (blob: PersistedBlob): T;\n}\n\nexport type PersistenceValue = PersistedBlob | string;\n\nexport const STORAGE_AVAILABLE_KEY = '__sak';\n\nexport interface StorageEventListener {\n  (value: PersistenceValue | null): void;\n}\n\nexport interface PersistenceInternal extends Persistence {\n  type: PersistenceType;\n  _isAvailable(): Promise<boolean>;\n  _set(key: string, value: PersistenceValue): Promise<void>;\n  _get<T extends PersistenceValue>(key: string): Promise<T | null>;\n  _remove(key: string): Promise<void>;\n  _addListener(key: string, listener: StorageEventListener): void;\n  _removeListener(key: string, listener: StorageEventListener): void;\n  // Should this persistence allow migration up the chosen hierarchy?\n  _shouldAllowMigration?: boolean;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PersistenceValue,\n  STORAGE_AVAILABLE_KEY,\n  PersistenceType\n} from '../../core/persistence';\n\n// There are two different browser persistence types: local and session.\n// Both have the same implementation but use a different underlying storage\n// object.\n\nexport abstract class BrowserPersistenceClass {\n  protected constructor(\n    protected readonly storageRetriever: () => Storage,\n    readonly type: PersistenceType\n  ) {}\n\n  _isAvailable(): Promise<boolean> {\n    try {\n      if (!this.storage) {\n        return Promise.resolve(false);\n      }\n      this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n      this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n      return Promise.resolve(true);\n    } catch {\n      return Promise.resolve(false);\n    }\n  }\n\n  _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value));\n    return Promise.resolve();\n  }\n\n  _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const json = this.storage.getItem(key);\n    return Promise.resolve(json ? JSON.parse(json) : null);\n  }\n\n  _remove(key: string): Promise<void> {\n    this.storage.removeItem(key);\n    return Promise.resolve();\n  }\n\n  protected get storage(): Storage {\n    return this.storageRetriever();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport { getUA } from '@firebase/util';\nimport {\n  _isSafari,\n  _isIOS,\n  _isIframe,\n  _isMobileBrowser,\n  _isIE10\n} from '../../core/util/browser';\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nfunction _iframeCannotSyncWebStorage(): boolean {\n  const ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\n\n// The polling period in case events are not supported\nexport const _POLLING_INTERVAL_MS = 1000;\n\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\nclass BrowserLocalPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'LOCAL' = 'LOCAL';\n\n  constructor() {\n    super(() => window.localStorage, PersistenceType.LOCAL);\n  }\n\n  private readonly boundEventHandler = (\n    event: StorageEvent,\n    poll?: boolean\n  ): void => this.onStorageEvent(event, poll);\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, string | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n\n  // Safari or iOS browser and embedded in an iframe.\n  private readonly safariLocalStorageNotSynced =\n    _iframeCannotSyncWebStorage() && _isIframe();\n  // Whether to use polling instead of depending on window events\n  private readonly fallbackToPolling = _isMobileBrowser();\n  readonly _shouldAllowMigration = true;\n\n  private forAllChangedKeys(\n    cb: (key: string, oldValue: string | null, newValue: string | null) => void\n  ): void {\n    // Check all keys with listeners on them.\n    for (const key of Object.keys(this.listeners)) {\n      // Get value from localStorage.\n      const newValue = this.storage.getItem(key);\n      const oldValue = this.localCache[key];\n      // If local map value does not match, trigger listener with storage event.\n      // Differentiate this simulated event from the real storage event.\n      if (newValue !== oldValue) {\n        cb(key, oldValue, newValue);\n      }\n    }\n  }\n\n  private onStorageEvent(event: StorageEvent, poll = false): void {\n    // Key would be null in some situations, like when localStorage is cleared\n    if (!event.key) {\n      this.forAllChangedKeys(\n        (key: string, _oldValue: string | null, newValue: string | null) => {\n          this.notifyListeners(key, newValue);\n        }\n      );\n      return;\n    }\n\n    const key = event.key;\n\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    if (poll) {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.detachListener();\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopPolling();\n    }\n\n    // Safari embedded iframe. Storage event will trigger with the delta\n    // changes but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced) {\n      // Get current iframe page value.\n      const storedValue = this.storage.getItem(key);\n      // Value not synchronized, synchronize manually.\n      if (event.newValue !== storedValue) {\n        if (event.newValue !== null) {\n          // Value changed from current value.\n          this.storage.setItem(key, event.newValue);\n        } else {\n          // Current value deleted.\n          this.storage.removeItem(key);\n        }\n      } else if (this.localCache[key] === event.newValue && !poll) {\n        // Already detected and processed, do not trigger listeners again.\n        return;\n      }\n    }\n\n    const triggerListeners = (): void => {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      const storedValue = this.storage.getItem(key);\n      if (!poll && this.localCache[key] === storedValue) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      this.notifyListeners(key, storedValue);\n    };\n\n    const storedValue = this.storage.getItem(key);\n    if (\n      _isIE10() &&\n      storedValue !== event.newValue &&\n      event.newValue !== event.oldValue\n    ) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures\n      // this recovers from that situation.\n      setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  }\n\n  private notifyListeners(key: string, value: string | null): void {\n    this.localCache[key] = value;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(value ? JSON.parse(value) : value);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(() => {\n      this.forAllChangedKeys(\n        (key: string, oldValue: string | null, newValue: string | null) => {\n          this.onStorageEvent(\n            new StorageEvent('storage', {\n              key,\n              oldValue,\n              newValue\n            }),\n            /* poll */ true\n          );\n        }\n      );\n    }, _POLLING_INTERVAL_MS);\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  private attachListener(): void {\n    window.addEventListener('storage', this.boundEventHandler);\n  }\n\n  private detachListener(): void {\n    window.removeEventListener('storage', this.boundEventHandler);\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      // Whether browser can detect storage event when it had already been pushed to the background.\n      // This may happen in some mobile browsers. A localStorage change in the foreground window\n      // will not be detected in the background window via the storage event.\n      // This was detected in iOS 7.x mobile browsers\n      if (this.fallbackToPolling) {\n        this.startPolling();\n      } else {\n        this.attachListener();\n      }\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      this.localCache[key] = this.storage.getItem(key);\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.detachListener();\n      this.stopPolling();\n    }\n  }\n\n  // Update local cache on base operations:\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    await super._set(key, value);\n    this.localCache[key] = JSON.stringify(value);\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = await super._get<T>(key);\n    this.localCache[key] = JSON.stringify(value);\n    return value;\n  }\n\n  async _remove(key: string): Promise<void> {\n    await super._remove(key);\n    delete this.localCache[key];\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserLocalPersistence: Persistence = BrowserLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nclass BrowserSessionPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'SESSION' = 'SESSION';\n\n  constructor() {\n    super(() => window.sessionStorage, PersistenceType.SESSION);\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of `SESSION` using `sessionStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserSessionPersistence: Persistence = BrowserSessionPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** TODO: remove this once tslib has a polyfill for Promise.allSettled */\ninterface PromiseFulfilledResult<T> {\n  fulfilled: true;\n  value: T;\n}\n\ninterface PromiseRejectedResult {\n  fulfilled: false;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason: any;\n}\n\nexport type PromiseSettledResult<T> =\n  | PromiseFulfilledResult<T>\n  | PromiseRejectedResult;\n\n/**\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\n *\n * @param promises - Array of promises to wait on.\n */\nexport function _allSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<Array<PromiseSettledResult<T>>> {\n  return Promise.all(\n    promises.map(async promise => {\n      try {\n        const value = await promise;\n        return {\n          fulfilled: true,\n          value\n        } as PromiseFulfilledResult<T>;\n      } catch (reason) {\n        return {\n          fulfilled: false,\n          reason\n        } as PromiseRejectedResult;\n      }\n    })\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ReceiverHandler,\n  _EventType,\n  _ReceiverResponse,\n  SenderMessageEvent,\n  _Status,\n  _SenderRequest\n} from './index';\nimport { _allSettled } from './promise';\n\n/**\n * Interface class for receiving messages.\n *\n */\nexport class Receiver {\n  private static readonly receivers: Receiver[] = [];\n  private readonly boundEventHandler: EventListener;\n\n  private readonly handlersMap: {\n    // Typescript doesn't have existential types :(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [eventType: string]: Set<ReceiverHandler<any, any>>;\n  } = {};\n\n  constructor(private readonly eventTarget: EventTarget) {\n    this.boundEventHandler = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\n   *\n   * @param eventTarget - An event target (such as window or self) through which the underlying\n   * messages will be received.\n   */\n  static _getInstance(eventTarget: EventTarget): Receiver {\n    // The results are stored in an array since objects can't be keys for other\n    // objects. In addition, setting a unique property on an event target as a\n    // hash map key may not be allowed due to CORS restrictions.\n    const existingInstance = this.receivers.find(receiver =>\n      receiver.isListeningto(eventTarget)\n    );\n    if (existingInstance) {\n      return existingInstance;\n    }\n    const newInstance = new Receiver(eventTarget);\n    this.receivers.push(newInstance);\n    return newInstance;\n  }\n\n  private isListeningto(eventTarget: EventTarget): boolean {\n    return this.eventTarget === eventTarget;\n  }\n\n  /**\n   * Fans out a MessageEvent to the appropriate listeners.\n   *\n   * @remarks\n   * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\n   * finished processing.\n   *\n   * @param event - The MessageEvent.\n   *\n   */\n  private async handleEvent<\n    T extends _ReceiverResponse,\n    S extends _SenderRequest\n  >(event: Event): Promise<void> {\n    const messageEvent = event as MessageEvent<SenderMessageEvent<S>>;\n    const { eventId, eventType, data } = messageEvent.data;\n\n    const handlers: Set<ReceiverHandler<T, S>> | undefined =\n      this.handlersMap[eventType];\n    if (!handlers?.size) {\n      return;\n    }\n\n    messageEvent.ports[0].postMessage({\n      status: _Status.ACK,\n      eventId,\n      eventType\n    });\n\n    const promises = Array.from(handlers).map(async handler =>\n      handler(messageEvent.origin, data)\n    );\n    const response = await _allSettled(promises);\n    messageEvent.ports[0].postMessage({\n      status: _Status.DONE,\n      eventId,\n      eventType,\n      response\n    });\n  }\n\n  /**\n   * Subscribe an event handler for a particular event.\n   *\n   * @param eventType - Event name to subscribe to.\n   * @param eventHandler - The event handler which should receive the events.\n   *\n   */\n  _subscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler: ReceiverHandler<T, S>\n  ): void {\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.addEventListener('message', this.boundEventHandler);\n    }\n\n    if (!this.handlersMap[eventType]) {\n      this.handlersMap[eventType] = new Set();\n    }\n\n    this.handlersMap[eventType].add(eventHandler);\n  }\n\n  /**\n   * Unsubscribe an event handler from a particular event.\n   *\n   * @param eventType - Event name to unsubscribe from.\n   * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\n   *\n   */\n  _unsubscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler?: ReceiverHandler<T, S>\n  ): void {\n    if (this.handlersMap[eventType] && eventHandler) {\n      this.handlersMap[eventType].delete(eventHandler);\n    }\n    if (!eventHandler || this.handlersMap[eventType].size === 0) {\n      delete this.handlersMap[eventType];\n    }\n\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.removeEventListener('message', this.boundEventHandler);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _generateEventId(prefix = '', digits = 10): string {\n  let random = '';\n  for (let i = 0; i < digits; i++) {\n    random += Math.floor(Math.random() * 10);\n  }\n  return prefix + random;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _generateEventId } from '../../core/util/event_id';\nimport {\n  _SenderRequest,\n  _EventType,\n  ReceiverMessageEvent,\n  _MessageError,\n  SenderMessageEvent,\n  _Status,\n  _ReceiverMessageResponse,\n  _ReceiverResponse,\n  _TimeoutDuration\n} from './index';\n\ninterface MessageHandler {\n  messageChannel: MessageChannel;\n  onMessage: EventListenerOrEventListenerObject;\n}\n\n/**\n * Interface for sending messages and waiting for a completion response.\n *\n */\nexport class Sender {\n  private readonly handlers = new Set<MessageHandler>();\n\n  constructor(private readonly target: ServiceWorker) {}\n\n  /**\n   * Unsubscribe the handler and remove it from our tracking Set.\n   *\n   * @param handler - The handler to unsubscribe.\n   */\n  private removeMessageHandler(handler: MessageHandler): void {\n    if (handler.messageChannel) {\n      handler.messageChannel.port1.removeEventListener(\n        'message',\n        handler.onMessage\n      );\n      handler.messageChannel.port1.close();\n    }\n    this.handlers.delete(handler);\n  }\n\n  /**\n   * Send a message to the Receiver located at {@link target}.\n   *\n   * @remarks\n   * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\n   * receiver has had a chance to fully process the event.\n   *\n   * @param eventType - Type of event to send.\n   * @param data - The payload of the event.\n   * @param timeout - Timeout for waiting on an ACK from the receiver.\n   *\n   * @returns An array of settled promises from all the handlers that were listening on the receiver.\n   */\n  async _send<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    data: S,\n    timeout = _TimeoutDuration.ACK\n  ): Promise<_ReceiverMessageResponse<T>> {\n    const messageChannel =\n      typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n    if (!messageChannel) {\n      throw new Error(_MessageError.CONNECTION_UNAVAILABLE);\n    }\n    // Node timers and browser timers return fundamentally different types.\n    // We don't actually care what the value is but TS won't accept unknown and\n    // we can't cast properly in both environments.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let completionTimer: any;\n    let handler: MessageHandler;\n    return new Promise<_ReceiverMessageResponse<T>>((resolve, reject) => {\n      const eventId = _generateEventId('', 20);\n      messageChannel.port1.start();\n      const ackTimer = setTimeout(() => {\n        reject(new Error(_MessageError.UNSUPPORTED_EVENT));\n      }, timeout);\n      handler = {\n        messageChannel,\n        onMessage(event: Event): void {\n          const messageEvent = event as MessageEvent<ReceiverMessageEvent<T>>;\n          if (messageEvent.data.eventId !== eventId) {\n            return;\n          }\n          switch (messageEvent.data.status) {\n            case _Status.ACK:\n              // The receiver should ACK first.\n              clearTimeout(ackTimer);\n              completionTimer = setTimeout(() => {\n                reject(new Error(_MessageError.TIMEOUT));\n              }, _TimeoutDuration.COMPLETION);\n              break;\n            case _Status.DONE:\n              // Once the receiver's handlers are finished we will get the results.\n              clearTimeout(completionTimer);\n              resolve(messageEvent.data.response);\n              break;\n            default:\n              clearTimeout(ackTimer);\n              clearTimeout(completionTimer);\n              reject(new Error(_MessageError.INVALID_RESPONSE));\n              break;\n          }\n        }\n      };\n      this.handlers.add(handler);\n      messageChannel.port1.addEventListener('message', handler.onMessage);\n      this.target.postMessage(\n        {\n          eventType,\n          eventId,\n          data\n        } as SenderMessageEvent<S>,\n        [messageChannel.port2]\n      );\n    }).finally(() => {\n      if (handler) {\n        this.removeMessageHandler(handler);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Recaptcha, GreCAPTCHATopLevel } from './recaptcha/recaptcha';\n\n/**\n * A specialized window type that melds the normal window type plus the\n * various bits we need. The three different blocks that are &'d together\n * cant be defined in the same block together.\n */\nexport type AuthWindow = {\n  // Standard window types\n  [T in keyof Window]: Window[T];\n} & {\n  // Any known / named properties we want to add\n  grecaptcha?: Recaptcha | GreCAPTCHATopLevel;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  ___jsl?: Record<string, any>;\n  gapi?: typeof gapi;\n} & {\n  // A final catch-all for callbacks (which will have random names) that\n  // we will stick on the window.\n  [callback: string]: (...args: unknown[]) => void;\n};\n\n/**\n * Lazy accessor for window, since the compat layer won't tree shake this out,\n * we need to make sure not to mess with window unless we have to\n */\nexport function _window(): AuthWindow {\n  return window as unknown as AuthWindow;\n}\n\nexport function _setWindowLocation(url: string): void {\n  _window().location.href = url;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _window } from '../auth_window';\n\nexport function _isWorker(): boolean {\n  return (\n    typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\n    typeof _window()['importScripts'] === 'function'\n  );\n}\n\nexport async function _getActiveServiceWorker(): Promise<ServiceWorker | null> {\n  if (!navigator?.serviceWorker) {\n    return null;\n  }\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    return registration.active;\n  } catch {\n    return null;\n  }\n}\n\nexport function _getServiceWorkerController(): ServiceWorker | null {\n  return navigator?.serviceWorker?.controller || null;\n}\n\nexport function _getWorkerGlobalScope(): ServiceWorker | null {\n  return _isWorker() ? (self as unknown as ServiceWorker) : null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\nimport {\n  PersistedBlob,\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener,\n  STORAGE_AVAILABLE_KEY\n} from '../../core/persistence/';\nimport {\n  _EventType,\n  _PingResponse,\n  KeyChangedResponse,\n  KeyChangedRequest,\n  PingRequest,\n  _TimeoutDuration\n} from '../messagechannel/index';\nimport { Receiver } from '../messagechannel/receiver';\nimport { Sender } from '../messagechannel/sender';\nimport {\n  _isWorker,\n  _getActiveServiceWorker,\n  _getServiceWorkerController,\n  _getWorkerGlobalScope\n} from '../util/worker';\n\nexport const DB_NAME = 'firebaseLocalStorageDb';\nconst DB_VERSION = 1;\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nconst DB_DATA_KEYPATH = 'fbase_key';\n\ninterface DBObject {\n  [DB_DATA_KEYPATH]: string;\n  value: PersistedBlob;\n}\n\n/**\n * Promise wrapper for IDBRequest\n *\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\n *\n */\nclass DBPromise<T> {\n  constructor(private readonly request: IDBRequest) {}\n\n  toPromise(): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.request.addEventListener('success', () => {\n        resolve(this.request.result);\n      });\n      this.request.addEventListener('error', () => {\n        reject(this.request.error);\n      });\n    });\n  }\n}\n\nfunction getObjectStore(db: IDBDatabase, isReadWrite: boolean): IDBObjectStore {\n  return db\n    .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\n    .objectStore(DB_OBJECTSTORE_NAME);\n}\n\nexport async function _clearDatabase(db: IDBDatabase): Promise<void> {\n  const objectStore = getObjectStore(db, true);\n  return new DBPromise<void>(objectStore.clear()).toPromise();\n}\n\nexport function _deleteDatabase(): Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport function _openDatabase(): Promise<IDBDatabase> {\n  const request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise((resolve, reject) => {\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n\n    request.addEventListener('upgradeneeded', () => {\n      const db = request.result;\n\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    request.addEventListener('success', async () => {\n      const db: IDBDatabase = request.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        // Need to close the database or else you get a `blocked` event\n        db.close();\n        await _deleteDatabase();\n        resolve(await _openDatabase());\n      } else {\n        resolve(db);\n      }\n    });\n  });\n}\n\nexport async function _putObject(\n  db: IDBDatabase,\n  key: string,\n  value: PersistenceValue | string\n): Promise<void> {\n  const request = getObjectStore(db, true).put({\n    [DB_DATA_KEYPATH]: key,\n    value\n  });\n  return new DBPromise<void>(request).toPromise();\n}\n\nasync function getObject(\n  db: IDBDatabase,\n  key: string\n): Promise<PersistedBlob | null> {\n  const request = getObjectStore(db, false).get(key);\n  const data = await new DBPromise<DBObject | undefined>(request).toPromise();\n  return data === undefined ? null : data.value;\n}\n\nexport function _deleteObject(db: IDBDatabase, key: string): Promise<void> {\n  const request = getObjectStore(db, true).delete(key);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport const _POLLING_INTERVAL_MS = 800;\nexport const _TRANSACTION_RETRY_COUNT = 3;\n\nclass IndexedDBLocalPersistence implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  type = PersistenceType.LOCAL;\n  db?: IDBDatabase;\n  readonly _shouldAllowMigration = true;\n\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, PersistenceValue | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n  private pendingWrites = 0;\n\n  private receiver: Receiver | null = null;\n  private sender: Sender | null = null;\n  private serviceWorkerReceiverAvailable = false;\n  private activeServiceWorker: ServiceWorker | null = null;\n  // Visible for testing only\n  readonly _workerInitializationPromise: Promise<void>;\n\n  constructor() {\n    // Fire & forget the service worker registration as it may never resolve\n    this._workerInitializationPromise =\n      this.initializeServiceWorkerMessaging().then(\n        () => {},\n        () => {}\n      );\n  }\n\n  async _openDb(): Promise<IDBDatabase> {\n    if (this.db) {\n      return this.db;\n    }\n    this.db = await _openDatabase();\n    return this.db;\n  }\n\n  async _withRetries<T>(op: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    let numAttempts = 0;\n\n    while (true) {\n      try {\n        const db = await this._openDb();\n        return await op(db);\n      } catch (e) {\n        if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n          throw e;\n        }\n        if (this.db) {\n          this.db.close();\n          this.db = undefined;\n        }\n        // TODO: consider adding exponential backoff\n      }\n    }\n  }\n\n  /**\n   * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\n   * postMessage interface to send these events to the worker ourselves.\n   */\n  private async initializeServiceWorkerMessaging(): Promise<void> {\n    return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n  }\n\n  /**\n   * As the worker we should listen to events from the main window.\n   */\n  private async initializeReceiver(): Promise<void> {\n    this.receiver = Receiver._getInstance(_getWorkerGlobalScope()!);\n    // Refresh from persistence if we receive a KeyChanged message.\n    this.receiver._subscribe(\n      _EventType.KEY_CHANGED,\n      async (_origin: string, data: KeyChangedRequest) => {\n        const keys = await this._poll();\n        return {\n          keyProcessed: keys.includes(data.key)\n        };\n      }\n    );\n    // Let the sender know that we are listening so they give us more timeout.\n    this.receiver._subscribe(\n      _EventType.PING,\n      async (_origin: string, _data: PingRequest) => {\n        return [_EventType.KEY_CHANGED];\n      }\n    );\n  }\n\n  /**\n   * As the main window, we should let the worker know when keys change (set and remove).\n   *\n   * @remarks\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\n   * may not resolve.\n   */\n  private async initializeSender(): Promise<void> {\n    // Check to see if there's an active service worker.\n    this.activeServiceWorker = await _getActiveServiceWorker();\n    if (!this.activeServiceWorker) {\n      return;\n    }\n    this.sender = new Sender(this.activeServiceWorker);\n    // Ping the service worker to check what events they can handle.\n    const results = await this.sender._send<_PingResponse, PingRequest>(\n      _EventType.PING,\n      {},\n      _TimeoutDuration.LONG_ACK\n    );\n    if (!results) {\n      return;\n    }\n    if (\n      results[0]?.fulfilled &&\n      results[0]?.value.includes(_EventType.KEY_CHANGED)\n    ) {\n      this.serviceWorkerReceiverAvailable = true;\n    }\n  }\n\n  /**\n   * Let the worker know about a changed key, the exact key doesn't technically matter since the\n   * worker will just trigger a full sync anyway.\n   *\n   * @remarks\n   * For now, we only support one service worker per page.\n   *\n   * @param key - Storage key which changed.\n   */\n  private async notifyServiceWorker(key: string): Promise<void> {\n    if (\n      !this.sender ||\n      !this.activeServiceWorker ||\n      _getServiceWorkerController() !== this.activeServiceWorker\n    ) {\n      return;\n    }\n    try {\n      await this.sender._send<KeyChangedResponse, KeyChangedRequest>(\n        _EventType.KEY_CHANGED,\n        { key },\n        // Use long timeout if receiver has previously responded to a ping from us.\n        this.serviceWorkerReceiverAvailable\n          ? _TimeoutDuration.LONG_ACK\n          : _TimeoutDuration.ACK\n      );\n    } catch {\n      // This is a best effort approach. Ignore errors.\n    }\n  }\n\n  async _isAvailable(): Promise<boolean> {\n    try {\n      if (!indexedDB) {\n        return false;\n      }\n      const db = await _openDatabase();\n      await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n      await _deleteObject(db, STORAGE_AVAILABLE_KEY);\n      return true;\n    } catch {}\n    return false;\n  }\n\n  private async _withPendingWrite(write: () => Promise<void>): Promise<void> {\n    this.pendingWrites++;\n    try {\n      await write();\n    } finally {\n      this.pendingWrites--;\n    }\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _putObject(db, key, value));\n      this.localCache[key] = value;\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const obj = (await this._withRetries((db: IDBDatabase) =>\n      getObject(db, key)\n    )) as T;\n    this.localCache[key] = obj;\n    return obj;\n  }\n\n  async _remove(key: string): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _deleteObject(db, key));\n      delete this.localCache[key];\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  private async _poll(): Promise<string[]> {\n    // TODO: check if we need to fallback if getAll is not supported\n    const result = await this._withRetries((db: IDBDatabase) => {\n      const getAllRequest = getObjectStore(db, false).getAll();\n      return new DBPromise<DBObject[] | null>(getAllRequest).toPromise();\n    });\n\n    if (!result) {\n      return [];\n    }\n\n    // If we have pending writes in progress abort, we'll get picked up on the next poll\n    if (this.pendingWrites !== 0) {\n      return [];\n    }\n\n    const keys = [];\n    const keysInResult = new Set();\n    if (result.length !== 0) {\n      for (const { fbase_key: key, value } of result) {\n        keysInResult.add(key);\n        if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n          this.notifyListeners(key, value as PersistenceValue);\n          keys.push(key);\n        }\n      }\n    }\n\n    for (const localKey of Object.keys(this.localCache)) {\n      if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n        // Deleted\n        this.notifyListeners(localKey, null);\n        keys.push(localKey);\n      }\n    }\n    return keys;\n  }\n\n  private notifyListeners(\n    key: string,\n    newValue: PersistenceValue | null\n  ): void {\n    this.localCache[key] = newValue;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(newValue);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(\n      async () => this._poll(),\n      _POLLING_INTERVAL_MS\n    );\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      this.startPolling();\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      void this._get(key); // This can happen in the background async and we can return immediately.\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.stopPolling();\n    }\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\n * for the underlying storage.\n *\n * @public\n */\nexport const indexedDBLocalPersistence: Persistence = IndexedDBLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from '../account_management/mfa';\nimport { SignInWithIdpResponse } from './idp';\nimport {\n  SignInWithPhoneNumberRequest,\n  SignInWithPhoneNumberResponse\n} from './sms';\n\nexport interface FinalizeMfaResponse {\n  idToken: string;\n  refreshToken: string;\n}\n\n/**\n * @internal\n */\nexport interface IdTokenMfaResponse extends IdTokenResponse {\n  mfaPendingCredential?: string;\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface StartPhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  mfaEnrollmentId: string;\n  phoneSignInInfo: {\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaSignInResponse {\n  phoneResponseInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startSignInPhoneMfa(\n  auth: Auth,\n  request: StartPhoneMfaSignInRequest\n): Promise<StartPhoneMfaSignInResponse> {\n  return _performApiRequest<\n    StartPhoneMfaSignInRequest,\n    StartPhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  tenantId?: string;\n}\n\n// TOTP MFA Sign in only has a finalize phase. Phone MFA has a start phase to initiate sending an\n// SMS and a finalize phase to complete sign in. With TOTP, the user already has the OTP in the\n// TOTP/Authenticator app.\nexport interface FinalizeTotpMfaSignInRequest {\n  mfaPendingCredential: string;\n  totpVerificationInfo: { verificationCode: string };\n  tenantId?: string;\n  mfaEnrollmentId: string;\n}\n\nexport interface FinalizePhoneMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport interface FinalizeTotpMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport function finalizeSignInPhoneMfa(\n  auth: Auth,\n  request: FinalizePhoneMfaSignInRequest\n): Promise<FinalizePhoneMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaSignInRequest,\n    FinalizePhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport function finalizeSignInTotpMfa(\n  auth: Auth,\n  request: FinalizeTotpMfaSignInRequest\n): Promise<FinalizeTotpMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizeTotpMfaSignInRequest,\n    FinalizeTotpMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport type PhoneOrOauthTokenResponse =\n  | SignInWithPhoneNumberResponse\n  | SignInWithIdpResponse\n  | IdTokenResponse;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as jsHelpers from '../load_js';\nimport { Recaptcha, isV2 } from './recaptcha';\nimport { MockReCaptcha } from './recaptcha_mock';\n\n// ReCaptcha will load using the same callback, so the callback function needs\n// to be kept around\nexport const _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\n\n/**\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport interface ReCaptchaLoader {\n  load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\n  clearedOneInstance(): void;\n}\n\n/**\n * Loader for the GReCaptcha library. There should only ever be one of this.\n */\nexport class ReCaptchaLoaderImpl implements ReCaptchaLoader {\n  private hostLanguage = '';\n  private counter = 0;\n  /**\n   * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\n   * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\n   * `window.grecaptcha.render()` will not. Another load will add it.\n   */\n  private readonly librarySeparatelyLoaded = !!_window().grecaptcha?.render;\n\n  load(auth: AuthInternal, hl = ''): Promise<Recaptcha> {\n    _assert(isHostLanguageValid(hl), auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    if (this.shouldResolveImmediately(hl) && isV2(_window().grecaptcha)) {\n      return Promise.resolve(_window().grecaptcha! as Recaptcha);\n    }\n    return new Promise<Recaptcha>((resolve, reject) => {\n      const networkTimeout = _window().setTimeout(() => {\n        reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n      }, NETWORK_TIMEOUT_DELAY.get());\n\n      _window()[_JSLOAD_CALLBACK] = () => {\n        _window().clearTimeout(networkTimeout);\n        delete _window()[_JSLOAD_CALLBACK];\n\n        const recaptcha = _window().grecaptcha as Recaptcha;\n\n        if (!recaptcha || !isV2(recaptcha)) {\n          reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n          return;\n        }\n\n        // Wrap the greptcha render function so that we know if the developer has\n        // called it separately\n        const render = recaptcha.render;\n        recaptcha.render = (container, params) => {\n          const widgetId = render(container, params);\n          this.counter++;\n          return widgetId;\n        };\n\n        this.hostLanguage = hl;\n        resolve(recaptcha);\n      };\n\n      const url = `${jsHelpers._recaptchaV2ScriptUrl()}?${querystring({\n        onload: _JSLOAD_CALLBACK,\n        render: 'explicit',\n        hl\n      })}`;\n\n      jsHelpers._loadJS(url).catch(() => {\n        clearTimeout(networkTimeout);\n        reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n      });\n    });\n  }\n\n  clearedOneInstance(): void {\n    this.counter--;\n  }\n\n  private shouldResolveImmediately(hl: string): boolean {\n    // We can resolve immediately if:\n    //   • grecaptcha is already defined AND (\n    //     1. the requested language codes are the same OR\n    //     2. there exists already a ReCaptcha on the page\n    //     3. the library was already loaded by the app\n    // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n    // that are already in the page\n    return (\n      !!_window().grecaptcha?.render &&\n      (hl === this.hostLanguage ||\n        this.counter > 0 ||\n        this.librarySeparatelyLoaded)\n    );\n  }\n}\n\nfunction isHostLanguageValid(hl: string): boolean {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\n\nexport class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\n  async load(auth: AuthInternal): Promise<Recaptcha> {\n    return new MockReCaptcha(auth);\n  }\n\n  clearedOneInstance(): void {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, RecaptchaParameters } from '../../model/public_types';\nimport { getRecaptchaParams } from '../../api/authentication/recaptcha';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { _isHttpOrHttps } from '../../core/util/location';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport { _isWorker } from '../util/worker';\nimport { Recaptcha } from './recaptcha';\nimport {\n  MockReCaptchaLoaderImpl,\n  ReCaptchaLoader,\n  ReCaptchaLoaderImpl\n} from './recaptcha_loader';\n\nexport const RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n\nconst DEFAULT_PARAMS: RecaptchaParameters = {\n  theme: 'light',\n  type: 'image'\n};\n\ntype TokenCallback = (token: string) => void;\n\n/**\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\n *\n * @remarks\n * `RecaptchaVerifier` does not work in a Node.js environment.\n *\n * @public\n */\nexport class RecaptchaVerifier implements ApplicationVerifierInternal {\n  /**\n   * The application verifier type.\n   *\n   * @remarks\n   * For a reCAPTCHA verifier, this is 'recaptcha'.\n   */\n  readonly type = RECAPTCHA_VERIFIER_TYPE;\n  private destroyed = false;\n  private widgetId: number | null = null;\n  private readonly container: HTMLElement;\n  private readonly isInvisible: boolean;\n  private readonly tokenChangeListeners = new Set<TokenCallback>();\n  private renderPromise: Promise<number> | null = null;\n  private readonly auth: AuthInternal;\n\n  /** @internal */\n  readonly _recaptchaLoader: ReCaptchaLoader;\n  private recaptcha: Recaptcha | null = null;\n\n  /**\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   *\n   * @param containerOrId - The reCAPTCHA container parameter.\n   *\n   * @remarks\n   * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\n   * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\n   * an element ID. The corresponding element must also must be in the DOM at the time of\n   * initialization.\n   *\n   * @param parameters - The optional reCAPTCHA parameters.\n   *\n   * @remarks\n   * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\n   * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\n   * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\n   * 'invisible'.\n   */\n  constructor(\n    authExtern: Auth,\n    containerOrId: HTMLElement | string,\n    private readonly parameters: RecaptchaParameters = {\n      ...DEFAULT_PARAMS\n    }\n  ) {\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\n      ? new MockReCaptchaLoaderImpl()\n      : new ReCaptchaLoaderImpl();\n\n    this.validateStartingState();\n    // TODO: Figure out if sdk version is needed\n  }\n\n  /**\n   * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\n   *\n   * @returns A Promise for the reCAPTCHA token.\n   */\n  async verify(): Promise<string> {\n    this.assertNotDestroyed();\n    const id = await this.render();\n    const recaptcha = this.getAssertedRecaptcha();\n\n    const response = recaptcha.getResponse(id);\n    if (response) {\n      return response;\n    }\n\n    return new Promise<string>(resolve => {\n      const tokenChange = (token: string): void => {\n        if (!token) {\n          return; // Ignore token expirations.\n        }\n        this.tokenChangeListeners.delete(tokenChange);\n        resolve(token);\n      };\n\n      this.tokenChangeListeners.add(tokenChange);\n      if (this.isInvisible) {\n        recaptcha.execute(id);\n      }\n    });\n  }\n\n  /**\n   * Renders the reCAPTCHA widget on the page.\n   *\n   * @returns A Promise that resolves with the reCAPTCHA widget ID.\n   */\n  render(): Promise<number> {\n    try {\n      this.assertNotDestroyed();\n    } catch (e) {\n      // This method returns a promise. Since it's not async (we want to return the\n      // _same_ promise if rendering is still occurring), the API surface should\n      // reject with the error rather than just throw\n      return Promise.reject(e);\n    }\n\n    if (this.renderPromise) {\n      return this.renderPromise;\n    }\n\n    this.renderPromise = this.makeRenderPromise().catch(e => {\n      this.renderPromise = null;\n      throw e;\n    });\n\n    return this.renderPromise;\n  }\n\n  /** @internal */\n  _reset(): void {\n    this.assertNotDestroyed();\n    if (this.widgetId !== null) {\n      this.getAssertedRecaptcha().reset(this.widgetId);\n    }\n  }\n\n  /**\n   * Clears the reCAPTCHA widget from the page and destroys the instance.\n   */\n  clear(): void {\n    this.assertNotDestroyed();\n    this.destroyed = true;\n    this._recaptchaLoader.clearedOneInstance();\n    if (!this.isInvisible) {\n      this.container.childNodes.forEach(node => {\n        this.container.removeChild(node);\n      });\n    }\n  }\n\n  private validateStartingState(): void {\n    _assert(!this.parameters.sitekey, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n    _assert(\n      this.isInvisible || !this.container.hasChildNodes(),\n      this.auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n  }\n\n  private makeTokenCallback(\n    existing: TokenCallback | string | undefined\n  ): TokenCallback {\n    return token => {\n      this.tokenChangeListeners.forEach(listener => listener(token));\n      if (typeof existing === 'function') {\n        existing(token);\n      } else if (typeof existing === 'string') {\n        const globalFunc = _window()[existing];\n        if (typeof globalFunc === 'function') {\n          globalFunc(token);\n        }\n      }\n    };\n  }\n\n  private assertNotDestroyed(): void {\n    _assert(!this.destroyed, this.auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  private async makeRenderPromise(): Promise<number> {\n    await this.init();\n    if (!this.widgetId) {\n      let container = this.container;\n      if (!this.isInvisible) {\n        const guaranteedEmpty = document.createElement('div');\n        container.appendChild(guaranteedEmpty);\n        container = guaranteedEmpty;\n      }\n\n      this.widgetId = this.getAssertedRecaptcha().render(\n        container,\n        this.parameters\n      );\n    }\n\n    return this.widgetId;\n  }\n\n  private async init(): Promise<void> {\n    _assert(\n      _isHttpOrHttps() && !_isWorker(),\n      this.auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n\n    await domReady();\n    this.recaptcha = await this._recaptchaLoader.load(\n      this.auth,\n      this.auth.languageCode || undefined\n    );\n\n    const siteKey = await getRecaptchaParams(this.auth);\n    _assert(siteKey, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.parameters.sitekey = siteKey;\n  }\n\n  private getAssertedRecaptcha(): Recaptcha {\n    _assert(this.recaptcha, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.recaptcha;\n  }\n}\n\nfunction domReady(): Promise<void> {\n  let resolver: (() => void) | null = null;\n  return new Promise<void>(resolve => {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n\n    // Document not ready, wait for load before resolving.\n    // Save resolver, so we can remove listener in case it was externally\n    // cancelled.\n    resolver = () => resolve();\n    window.addEventListener('load', resolver);\n  }).catch(e => {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n\n    throw e;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApplicationVerifier,\n  Auth,\n  ConfirmationResult,\n  PhoneInfoOptions,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { startEnrollPhoneMfa } from '../../api/account_management/mfa';\nimport { startSignInPhoneMfa } from '../../api/authentication/mfa';\nimport { sendPhoneVerificationCode } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus, _link } from '../../core/user/link_unlink';\nimport {\n  _assert,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  linkWithCredential,\n  reauthenticateWithCredential,\n  signInWithCredential\n} from '../../core/strategies/credential';\nimport {\n  MultiFactorSessionImpl,\n  MultiFactorSessionType\n} from '../../mfa/mfa_session';\nimport { UserInternal } from '../../model/user';\nimport { RECAPTCHA_VERIFIER_TYPE } from '../recaptcha/recaptcha_verifier';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\ninterface OnConfirmationCallback {\n  (credential: PhoneAuthCredential): Promise<UserCredential>;\n}\n\nclass ConfirmationResultImpl implements ConfirmationResult {\n  constructor(\n    readonly verificationId: string,\n    private readonly onConfirmation: OnConfirmationCallback\n  ) {}\n\n  confirm(verificationCode: string): Promise<UserCredential> {\n    const authCredential = PhoneAuthCredential._fromVerification(\n      this.verificationId,\n      verificationCode\n    );\n    return this.onConfirmation(authCredential);\n  }\n}\n\n/**\n * Asynchronously signs in using a phone number.\n *\n * @remarks\n * This method sends a code via SMS to the given\n * phone number, and returns a {@link ConfirmationResult}. After the user\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\n * with the code to sign the user in.\n *\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\n * This function can work on other platforms that do not support the\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\n * third-party {@link ApplicationVerifier} implementation.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n * // Obtain a verificationCode from the user.\n * const credential = await confirmationResult.confirm(verificationCode);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const verificationId = await _verifyPhoneNumber(\n    authInternal,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    signInWithCredential(authInternal, cred)\n  );\n}\n\n/**\n * Links the user account with the given phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function linkWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(false, userInternal, ProviderId.PHONE);\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    linkWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Re-authenticates a user using a fresh phone credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\n *\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function reauthenticateWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    reauthenticateWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\n *\n */\nexport async function _verifyPhoneNumber(\n  auth: AuthInternal,\n  options: PhoneInfoOptions | string,\n  verifier: ApplicationVerifierInternal\n): Promise<string> {\n  const recaptchaToken = await verifier.verify();\n\n  try {\n    _assert(\n      typeof recaptchaToken === 'string',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      verifier.type === RECAPTCHA_VERIFIER_TYPE,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n\n    let phoneInfoOptions: PhoneInfoOptions;\n\n    if (typeof options === 'string') {\n      phoneInfoOptions = {\n        phoneNumber: options\n      };\n    } else {\n      phoneInfoOptions = options;\n    }\n\n    if ('session' in phoneInfoOptions) {\n      const session = phoneInfoOptions.session as MultiFactorSessionImpl;\n\n      if ('phoneNumber' in phoneInfoOptions) {\n        _assert(\n          session.type === MultiFactorSessionType.ENROLL,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const response = await startEnrollPhoneMfa(auth, {\n          idToken: session.credential,\n          phoneEnrollmentInfo: {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken\n          }\n        });\n        return response.phoneSessionInfo.sessionInfo;\n      } else {\n        _assert(\n          session.type === MultiFactorSessionType.SIGN_IN,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const mfaEnrollmentId =\n          phoneInfoOptions.multiFactorHint?.uid ||\n          phoneInfoOptions.multiFactorUid;\n        _assert(mfaEnrollmentId, auth, AuthErrorCode.MISSING_MFA_INFO);\n        const response = await startSignInPhoneMfa(auth, {\n          mfaPendingCredential: session.credential,\n          mfaEnrollmentId,\n          phoneSignInInfo: {\n            recaptchaToken\n          }\n        });\n        return response.phoneResponseInfo.sessionInfo;\n      }\n    } else {\n      const { sessionInfo } = await sendPhoneVerificationCode(auth, {\n        phoneNumber: phoneInfoOptions.phoneNumber,\n        recaptchaToken\n      });\n      return sessionInfo;\n    }\n  } finally {\n    verifier._reset();\n  }\n}\n\n/**\n * Updates the user's phone number.\n *\n * @remarks\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * await updatePhoneNumber(user, phoneCredential);\n * ```\n *\n * @param user - The user.\n * @param credential - A credential authenticating the new phone number.\n *\n * @public\n */\nexport async function updatePhoneNumber(\n  user: User,\n  credential: PhoneAuthCredential\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  await _link(userInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  PhoneInfoOptions,\n  ApplicationVerifier,\n  UserCredential\n} from '../../model/public_types';\n\nimport { SignInWithPhoneNumberResponse } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal as ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal as AuthInternal } from '../../model/auth';\nimport { UserCredentialInternal as UserCredentialInternal } from '../../model/user';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { _verifyPhoneNumber } from '../strategies/phone';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthCredential } from '../../core';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link PhoneAuthCredential}.\n *\n * @remarks\n * `PhoneAuthProvider` does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * const userCredential = await signInWithCredential(auth, phoneCredential);\n * ```\n *\n * @public\n */\nexport class PhoneAuthProvider {\n  /** Always set to {@link ProviderId}.PHONE. */\n  static readonly PROVIDER_ID: 'phone' = ProviderId.PHONE;\n  /** Always set to {@link SignInMethod}.PHONE. */\n  static readonly PHONE_SIGN_IN_METHOD: 'phone' = SignInMethod.PHONE;\n\n  /** Always set to {@link ProviderId}.PHONE. */\n  readonly providerId = PhoneAuthProvider.PROVIDER_ID;\n  private readonly auth: AuthInternal;\n\n  /**\n   * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\n   *\n   */\n  constructor(auth: Auth) {\n    this.auth = _castAuth(auth);\n  }\n\n  /**\n   *\n   * Starts a phone number authentication flow by sending a verification code to the given phone\n   * number.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\n   * E.164 format (e.g. +16505550101).\n   * @param applicationVerifier - For abuse prevention, this method also requires a\n   * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\n   * {@link RecaptchaVerifier}.\n   *\n   * @returns A Promise for a verification ID that can be passed to\n   * {@link PhoneAuthProvider.credential} to identify this flow..\n   */\n  verifyPhoneNumber(\n    phoneOptions: PhoneInfoOptions | string,\n    applicationVerifier: ApplicationVerifier\n  ): Promise<string> {\n    return _verifyPhoneNumber(\n      this.auth,\n      phoneOptions,\n      getModularInstance(applicationVerifier as ApplicationVerifierInternal)\n    );\n  }\n\n  /**\n   * Creates a phone auth credential, given the verification ID from\n   * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\n   * mobile device.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = await confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\n   * @param verificationCode - The verification code sent to the user's mobile device.\n   *\n   * @returns The auth provider credential.\n   */\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return PhoneAuthCredential._fromVerification(\n      verificationId,\n      verificationCode\n    );\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential}.\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    const credential = userCredential as UserCredentialInternal;\n    return PhoneAuthProvider.credentialFromTaggedObject(credential);\n  }\n\n  /**\n   * Returns an {@link AuthCredential} when passed an error.\n   *\n   * @remarks\n   *\n   * This method works for errors like\n   * `auth/account-exists-with-different-credentials`. This is useful for\n   * recovering when attempting to set a user's phone number but the number\n   * in question is already tied to another account. For example, the following\n   * code tries to update the current user's phone number, and if that\n   * fails, links the user with the account associated with that number:\n   *\n   * ```js\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(number, verifier);\n   * try {\n   *   const code = ''; // Prompt the user for the verification code\n   *   await updatePhoneNumber(\n   *       auth.currentUser,\n   *       PhoneAuthProvider.credential(verificationId, code));\n   * } catch (e) {\n   *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\n   *     const cred = PhoneAuthProvider.credentialFromError(e);\n   *     await linkWithCredential(auth.currentUser, cred);\n   *   }\n   * }\n   *\n   * // At this point, auth.currentUser.phoneNumber === number.\n   * ```\n   *\n   * @param error - The error to generate a credential from.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return PhoneAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): AuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { phoneNumber, temporaryProof } =\n      tokenResponse as SignInWithPhoneNumberResponse;\n    if (phoneNumber && temporaryProof) {\n      return PhoneAuthCredential._fromTokenResponse(\n        phoneNumber,\n        temporaryProof\n      );\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopupRedirectResolver } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { _getInstance } from './instantiator';\n\n/**\n * Chooses a popup/redirect resolver to use. This prefers the override (which\n * is directly passed in), and falls back to the property set on the auth\n * object. If neither are available, this function errors w/ an argument error.\n */\nexport function _withDefaultResolver(\n  auth: AuthInternal,\n  resolverOverride: PopupRedirectResolver | undefined\n): PopupRedirectResolverInternal {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n\n  _assert(auth._popupRedirectResolver, auth, AuthErrorCode.ARGUMENT_ERROR);\n\n  return auth._popupRedirectResolver;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _link as _linkUser } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { _assert } from '../util/assert';\nimport { _signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { ProviderId } from '../../model/enums';\n\nexport interface IdpTaskParams {\n  auth: AuthInternal;\n  requestUri: string;\n  sessionId?: string;\n  tenantId?: string;\n  postBody?: string;\n  pendingToken?: string;\n  user?: UserInternal;\n  bypassAuthState?: boolean;\n}\n\nexport type IdpTask = (\n  params: IdpTaskParams\n) => Promise<UserCredentialInternal>;\n\nclass IdpCredential extends AuthCredential {\n  constructor(readonly params: IdpTaskParams) {\n    super(ProviderId.CUSTOM, ProviderId.CUSTOM);\n  }\n\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest(idToken));\n  }\n\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  private _buildIdpRequest(idToken?: string): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: this.params.requestUri,\n      sessionId: this.params.sessionId,\n      postBody: this.params.postBody,\n      tenantId: this.params.tenantId,\n      pendingToken: this.params.pendingToken,\n      returnSecureToken: true,\n      returnIdpCredential: true\n    };\n\n    if (idToken) {\n      request.idToken = idToken;\n    }\n\n    return request;\n  }\n}\n\nexport function _signIn(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  return _signInWithCredential(\n    params.auth,\n    new IdpCredential(params),\n    params.bypassAuthState\n  ) as Promise<UserCredentialInternal>;\n}\n\nexport function _reauth(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _reauthenticate(\n    user,\n    new IdpCredential(params),\n    params.bypassAuthState\n  );\n}\n\nexport async function _link(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _linkUser(user, new IdpCredential(params), params.bypassAuthState);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { debugAssert, _fail } from '../util/assert';\nimport {\n  _link,\n  _reauth,\n  _signIn,\n  IdpTask,\n  IdpTaskParams\n} from '../strategies/idp';\nimport { AuthInternal } from '../../model/auth';\n\ninterface PendingPromise {\n  resolve: (cred: UserCredentialInternal | null) => void;\n  reject: (error: Error) => void;\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n */\nexport abstract class AbstractPopupRedirectOperation\n  implements AuthEventConsumer\n{\n  private pendingPromise: PendingPromise | null = null;\n  private eventManager: EventManager | null = null;\n  readonly filter: AuthEventType[];\n\n  abstract eventId: string | null;\n\n  constructor(\n    protected readonly auth: AuthInternal,\n    filter: AuthEventType | AuthEventType[],\n    protected readonly resolver: PopupRedirectResolverInternal,\n    protected user?: UserInternal,\n    protected readonly bypassAuthState = false\n  ) {\n    this.filter = Array.isArray(filter) ? filter : [filter];\n  }\n\n  abstract onExecution(): Promise<void>;\n\n  execute(): Promise<UserCredentialInternal | null> {\n    return new Promise<UserCredentialInternal | null>(\n      async (resolve, reject) => {\n        this.pendingPromise = { resolve, reject };\n\n        try {\n          this.eventManager = await this.resolver._initialize(this.auth);\n          await this.onExecution();\n          this.eventManager.registerConsumer(this);\n        } catch (e) {\n          this.reject(e as Error);\n        }\n      }\n    );\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\n    if (error) {\n      this.reject(error);\n      return;\n    }\n\n    const params: IdpTaskParams = {\n      auth: this.auth,\n      requestUri: urlResponse!,\n      sessionId: sessionId!,\n      tenantId: tenantId || undefined,\n      postBody: postBody || undefined,\n      user: this.user,\n      bypassAuthState: this.bypassAuthState\n    };\n\n    try {\n      this.resolve(await this.getIdpTask(type)(params));\n    } catch (e) {\n      this.reject(e as Error);\n    }\n  }\n\n  onError(error: FirebaseError): void {\n    this.reject(error);\n  }\n\n  private getIdpTask(type: AuthEventType): IdpTask {\n    switch (type) {\n      case AuthEventType.SIGN_IN_VIA_POPUP:\n      case AuthEventType.SIGN_IN_VIA_REDIRECT:\n        return _signIn;\n      case AuthEventType.LINK_VIA_POPUP:\n      case AuthEventType.LINK_VIA_REDIRECT:\n        return _link;\n      case AuthEventType.REAUTH_VIA_POPUP:\n      case AuthEventType.REAUTH_VIA_REDIRECT:\n        return _reauth;\n      default:\n        _fail(this.auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  protected resolve(cred: UserCredentialInternal | null): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.resolve(cred);\n    this.unregisterAndCleanUp();\n  }\n\n  protected reject(error: Error): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.reject(error);\n    this.unregisterAndCleanUp();\n  }\n\n  private unregisterAndCleanUp(): void {\n    if (this.eventManager) {\n      this.eventManager.unregisterConsumer(this);\n    }\n\n    this.pendingPromise = null;\n    this.cleanUp();\n  }\n\n  abstract cleanUp(): void;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _assert,\n  debugAssert,\n  _createError,\n  _assertInstanceOf\n} from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport { AuthPopup } from '../util/popup';\nimport { AbstractPopupRedirectOperation } from '../../core/strategies/abstract_popup_redirect_operation';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/*\n * The event timeout is the same on mobile and desktop, no need for Delay. Set this to 8s since\n * blocking functions can take upto 7s to complete sign in, as documented in:\n * https://cloud.google.com/identity-platform/docs/blocking-functions#understanding_blocking_functions\n * https://firebase.google.com/docs/auth/extend-with-blocking-functions#understanding_blocking_functions\n */\nexport const enum _Timeout {\n  AUTH_EVENT = 8000\n}\nexport const _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\n\n/**\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n *\n * @remarks\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\n * unsuccessful, returns an error object containing additional information about the error.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function signInWithPopup(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _createError(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  const action = new PopupOperation(\n    authInternal,\n    AuthEventType.SIGN_IN_VIA_POPUP,\n    provider,\n    resolverInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\n * OAuth flow.\n *\n * @remarks\n * If the reauthentication is successful, the returned result will contain the user and the\n * provider's credential.\n *\n * This method does not work in a Node.js environment or on any {@link User} signed in by\n * {@link Auth} instances created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n * // Reauthenticate using a popup.\n * await reauthenticateWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function reauthenticateWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _createError(userInternal.auth, AuthErrorCode.OPERATION_NOT_SUPPORTED)\n    );\n  }\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.REAUTH_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n *\n * @remarks\n * If the linking is successful, the returned result will contain the user and the provider's credential.\n *\n * This method does not work in a Node.js environment.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a popup.\n * const provider = new FacebookAuthProvider();\n * await linkWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function linkWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.LINK_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n *\n */\nclass PopupOperation extends AbstractPopupRedirectOperation {\n  // Only one popup is ever shown at once. The lifecycle of the current popup\n  // can be managed / cancelled by the constructor.\n  private static currentPopupAction: PopupOperation | null = null;\n  private authWindow: AuthPopup | null = null;\n  private pollId: number | null = null;\n\n  constructor(\n    auth: AuthInternal,\n    filter: AuthEventType,\n    private readonly provider: AuthProvider,\n    resolver: PopupRedirectResolverInternal,\n    user?: UserInternal\n  ) {\n    super(auth, filter, resolver, user);\n    if (PopupOperation.currentPopupAction) {\n      PopupOperation.currentPopupAction.cancel();\n    }\n\n    PopupOperation.currentPopupAction = this;\n  }\n\n  async executeNotNull(): Promise<UserCredential> {\n    const result = await this.execute();\n    _assert(result, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return result;\n  }\n\n  async onExecution(): Promise<void> {\n    debugAssert(\n      this.filter.length === 1,\n      'Popup operations only handle one event'\n    );\n    const eventId = _generateEventId();\n    this.authWindow = await this.resolver._openPopup(\n      this.auth,\n      this.provider,\n      this.filter[0], // There's always one, see constructor\n      eventId\n    );\n    this.authWindow.associatedEvent = eventId;\n\n    // Check for web storage support and origin validation _after_ the popup is\n    // loaded. These operations are slow (~1 second or so) Rather than\n    // waiting on them before opening the window, optimistically open the popup\n    // and check for storage support at the same time. If storage support is\n    // not available, this will cause the whole thing to reject properly. It\n    // will also close the popup, but since the promise has already rejected,\n    // the popup closed by user poll will reject into the void.\n    this.resolver._originValidation(this.auth).catch(e => {\n      this.reject(e);\n    });\n\n    this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\n      if (!isSupported) {\n        this.reject(\n          _createError(this.auth, AuthErrorCode.WEB_STORAGE_UNSUPPORTED)\n        );\n      }\n    });\n\n    // Handle user closure. Notice this does *not* use await\n    this.pollUserCancellation();\n  }\n\n  get eventId(): string | null {\n    return this.authWindow?.associatedEvent || null;\n  }\n\n  cancel(): void {\n    this.reject(_createError(this.auth, AuthErrorCode.EXPIRED_POPUP_REQUEST));\n  }\n\n  cleanUp(): void {\n    if (this.authWindow) {\n      this.authWindow.close();\n    }\n\n    if (this.pollId) {\n      window.clearTimeout(this.pollId);\n    }\n\n    this.authWindow = null;\n    this.pollId = null;\n    PopupOperation.currentPopupAction = null;\n  }\n\n  private pollUserCancellation(): void {\n    const poll = (): void => {\n      if (this.authWindow?.window?.closed) {\n        // Make sure that there is sufficient time for whatever action to\n        // complete. The window could have closed but the sign in network\n        // call could still be in flight. This is specifically true for\n        // Firefox or if the opener is in an iframe, in which case the oauth\n        // helper closes the popup.\n        this.pollId = window.setTimeout(() => {\n          this.pollId = null;\n          this.reject(\n            _createError(this.auth, AuthErrorCode.POPUP_CLOSED_BY_USER)\n          );\n        }, _Timeout.AUTH_EVENT);\n        return;\n      }\n\n      this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\n    };\n\n    poll();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserCredentialInternal } from '../../model/user';\nimport { PersistenceInternal } from '../persistence';\nimport { _persistenceKeyName } from '../persistence/persistence_user_manager';\nimport { _getInstance } from '../util/instantiator';\nimport { AbstractPopupRedirectOperation } from './abstract_popup_redirect_operation';\n\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\n\n// We only get one redirect outcome for any one auth, so just store it\n// in here.\nconst redirectOutcomeMap: Map<\n  string,\n  () => Promise<UserCredentialInternal | null>\n> = new Map();\n\nexport class RedirectAction extends AbstractPopupRedirectOperation {\n  eventId = null;\n\n  constructor(\n    auth: AuthInternal,\n    resolver: PopupRedirectResolverInternal,\n    bypassAuthState = false\n  ) {\n    super(\n      auth,\n      [\n        AuthEventType.SIGN_IN_VIA_REDIRECT,\n        AuthEventType.LINK_VIA_REDIRECT,\n        AuthEventType.REAUTH_VIA_REDIRECT,\n        AuthEventType.UNKNOWN\n      ],\n      resolver,\n      undefined,\n      bypassAuthState\n    );\n  }\n\n  /**\n   * Override the execute function; if we already have a redirect result, then\n   * just return it.\n   */\n  async execute(): Promise<UserCredentialInternal | null> {\n    let readyOutcome = redirectOutcomeMap.get(this.auth._key());\n    if (!readyOutcome) {\n      try {\n        const hasPendingRedirect = await _getAndClearPendingRedirectStatus(\n          this.resolver,\n          this.auth\n        );\n        const result = hasPendingRedirect ? await super.execute() : null;\n        readyOutcome = () => Promise.resolve(result);\n      } catch (e) {\n        readyOutcome = () => Promise.reject(e);\n      }\n\n      redirectOutcomeMap.set(this.auth._key(), readyOutcome);\n    }\n\n    // If we're not bypassing auth state, the ready outcome should be set to\n    // null.\n    if (!this.bypassAuthState) {\n      redirectOutcomeMap.set(this.auth._key(), () => Promise.resolve(null));\n    }\n\n    return readyOutcome();\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    if (event.type === AuthEventType.SIGN_IN_VIA_REDIRECT) {\n      return super.onAuthEvent(event);\n    } else if (event.type === AuthEventType.UNKNOWN) {\n      // This is a sentinel value indicating there's no pending redirect\n      this.resolve(null);\n      return;\n    }\n\n    if (event.eventId) {\n      const user = await this.auth._redirectUserForId(event.eventId);\n      if (user) {\n        this.user = user;\n        return super.onAuthEvent(event);\n      } else {\n        this.resolve(null);\n      }\n    }\n  }\n\n  async onExecution(): Promise<void> {}\n\n  cleanUp(): void {}\n}\n\nexport async function _getAndClearPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<boolean> {\n  const key = pendingRedirectKey(auth);\n  const persistence = resolverPersistence(resolver);\n  if (!(await persistence._isAvailable())) {\n    return false;\n  }\n  const hasPendingRedirect = (await persistence._get(key)) === 'true';\n  await persistence._remove(key);\n  return hasPendingRedirect;\n}\n\nexport async function _setPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<void> {\n  return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\n}\n\nexport function _clearRedirectOutcomes(): void {\n  redirectOutcomeMap.clear();\n}\n\nexport function _overrideRedirectResult(\n  auth: AuthInternal,\n  result: () => Promise<UserCredentialInternal | null>\n): void {\n  redirectOutcomeMap.set(auth._key(), result);\n}\n\nfunction resolverPersistence(\n  resolver: PopupRedirectResolverInternal\n): PersistenceInternal {\n  return _getInstance(resolver._redirectPersistence);\n}\n\nfunction pendingRedirectKey(auth: AuthInternal): string {\n  return _persistenceKeyName(\n    PENDING_REDIRECT_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { _assertLinkedStatus } from '../../core/user/link_unlink';\nimport {\n  _assertInstanceOf,\n  _serverAppCurrentUserOperationNotSupportedError\n} from '../../core/util/assert';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport {\n  RedirectAction,\n  _setPendingRedirectStatus\n} from '../../core/strategies/redirect';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\nimport { _isFirebaseServerApp } from '@firebase/app';\n\n/**\n * Authenticates a Firebase client using a full-page redirect flow.\n *\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link signInWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _signInWithRedirect(auth, provider, resolver) as Promise<never>;\n}\n\nexport async function _signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await authInternal._initializationPromise;\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  await _setPendingRedirectStatus(resolverInternal, authInternal);\n\n  return resolverInternal._openRedirect(\n    authInternal,\n    provider,\n    AuthEventType.SIGN_IN_VIA_REDIRECT\n  );\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link reauthenticateWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * // Reauthenticate using a redirect.\n * await reauthenticateWithRedirect(result.user, provider);\n * // This will again trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _reauthenticateWithRedirect(\n    user,\n    provider,\n    resolver\n  ) as Promise<never>;\n}\nexport async function _reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  if (_isFirebaseServerApp(userInternal.auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(userInternal.auth)\n    );\n  }\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.REAUTH_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n * Follow the {@link https://firebase.google.com/docs/auth/web/redirect-best-practices\n * | best practices} when using {@link linkWithRedirect}.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances\n * created with a {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a redirect.\n * const provider = new FacebookAuthProvider();\n * await linkWithRedirect(result.user, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _linkWithRedirect(user, provider, resolver) as Promise<never>;\n}\nexport async function _linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Wait for auth initialization to complete, this will process pending redirects and clear the\n  // PENDING_REDIRECT_KEY in persistence. This should be completed before starting a new\n  // redirect and creating a PENDING_REDIRECT_KEY entry.\n  await userInternal.auth._initializationPromise;\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _assertLinkedStatus(false, userInternal, provider.providerId);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.LINK_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\n *\n * @remarks\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\n * error. If no redirect operation was called, returns `null`.\n *\n * This method does not work in a Node.js environment or with {@link Auth} instances created with a\n * {@link @firebase/app#FirebaseServerApp}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function getRedirectResult(\n  auth: Auth,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential | null> {\n  await _castAuth(auth)._initializationPromise;\n  return _getRedirectResult(auth, resolver, false);\n}\n\nexport async function _getRedirectResult(\n  auth: Auth,\n  resolverExtern?: PopupRedirectResolver,\n  bypassAuthState = false\n): Promise<UserCredential | null> {\n  if (_isFirebaseServerApp(auth.app)) {\n    return Promise.reject(\n      _serverAppCurrentUserOperationNotSupportedError(auth)\n    );\n  }\n  const authInternal = _castAuth(auth);\n  const resolver = _withDefaultResolver(authInternal, resolverExtern);\n  const action = new RedirectAction(authInternal, resolver, bypassAuthState);\n  const result = await action.execute();\n\n  if (result && !bypassAuthState) {\n    delete result.user._redirectEventId;\n    await authInternal._persistUserIfCurrent(result.user as UserInternal);\n    await authInternal._setRedirectUser(null, resolverExtern);\n  }\n\n  return result;\n}\n\nasync function prepareUserForRedirect(user: UserInternal): Promise<string> {\n  const eventId = _generateEventId(`${user.uid}:::`);\n  user._redirectEventId = eventId;\n  await user.auth._setRedirectUser(user);\n  await user.auth._persistUserIfCurrent(user);\n  return eventId;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager\n} from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { AuthInternal } from '../../model/auth';\nimport { _createError } from '../util/assert';\n\n// The amount of time to store the UIDs of seen events; this is\n// set to 10 min by default\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\n\nexport class AuthEventManager implements EventManager {\n  private readonly cachedEventUids: Set<string> = new Set();\n  private readonly consumers: Set<AuthEventConsumer> = new Set();\n  protected queuedRedirectEvent: AuthEvent | null = null;\n  protected hasHandledPotentialRedirect = false;\n  private lastProcessedEventTime = Date.now();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  registerConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.add(authEventConsumer);\n\n    if (\n      this.queuedRedirectEvent &&\n      this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)\n    ) {\n      this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\n      this.saveEventToCache(this.queuedRedirectEvent);\n      this.queuedRedirectEvent = null;\n    }\n  }\n\n  unregisterConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.delete(authEventConsumer);\n  }\n\n  onEvent(event: AuthEvent): boolean {\n    // Check if the event has already been handled\n    if (this.hasEventBeenHandled(event)) {\n      return false;\n    }\n\n    let handled = false;\n    this.consumers.forEach(consumer => {\n      if (this.isEventForConsumer(event, consumer)) {\n        handled = true;\n        this.sendToConsumer(event, consumer);\n        this.saveEventToCache(event);\n      }\n    });\n\n    if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\n      // If we've already seen a redirect before, or this is a popup event,\n      // bail now\n      return handled;\n    }\n\n    this.hasHandledPotentialRedirect = true;\n\n    // If the redirect wasn't handled, hang on to it\n    if (!handled) {\n      this.queuedRedirectEvent = event;\n      handled = true;\n    }\n\n    return handled;\n  }\n\n  private sendToConsumer(event: AuthEvent, consumer: AuthEventConsumer): void {\n    if (event.error && !isNullRedirectEvent(event)) {\n      const code =\n        (event.error.code?.split('auth/')[1] as AuthErrorCode) ||\n        AuthErrorCode.INTERNAL_ERROR;\n      consumer.onError(_createError(this.auth, code));\n    } else {\n      consumer.onAuthEvent(event);\n    }\n  }\n\n  private isEventForConsumer(\n    event: AuthEvent,\n    consumer: AuthEventConsumer\n  ): boolean {\n    const eventIdMatches =\n      consumer.eventId === null ||\n      (!!event.eventId && event.eventId === consumer.eventId);\n    return consumer.filter.includes(event.type) && eventIdMatches;\n  }\n\n  private hasEventBeenHandled(event: AuthEvent): boolean {\n    if (\n      Date.now() - this.lastProcessedEventTime >=\n      EVENT_DUPLICATION_CACHE_DURATION_MS\n    ) {\n      this.cachedEventUids.clear();\n    }\n\n    return this.cachedEventUids.has(eventUid(event));\n  }\n\n  private saveEventToCache(event: AuthEvent): void {\n    this.cachedEventUids.add(eventUid(event));\n    this.lastProcessedEventTime = Date.now();\n  }\n}\n\nfunction eventUid(e: AuthEvent): string {\n  return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\n}\n\nfunction isNullRedirectEvent({ type, error }: AuthEvent): boolean {\n  return (\n    type === AuthEventType.UNKNOWN &&\n    error?.code === `auth/${AuthErrorCode.NO_AUTH_EVENT}`\n  );\n}\n\nfunction isRedirectEvent(event: AuthEvent): boolean {\n  switch (event.type) {\n    case AuthEventType.SIGN_IN_VIA_REDIRECT:\n    case AuthEventType.LINK_VIA_REDIRECT:\n    case AuthEventType.REAUTH_VIA_REDIRECT:\n      return true;\n    case AuthEventType.UNKNOWN:\n      return isNullRedirectEvent(event);\n    default:\n      return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _performApiRequest, Endpoint, HttpMethod } from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface GetProjectConfigRequest {\n  androidPackageName?: string;\n  iosBundleId?: string;\n}\n\nexport interface GetProjectConfigResponse {\n  authorizedDomains: string[];\n}\n\nexport async function _getProjectConfig(\n  auth: Auth,\n  request: GetProjectConfigRequest = {}\n): Promise<GetProjectConfigResponse> {\n  return _performApiRequest<GetProjectConfigRequest, GetProjectConfigResponse>(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PROJECT_CONFIG,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProjectConfig } from '../../api/project_config/get_project_config';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from './assert';\nimport { _getCurrentUrl } from './location';\n\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nconst HTTP_REGEX = /^https?/;\n\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  // Skip origin validation if we are in an emulated environment\n  if (auth.config.emulator) {\n    return;\n  }\n\n  const { authorizedDomains } = await _getProjectConfig(auth);\n\n  for (const domain of authorizedDomains) {\n    try {\n      if (matchDomain(domain)) {\n        return;\n      }\n    } catch {\n      // Do nothing if there's a URL error; just continue searching\n    }\n  }\n\n  // In the old SDK, this error also provides helpful messages.\n  _fail(auth, AuthErrorCode.INVALID_ORIGIN);\n}\n\nfunction matchDomain(expected: string): boolean {\n  const currentUrl = _getCurrentUrl();\n  const { protocol, hostname } = new URL(currentUrl);\n  if (expected.startsWith('chrome-extension://')) {\n    const ceUrl = new URL(expected);\n\n    if (ceUrl.hostname === '' && hostname === '') {\n      // For some reason we're not parsing chrome URLs properly\n      return (\n        protocol === 'chrome-extension:' &&\n        expected.replace('chrome-extension://', '') ===\n          currentUrl.replace('chrome-extension://', '')\n      );\n    }\n\n    return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\n  }\n\n  if (!HTTP_REGEX.test(protocol)) {\n    return false;\n  }\n\n  if (IP_ADDRESS_REGEX.test(expected)) {\n    // The domain has to be exactly equal to the pattern, as an IP domain will\n    // only contain the IP, no extra character.\n    return hostname === expected;\n  }\n\n  // Dots in pattern should be escaped.\n  const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\n  // Non ip address domains.\n  // domain.com = *.domain.com OR domain.com\n  const re = new RegExp(\n    '^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$',\n    'i'\n  );\n  return re.test(hostname);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as js from '../load_js';\n\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfunction resetUnloadedGapiModules(): void {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  const beacon = _window().___jsl;\n  // Get current hint.\n  if (beacon?.H) {\n    // Get gapi hint.\n    for (const hint of Object.keys(beacon.H)) {\n      // Requested modules.\n      beacon.H[hint].r = beacon.H[hint].r || [];\n      // Loaded modules.\n      beacon.H[hint].L = beacon.H[hint].L || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon.H[hint].r = [...beacon.H[hint].L];\n      // Clear pending callbacks.\n      if (beacon.CP) {\n        for (let i = 0; i < beacon.CP.length; i++) {\n          // Remove all failed pending callbacks.\n          beacon.CP[i] = null;\n        }\n      }\n    }\n  }\n}\n\nfunction loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  return new Promise<gapi.iframes.Context>((resolve, reject) => {\n    // Function to run when gapi.load is ready.\n    function loadGapiIframe(): void {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      resetUnloadedGapiModules();\n      gapi.load('gapi.iframes', {\n        callback: () => {\n          resolve(gapi.iframes.getContext());\n        },\n        ontimeout: () => {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          resetUnloadedGapiModules();\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        },\n        timeout: NETWORK_TIMEOUT.get()\n      });\n    }\n\n    if (_window().gapi?.iframes?.Iframe) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve(gapi.iframes.getContext());\n    } else if (!!_window().gapi?.load) {\n      // Gapi loader ready, load gapi.iframes.\n      loadGapiIframe();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      const cbName = js._generateCallbackName('iframefcb');\n      // GApi loader not available, dynamically load platform.js.\n      _window()[cbName] = () => {\n        // GApi loader should be ready.\n        if (!!gapi.load) {\n          loadGapiIframe();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        }\n      };\n      // Load GApi loader.\n      return js\n        ._loadJS(`${js._gapiScriptUrl()}?onload=${cbName}`)\n        .catch(e => reject(e));\n    }\n  }).catch(error => {\n    // Reset cached promise to allow for retrial.\n    cachedGApiLoader = null;\n    throw error;\n  });\n}\n\nlet cachedGApiLoader: Promise<gapi.iframes.Context> | null = null;\nexport function _loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\n  return cachedGApiLoader;\n}\n\nexport function _resetLoader(): void {\n  cachedGApiLoader = null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { querystring } from '@firebase/util';\nimport { DefaultConfig } from '../../../internal';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _emulatorUrl } from '../../core/util/emulator';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as gapiLoader from './gapi';\n\nconst PING_TIMEOUT = new Delay(5000, 15000);\nconst IFRAME_PATH = '__/auth/iframe';\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\n\nconst IFRAME_ATTRIBUTES = {\n  style: {\n    position: 'absolute',\n    top: '-100px',\n    width: '1px',\n    height: '1px'\n  },\n  'aria-hidden': 'true',\n  tabindex: '-1'\n};\n\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\nconst EID_FROM_APIHOST = new Map([\n  [DefaultConfig.API_HOST, 'p'], // production\n  ['staging-identitytoolkit.sandbox.googleapis.com', 's'], // staging\n  ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\n]);\n\nfunction getIframeUrl(auth: AuthInternal): string {\n  const config = auth.config;\n  _assert(config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  const url = config.emulator\n    ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\n    : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\n\n  const params: Record<string, string> = {\n    apiKey: config.apiKey,\n    appName: auth.name,\n    v: SDK_VERSION\n  };\n  const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\n  if (eid) {\n    params.eid = eid;\n  }\n  const frameworks = auth._getFrameworks();\n  if (frameworks.length) {\n    params.fw = frameworks.join(',');\n  }\n  return `${url}?${querystring(params).slice(1)}`;\n}\n\nexport async function _openIframe(\n  auth: AuthInternal\n): Promise<gapi.iframes.Iframe> {\n  const context = await gapiLoader._loadGapi(auth);\n  const gapi = _window().gapi;\n  _assert(gapi, auth, AuthErrorCode.INTERNAL_ERROR);\n  return context.open(\n    {\n      where: document.body,\n      url: getIframeUrl(auth),\n      messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\n      attributes: IFRAME_ATTRIBUTES,\n      dontclear: true\n    },\n    (iframe: gapi.iframes.Iframe) =>\n      new Promise(async (resolve, reject) => {\n        await iframe.restyle({\n          // Prevent iframe from closing on mouse out.\n          setHideOnLeave: false\n        });\n\n        const networkError = _createError(\n          auth,\n          AuthErrorCode.NETWORK_REQUEST_FAILED\n        );\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        const networkErrorTimer = _window().setTimeout(() => {\n          reject(networkError);\n        }, PING_TIMEOUT.get());\n        // Clear timer and resolve pending iframe ready promise.\n        function clearTimerAndResolve(): void {\n          _window().clearTimeout(networkErrorTimer);\n          resolve(iframe);\n        }\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\n          reject(networkError);\n        });\n      })\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport {\n  _isChromeIOS,\n  _isFirefox,\n  _isIOSStandalone\n} from '../../core/util/browser';\nimport { AuthInternal } from '../../model/auth';\n\nconst BASE_POPUP_OPTIONS = {\n  location: 'yes',\n  resizable: 'yes',\n  statusbar: 'yes',\n  toolbar: 'no'\n};\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = 600;\nconst TARGET_BLANK = '_blank';\n\nconst FIREFOX_EMPTY_URL = 'http://localhost';\n\nexport class AuthPopup {\n  associatedEvent: string | null = null;\n\n  constructor(readonly window: Window | null) {}\n\n  close(): void {\n    if (this.window) {\n      try {\n        this.window.close();\n      } catch (e) {}\n    }\n  }\n}\n\nexport function _open(\n  auth: AuthInternal,\n  url?: string,\n  name?: string,\n  width = DEFAULT_WIDTH,\n  height = DEFAULT_HEIGHT\n): AuthPopup {\n  const top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\n  const left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\n  let target = '';\n\n  const options: { [key: string]: string } = {\n    ...BASE_POPUP_OPTIONS,\n    width: width.toString(),\n    height: height.toString(),\n    top,\n    left\n  };\n\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  const ua = getUA().toLowerCase();\n\n  if (name) {\n    target = _isChromeIOS(ua) ? TARGET_BLANK : name;\n  }\n\n  if (_isFirefox(ua)) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    url = url || FIREFOX_EMPTY_URL;\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options.scrollbars = 'yes';\n  }\n\n  const optionsString = Object.entries(options).reduce(\n    (accum, [key, value]) => `${accum}${key}=${value},`,\n    ''\n  );\n\n  if (_isIOSStandalone(ua) && target !== '_self') {\n    openAsNewWindowIOS(url || '', target);\n    return new AuthPopup(null);\n  }\n\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  const newWin = window.open(url || '', target, optionsString);\n  _assert(newWin, auth, AuthErrorCode.POPUP_BLOCKED);\n\n  // Flaky on IE edge, encapsulate with a try and catch.\n  try {\n    newWin.focus();\n  } catch (e) {}\n\n  return new AuthPopup(newWin);\n}\n\nfunction openAsNewWindowIOS(url: string, target: string): void {\n  const el = document.createElement('a');\n  el.href = url;\n  el.target = target;\n  const click = document.createEvent('MouseEvent');\n  click.initMouseEvent(\n    'click',\n    true,\n    true,\n    window,\n    1,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    1,\n    null\n  );\n  el.dispatchEvent(click);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { AuthProvider } from '../../model/public_types';\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { isEmpty, querystring } from '@firebase/util';\nimport { _emulatorUrl } from './emulator';\nimport { FederatedAuthProvider } from '../providers/federated';\nimport { BaseOAuthProvider } from '../providers/oauth';\n\n/**\n * URL for Authentication widget which will initiate the OAuth handshake\n *\n * @internal\n */\nconst WIDGET_PATH = '__/auth/handler';\n\n/**\n * URL for emulated environment\n *\n * @internal\n */\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\n\n/**\n * Fragment name for the App Check token that gets passed to the widget\n *\n * @internal\n */\nconst FIREBASE_APP_CHECK_FRAGMENT_ID = encodeURIComponent('fac');\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype WidgetParams = {\n  apiKey: ApiKey;\n  appName: AppName;\n  authType: AuthEventType;\n  redirectUrl?: string;\n  v: string;\n  providerId?: string;\n  scopes?: string;\n  customParameters?: string;\n  eventId?: string;\n  tid?: string;\n} & { [key: string]: string | undefined };\n\nexport async function _getRedirectUrl(\n  auth: AuthInternal,\n  provider: AuthProvider,\n  authType: AuthEventType,\n  redirectUrl?: string,\n  eventId?: string,\n  additionalParams?: Record<string, string>\n): Promise<string> {\n  _assert(auth.config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  _assert(auth.config.apiKey, auth, AuthErrorCode.INVALID_API_KEY);\n\n  const params: WidgetParams = {\n    apiKey: auth.config.apiKey,\n    appName: auth.name,\n    authType,\n    redirectUrl,\n    v: SDK_VERSION,\n    eventId\n  };\n\n  if (provider instanceof FederatedAuthProvider) {\n    provider.setDefaultLanguage(auth.languageCode);\n    params.providerId = provider.providerId || '';\n    if (!isEmpty(provider.getCustomParameters())) {\n      params.customParameters = JSON.stringify(provider.getCustomParameters());\n    }\n\n    // TODO set additionalParams from the provider as well?\n    for (const [key, value] of Object.entries(additionalParams || {})) {\n      params[key] = value;\n    }\n  }\n\n  if (provider instanceof BaseOAuthProvider) {\n    const scopes = provider.getScopes().filter(scope => scope !== '');\n    if (scopes.length > 0) {\n      params.scopes = scopes.join(',');\n    }\n  }\n\n  if (auth.tenantId) {\n    params.tid = auth.tenantId;\n  }\n\n  // TODO: maybe set eid as endipointId\n  // TODO: maybe set fw as Frameworks.join(\",\")\n\n  const paramsDict = params as Record<string, string | number>;\n  for (const key of Object.keys(paramsDict)) {\n    if (paramsDict[key] === undefined) {\n      delete paramsDict[key];\n    }\n  }\n\n  // Sets the App Check token to pass to the widget\n  const appCheckToken = await auth._getAppCheckToken();\n  const appCheckTokenFragment = appCheckToken\n    ? `#${FIREBASE_APP_CHECK_FRAGMENT_ID}=${encodeURIComponent(appCheckToken)}`\n    : '';\n\n  // Start at index 1 to skip the leading '&' in the query string\n  return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(\n    1\n  )}${appCheckTokenFragment}`;\n}\n\nfunction getHandlerBase({ config }: AuthInternal): string {\n  if (!config.emulator) {\n    return `https://${config.authDomain}/${WIDGET_PATH}`;\n  }\n\n  return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../model/public_types';\n\nimport { AuthEventManager } from '../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../core/errors';\nimport { _assert, debugAssert, _fail } from '../core/util/assert';\nimport { _generateEventId } from '../core/util/event_id';\nimport { _getCurrentUrl } from '../core/util/location';\nimport { _validateOrigin } from '../core/util/validate_origin';\nimport { AuthInternal } from '../model/auth';\nimport {\n  AuthEventType,\n  EventManager,\n  GapiAuthEvent,\n  GapiOutcome,\n  PopupRedirectResolverInternal\n} from '../model/popup_redirect';\nimport { _setWindowLocation } from './auth_window';\nimport { _openIframe } from './iframe/iframe';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { _open, AuthPopup } from './util/popup';\nimport { _getRedirectResult } from './strategies/redirect';\nimport { _getRedirectUrl } from '../core/util/handler';\nimport { _isIOS, _isMobileBrowser, _isSafari } from '../core/util/browser';\nimport { _overrideRedirectResult } from '../core/strategies/redirect';\n\n/**\n * The special web storage event\n *\n */\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\n\ninterface WebStorageSupportMessage extends gapi.iframes.Message {\n  [index: number]: Record<string, boolean>;\n}\n\ninterface ManagerOrPromise {\n  manager?: EventManager;\n  promise?: Promise<EventManager>;\n}\n\nclass BrowserPopupRedirectResolver implements PopupRedirectResolverInternal {\n  private readonly eventManagers: Record<string, ManagerOrPromise> = {};\n  private readonly iframes: Record<string, gapi.iframes.Iframe> = {};\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  readonly _redirectPersistence = browserSessionPersistence;\n\n  // Wrapping in async even though we don't await anywhere in order\n  // to make sure errors are raised as promise rejections\n  async _openPopup(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<AuthPopup> {\n    debugAssert(\n      this.eventManagers[auth._key()]?.manager,\n      '_initialize() not called before _openPopup()'\n    );\n\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    return _open(auth, url, _generateEventId());\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<never> {\n    await this._originValidation(auth);\n    const url = await _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    _setWindowLocation(url);\n    return new Promise(() => {});\n  }\n\n  _initialize(auth: AuthInternal): Promise<EventManager> {\n    const key = auth._key();\n    if (this.eventManagers[key]) {\n      const { manager, promise } = this.eventManagers[key];\n      if (manager) {\n        return Promise.resolve(manager);\n      } else {\n        debugAssert(promise, 'If manager is not set, promise should be');\n        return promise;\n      }\n    }\n\n    const promise = this.initAndGetManager(auth);\n    this.eventManagers[key] = { promise };\n\n    // If the promise is rejected, the key should be removed so that the\n    // operation can be retried later.\n    promise.catch(() => {\n      delete this.eventManagers[key];\n    });\n\n    return promise;\n  }\n\n  private async initAndGetManager(auth: AuthInternal): Promise<EventManager> {\n    const iframe = await _openIframe(auth);\n    const manager = new AuthEventManager(auth);\n    iframe.register<GapiAuthEvent>(\n      'authEvent',\n      (iframeEvent: GapiAuthEvent | null) => {\n        _assert(iframeEvent?.authEvent, auth, AuthErrorCode.INVALID_AUTH_EVENT);\n        // TODO: Consider splitting redirect and popup events earlier on\n\n        const handled = manager.onEvent(iframeEvent.authEvent);\n        return { status: handled ? GapiOutcome.ACK : GapiOutcome.ERROR };\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n\n    this.eventManagers[auth._key()] = { manager };\n    this.iframes[auth._key()] = iframe;\n    return manager;\n  }\n\n  _isIframeWebStorageSupported(\n    auth: AuthInternal,\n    cb: (supported: boolean) => unknown\n  ): void {\n    const iframe = this.iframes[auth._key()];\n    iframe.send<gapi.iframes.Message, WebStorageSupportMessage>(\n      WEB_STORAGE_SUPPORT_KEY,\n      { type: WEB_STORAGE_SUPPORT_KEY },\n      result => {\n        const isSupported = result?.[0]?.[WEB_STORAGE_SUPPORT_KEY];\n        if (isSupported !== undefined) {\n          cb(!!isSupported);\n        }\n\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  get _shouldInitProactively(): boolean {\n    // Mobile browsers and Safari need to optimistically initialize\n    return _isMobileBrowser() || _isSafari() || _isIOS();\n  }\n\n  _completeRedirectFn = _getRedirectResult;\n\n  _overrideRedirectResult = _overrideRedirectResult;\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for browser\n * based applications.\n *\n * @remarks\n * This method does not work in a Node.js environment.\n *\n * @public\n */\nexport const browserPopupRedirectResolver: PopupRedirectResolver =\n  BrowserPopupRedirectResolver;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FactorId, MultiFactorAssertion } from '../model/public_types';\nimport { debugFail } from '../core/util/assert';\nimport { MultiFactorSessionImpl, MultiFactorSessionType } from './mfa_session';\nimport { FinalizeMfaResponse } from '../api/authentication/mfa';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorAssertionImpl implements MultiFactorAssertion {\n  protected constructor(readonly factorId: FactorId) {}\n\n  _process(\n    auth: AuthInternal,\n    session: MultiFactorSessionImpl,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    switch (session.type) {\n      case MultiFactorSessionType.ENROLL:\n        return this._finalizeEnroll(auth, session.credential, displayName);\n      case MultiFactorSessionType.SIGN_IN:\n        return this._finalizeSignIn(auth, session.credential);\n      default:\n        return debugFail('unexpected MultiFactorSessionType');\n    }\n  }\n\n  abstract _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse>;\n  abstract _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactorId,\n  PhoneMultiFactorAssertion\n} from '../../../model/public_types';\n\nimport { MultiFactorAssertionImpl } from '../../../mfa/mfa_assertion';\nimport { AuthInternal } from '../../../model/auth';\nimport { finalizeEnrollPhoneMfa } from '../../../api/account_management/mfa';\nimport { PhoneAuthCredential } from '../../../core/credentials/phone';\nimport {\n  finalizeSignInPhoneMfa,\n  FinalizeMfaResponse\n} from '../../../api/authentication/mfa';\n\n/**\n * {@inheritdoc PhoneMultiFactorAssertion}\n *\n * @public\n */\nexport class PhoneMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements PhoneMultiFactorAssertion\n{\n  private constructor(private readonly credential: PhoneAuthCredential) {\n    super(FactorId.PHONE);\n  }\n\n  /** @internal */\n  static _fromCredential(\n    credential: PhoneAuthCredential\n  ): PhoneMultiFactorAssertionImpl {\n    return new PhoneMultiFactorAssertionImpl(credential);\n  }\n\n  /** @internal */\n  _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeEnrollPhoneMfa(auth, {\n      idToken,\n      displayName,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeSignInPhoneMfa(auth, {\n      mfaPendingCredential,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\n *\n * @public\n */\nexport class PhoneMultiFactorGenerator {\n  private constructor() {}\n\n  /**\n   * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\n   *\n   * @remarks\n   * This method does not work in a Node.js environment.\n   *\n   * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\n   * @returns A {@link PhoneMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}\n   */\n  static assertion(credential: PhoneAuthCredential): PhoneMultiFactorAssertion {\n    return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n  }\n\n  /**\n   * The identifier of the phone second factor: `phone`.\n   */\n  static FACTOR_ID = 'phone';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  TotpMultiFactorAssertion,\n  MultiFactorSession,\n  FactorId\n} from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  finalizeEnrollTotpMfa,\n  startEnrollTotpMfa,\n  StartTotpMfaEnrollmentResponse,\n  TotpVerificationInfo\n} from '../../api/account_management/mfa';\nimport {\n  FinalizeMfaResponse,\n  finalizeSignInTotpMfa\n} from '../../api/authentication/mfa';\nimport { MultiFactorAssertionImpl } from '../../mfa/mfa_assertion';\nimport { MultiFactorSessionImpl } from '../mfa_session';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * @public\n */\nexport class TotpMultiFactorGenerator {\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of\n   * the TOTP (time-based one-time password) second factor.\n   * This assertion is used to complete enrollment in TOTP second factor.\n   *\n   * @param secret A {@link TotpSecret} containing the shared secret key and other TOTP parameters.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorUser.enroll}.\n   */\n  static assertionForEnrollment(\n    secret: TotpSecret,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromSecret(secret, oneTimePassword);\n  }\n\n  /**\n   * Provides a {@link TotpMultiFactorAssertion} to confirm ownership of the TOTP second factor.\n   * This assertion is used to complete signIn with TOTP as the second factor.\n   *\n   * @param enrollmentId identifies the enrolled TOTP second factor.\n   * @param oneTimePassword One-time password from TOTP App.\n   * @returns A {@link TotpMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}.\n   */\n  static assertionForSignIn(\n    enrollmentId: string,\n    oneTimePassword: string\n  ): TotpMultiFactorAssertion {\n    return TotpMultiFactorAssertionImpl._fromEnrollmentId(\n      enrollmentId,\n      oneTimePassword\n    );\n  }\n\n  /**\n   * Returns a promise to {@link TotpSecret} which contains the TOTP shared secret key and other parameters.\n   * Creates a TOTP secret as part of enrolling a TOTP second factor.\n   * Used for generating a QR code URL or inputting into a TOTP app.\n   * This method uses the auth instance corresponding to the user in the multiFactorSession.\n   *\n   * @param session The {@link MultiFactorSession} that the user is part of.\n   * @returns A promise to {@link TotpSecret}.\n   */\n  static async generateSecret(\n    session: MultiFactorSession\n  ): Promise<TotpSecret> {\n    const mfaSession = session as MultiFactorSessionImpl;\n    _assert(\n      typeof mfaSession.user?.auth !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const response = await startEnrollTotpMfa(mfaSession.user.auth, {\n      idToken: mfaSession.credential,\n      totpEnrollmentInfo: {}\n    });\n    return TotpSecret._fromStartTotpMfaEnrollmentResponse(\n      response,\n      mfaSession.user.auth\n    );\n  }\n\n  /**\n   * The identifier of the TOTP second factor: `totp`.\n   */\n  static FACTOR_ID: 'totp' = FactorId.TOTP;\n}\n\nexport class TotpMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements TotpMultiFactorAssertion\n{\n  constructor(\n    readonly otp: string,\n    readonly enrollmentId?: string,\n    readonly secret?: TotpSecret\n  ) {\n    super(FactorId.TOTP);\n  }\n\n  /** @internal */\n  static _fromSecret(\n    secret: TotpSecret,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, undefined, secret);\n  }\n\n  /** @internal */\n  static _fromEnrollmentId(\n    enrollmentId: string,\n    otp: string\n  ): TotpMultiFactorAssertionImpl {\n    return new TotpMultiFactorAssertionImpl(otp, enrollmentId);\n  }\n\n  /** @internal */\n  async _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      typeof this.secret !== 'undefined',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return finalizeEnrollTotpMfa(auth, {\n      idToken,\n      displayName,\n      totpVerificationInfo: this.secret._makeTotpVerificationInfo(this.otp)\n    });\n  }\n\n  /** @internal */\n  async _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    _assert(\n      this.enrollmentId !== undefined && this.otp !== undefined,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    const totpVerificationInfo = { verificationCode: this.otp };\n    return finalizeSignInTotpMfa(auth, {\n      mfaPendingCredential,\n      mfaEnrollmentId: this.enrollmentId,\n      totpVerificationInfo\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link TotpMultiFactorAssertion}.\n *\n * Stores the shared secret key and other parameters to generate time-based OTPs.\n * Implements methods to retrieve the shared secret key and generate a QR code URL.\n * @public\n */\nexport class TotpSecret {\n  /**\n   * Shared secret key/seed used for enrolling in TOTP MFA and generating OTPs.\n   */\n  readonly secretKey: string;\n  /**\n   * Hashing algorithm used.\n   */\n  readonly hashingAlgorithm: string;\n  /**\n   * Length of the one-time passwords to be generated.\n   */\n  readonly codeLength: number;\n  /**\n   * The interval (in seconds) when the OTP codes should change.\n   */\n  readonly codeIntervalSeconds: number;\n  /**\n   * The timestamp (UTC string) by which TOTP enrollment should be completed.\n   */\n  // This can be used by callers to show a countdown of when to enter OTP code by.\n  readonly enrollmentCompletionDeadline: string;\n\n  // The public members are declared outside the constructor so the docs can be generated.\n  private constructor(\n    secretKey: string,\n    hashingAlgorithm: string,\n    codeLength: number,\n    codeIntervalSeconds: number,\n    enrollmentCompletionDeadline: string,\n    private readonly sessionInfo: string,\n    private readonly auth: AuthInternal\n  ) {\n    this.secretKey = secretKey;\n    this.hashingAlgorithm = hashingAlgorithm;\n    this.codeLength = codeLength;\n    this.codeIntervalSeconds = codeIntervalSeconds;\n    this.enrollmentCompletionDeadline = enrollmentCompletionDeadline;\n  }\n\n  /** @internal */\n  static _fromStartTotpMfaEnrollmentResponse(\n    response: StartTotpMfaEnrollmentResponse,\n    auth: AuthInternal\n  ): TotpSecret {\n    return new TotpSecret(\n      response.totpSessionInfo.sharedSecretKey,\n      response.totpSessionInfo.hashingAlgorithm,\n      response.totpSessionInfo.verificationCodeLength,\n      response.totpSessionInfo.periodSec,\n      new Date(response.totpSessionInfo.finalizeEnrollmentTime).toUTCString(),\n      response.totpSessionInfo.sessionInfo,\n      auth\n    );\n  }\n\n  /** @internal */\n  _makeTotpVerificationInfo(otp: string): TotpVerificationInfo {\n    return { sessionInfo: this.sessionInfo, verificationCode: otp };\n  }\n\n  /**\n   * Returns a QR code URL as described in\n   * https://github.com/google/google-authenticator/wiki/Key-Uri-Format\n   * This can be displayed to the user as a QR code to be scanned into a TOTP app like Google Authenticator.\n   * If the optional parameters are unspecified, an accountName of <userEmail> and issuer of <firebaseAppName> are used.\n   *\n   * @param accountName the name of the account/app along with a user identifier.\n   * @param issuer issuer of the TOTP (likely the app name).\n   * @returns A QR code URL string.\n   */\n  generateQrCodeUrl(accountName?: string, issuer?: string): string {\n    let useDefaults = false;\n    if (_isEmptyString(accountName) || _isEmptyString(issuer)) {\n      useDefaults = true;\n    }\n    if (useDefaults) {\n      if (_isEmptyString(accountName)) {\n        accountName = this.auth.currentUser?.email || 'unknownuser';\n      }\n      if (_isEmptyString(issuer)) {\n        issuer = this.auth.name;\n      }\n    }\n    return `otpauth://totp/${issuer}:${accountName}?secret=${this.secretKey}&issuer=${issuer}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`;\n  }\n}\n\n/** @internal */\nfunction _isEmptyString(input?: string): boolean {\n  return typeof input === 'undefined' || input?.length === 0;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Unsubscribe } from '@firebase/util';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\n\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\ninterface TokenListener {\n  (tok: string | null): unknown;\n}\n\nexport class AuthInterop implements FirebaseAuthInternal {\n  private readonly internalListeners: Map<TokenListener, Unsubscribe> =\n    new Map();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  getUid(): string | null {\n    this.assertAuthConfigured();\n    return this.auth.currentUser?.uid || null;\n  }\n\n  async getToken(\n    forceRefresh?: boolean\n  ): Promise<{ accessToken: string } | null> {\n    this.assertAuthConfigured();\n    await this.auth._initializationPromise;\n    if (!this.auth.currentUser) {\n      return null;\n    }\n\n    const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n    return { accessToken };\n  }\n\n  addAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    if (this.internalListeners.has(listener)) {\n      return;\n    }\n\n    const unsubscribe = this.auth.onIdTokenChanged(user => {\n      listener(\n        (user as UserInternal | null)?.stsTokenManager.accessToken || null\n      );\n    });\n    this.internalListeners.set(listener, unsubscribe);\n    this.updateProactiveRefresh();\n  }\n\n  removeAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    const unsubscribe = this.internalListeners.get(listener);\n    if (!unsubscribe) {\n      return;\n    }\n\n    this.internalListeners.delete(listener);\n    unsubscribe();\n    this.updateProactiveRefresh();\n  }\n\n  private assertAuthConfigured(): void {\n    _assert(\n      this.auth._initializationPromise,\n      AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    );\n  }\n\n  private updateProactiveRefresh(): void {\n    if (this.internalListeners.size > 0) {\n      this.auth._startProactiveRefresh();\n    } else {\n      this.auth._stopProactiveRefresh();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\n\nimport {\n  initializeAuth,\n  beforeAuthStateChanged,\n  onIdTokenChanged,\n  connectAuthEmulator\n} from '..';\nimport { registerAuth } from '../core/auth/register';\nimport { ClientPlatform } from '../core/util/version';\nimport { browserLocalPersistence } from './persistence/local_storage';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { indexedDBLocalPersistence } from './persistence/indexed_db';\nimport { browserPopupRedirectResolver } from './popup_redirect';\nimport { Auth, User } from '../model/public_types';\nimport { getDefaultEmulatorHost, getExperimentalSetting } from '@firebase/util';\nimport { _setExternalJSProvider } from './load_js';\nimport { _createError } from '../core/util/assert';\nimport { AuthErrorCode } from '../core/errors';\n\nconst DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;\nconst authIdTokenMaxAge =\n  getExperimentalSetting('authIdTokenMaxAge') || DEFAULT_ID_TOKEN_MAX_AGE;\n\nlet lastPostedIdToken: string | undefined | null = null;\n\nconst mintCookieFactory = (url: string) => async (user: User | null) => {\n  const idTokenResult = user && (await user.getIdTokenResult());\n  const idTokenAge =\n    idTokenResult &&\n    (new Date().getTime() - Date.parse(idTokenResult.issuedAtTime)) / 1_000;\n  if (idTokenAge && idTokenAge > authIdTokenMaxAge) {\n    return;\n  }\n  // Specifically trip null => undefined when logged out, to delete any existing cookie\n  const idToken = idTokenResult?.token;\n  if (lastPostedIdToken === idToken) {\n    return;\n  }\n  lastPostedIdToken = idToken;\n  await fetch(url, {\n    method: idToken ? 'POST' : 'DELETE',\n    headers: idToken\n      ? {\n          'Authorization': `Bearer ${idToken}`\n        }\n      : {}\n  });\n};\n\n/**\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\n *\n * @param app - The Firebase App.\n *\n * @public\n */\nexport function getAuth(app: FirebaseApp = getApp()): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n\n  const auth = initializeAuth(app, {\n    popupRedirectResolver: browserPopupRedirectResolver,\n    persistence: [\n      indexedDBLocalPersistence,\n      browserLocalPersistence,\n      browserSessionPersistence\n    ]\n  });\n\n  const authTokenSyncPath = getExperimentalSetting('authTokenSyncURL');\n  // Only do the Cookie exchange in a secure context\n  if (\n    authTokenSyncPath &&\n    typeof isSecureContext === 'boolean' &&\n    isSecureContext\n  ) {\n    // Don't allow urls (XSS possibility), only paths on the same domain\n    const authTokenSyncUrl = new URL(authTokenSyncPath, location.origin);\n    if (location.origin === authTokenSyncUrl.origin) {\n      const mintCookie = mintCookieFactory(authTokenSyncUrl.toString());\n      beforeAuthStateChanged(auth, mintCookie, () =>\n        mintCookie(auth.currentUser)\n      );\n      onIdTokenChanged(auth, user => mintCookie(user));\n    }\n  }\n\n  const authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n\n  return auth;\n}\n\nfunction getScriptParentElement(): HTMLDocument | HTMLHeadElement {\n  return document.getElementsByTagName('head')?.[0] ?? document;\n}\n\n_setExternalJSProvider({\n  loadJS(url: string): Promise<Event> {\n    // TODO: consider adding timeout support & cancellation\n    return new Promise((resolve, reject) => {\n      const el = document.createElement('script');\n      el.setAttribute('src', url);\n      el.onload = resolve;\n      el.onerror = e => {\n        const error = _createError(AuthErrorCode.INTERNAL_ERROR);\n        error.customData = e as unknown as Record<string, unknown>;\n        reject(error);\n      };\n      el.type = 'text/javascript';\n      el.charset = 'UTF-8';\n      getScriptParentElement().appendChild(el);\n    });\n  },\n\n  gapiScript: 'https://apis.google.com/js/api.js',\n  recaptchaV2Script: 'https://www.google.com/recaptcha/api.js',\n  recaptchaEnterpriseScript:\n    'https://www.google.com/recaptcha/enterprise.js?render='\n});\n\nregisterAuth(ClientPlatform.BROWSER);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\n\nimport { name, version } from '../../../package.json';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _getClientVersion, ClientPlatform } from '../util/version';\nimport { _castAuth, AuthImpl, DefaultConfig } from './auth_impl';\nimport { AuthInterop } from './firebase_internal';\nimport { ConfigInternal } from '../../model/auth';\nimport { Dependencies } from '../../model/public_types';\nimport { _initializeAuthInstance } from './initialize';\n\nexport const enum _ComponentName {\n  AUTH = 'auth',\n  AUTH_INTERNAL = 'auth-internal'\n}\n\nfunction getVersionForPlatform(\n  clientPlatform: ClientPlatform\n): string | undefined {\n  switch (clientPlatform) {\n    case ClientPlatform.NODE:\n      return 'node';\n    case ClientPlatform.REACT_NATIVE:\n      return 'rn';\n    case ClientPlatform.WORKER:\n      return 'webworker';\n    case ClientPlatform.CORDOVA:\n      return 'cordova';\n    case ClientPlatform.WEB_EXTENSION:\n      return 'web-extension';\n    default:\n      return undefined;\n  }\n}\n\n/** @internal */\nexport function registerAuth(clientPlatform: ClientPlatform): void {\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH,\n      (container, { options: deps }: { options?: Dependencies }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const heartbeatServiceProvider =\n          container.getProvider<'heartbeat'>('heartbeat');\n        const appCheckServiceProvider =\n          container.getProvider<'app-check-internal'>('app-check-internal');\n        const { apiKey, authDomain } = app.options;\n\n        _assert(\n          apiKey && !apiKey.includes(':'),\n          AuthErrorCode.INVALID_API_KEY,\n          { appName: app.name }\n        );\n\n        const config: ConfigInternal = {\n          apiKey,\n          authDomain,\n          clientPlatform,\n          apiHost: DefaultConfig.API_HOST,\n          tokenApiHost: DefaultConfig.TOKEN_API_HOST,\n          apiScheme: DefaultConfig.API_SCHEME,\n          sdkClientVersion: _getClientVersion(clientPlatform)\n        };\n\n        const authInstance = new AuthImpl(\n          app,\n          heartbeatServiceProvider,\n          appCheckServiceProvider,\n          config\n        );\n        _initializeAuthInstance(authInstance, deps);\n\n        return authInstance;\n      },\n      ComponentType.PUBLIC\n    )\n      /**\n       * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\n       * For why we do this, See go/firebase-next-auth-init\n       */\n      .setInstantiationMode(InstantiationMode.EXPLICIT)\n      /**\n       * Because all firebase products that depend on auth depend on auth-internal directly,\n       * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\n       */\n      .setInstanceCreatedCallback(\n        (container, _instanceIdentifier, _instance) => {\n          const authInternalProvider = container.getProvider(\n            _ComponentName.AUTH_INTERNAL\n          );\n          authInternalProvider.initialize();\n        }\n      )\n  );\n\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH_INTERNAL,\n      container => {\n        const auth = _castAuth(\n          container.getProvider(_ComponentName.AUTH).getImmediate()!\n        );\n        return (auth => new AuthInterop(auth))(auth);\n      },\n      ComponentType.PRIVATE\n    ).setInstantiationMode(InstantiationMode.EXPLICIT)\n  );\n\n  registerVersion(name, version, getVersionForPlatform(clientPlatform));\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `IteratedDataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: IteratedDataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n * Represents a child snapshot of a `Reference` that is being iterated over. The key will never be undefined.\n */\nexport interface IteratedDataSnapshot extends DataSnapshot {\n  key: string; // key of the location of this snapshot.\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type = 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type = 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type = 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type = 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type = 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type = 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type = 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type = 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type = 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type = 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type = 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown): value is object =>\n  typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!isArray && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n          copy[key] = cloneObject(data[key]);\n        }\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(object: T, path?: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(object)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    object,\n  );\n\n  return isUndefined(result) || result === object\n    ? isUndefined(object[path as keyof T])\n      ? defaultValue\n      : object[path as keyof T]\n    : result;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","export const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n} as const;\n\nexport const VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n} as const;\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n} as const;\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues, TContext = any>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TransformedValues extends FieldValues | undefined = undefined,\n>(): UseFormReturn<TFieldValues, TContext, TransformedValues> =>\n  React.useContext(HookFormContext) as UseFormReturn<\n    TFieldValues,\n    TContext,\n    TransformedValues\n  >;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TTransformedValues extends FieldValues | undefined = undefined,\n>(\n  props: FormProviderProps<TFieldValues, TContext, TTransformedValues>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport {\n  Control,\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  ReadFormState,\n} from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends FieldValues, K extends ReadFormState>(\n  formStateData: Partial<FormState<T>> & { name?: InternalFieldName },\n  _proxyFormState: K,\n  updateFormState: Control<T>['_updateFormState'],\n  isRoot?: boolean,\n) => {\n  updateFormState(formStateData);\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  next: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject &&\n      _props.current.subject.subscribe({\n        next: _props.current.next,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { DeepPartial, FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default <T>(\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n  defaultValue?: DeepPartial<T> | unknown,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default (object: FieldValues, path: string, value?: unknown) => {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n};\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode, ValidationModeFlags } from '../types';\n\nexport default (mode?: Mode): ValidationModeFlags => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import { FieldRefs, InternalFieldName, Ref } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst iterateFieldsByAction = (\n  fields: FieldRefs,\n  action: (ref: Ref, name: string) => 1 | undefined | void,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[] | 0,\n  abortEarly?: boolean,\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f) {\n        if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n          break;\n        } else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n          break;\n        } else {\n          iterateFieldsByAction(currentField, action);\n        }\n      } else if (isObject(currentField)) {\n        iterateFieldsByAction(currentField, action);\n      }\n    }\n  }\n};\n\nexport default iterateFieldsByAction;\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport compact from '../utils/compact';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isWeb from './isWeb';\n\nexport default (value: unknown): value is HTMLElement => {\n  if (!isWeb) {\n    return false;\n  }\n\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  return (\n    value instanceof\n    (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement)\n  );\n};\n","import { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message => isString(value);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  FieldValues,\n  InternalFieldErrors,\n  MaxType,\n  Message,\n  MinType,\n  NativeFieldValue,\n} from '../types';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends FieldValues>(\n  field: Field,\n  formValues: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  const inputValue: NativeFieldValue = get(formValues, name);\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) &&\n      isUndefined(ref.value) &&\n      isUndefined(inputValue)) ||\n    (isHTMLElement(ref) && ref.value === '') ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType: MaxType = INPUT_VALIDATION_RULES.maxLength,\n    minType: MinType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n          ? inputValue > maxOutput.value\n          : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n          ? inputValue < minOutput.value\n          : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > +maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < +minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue, formValues),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string | (string | number)[]) {\n  const paths = Array.isArray(path)\n    ? path\n    : isKey(path)\n    ? [path]\n    : stringToPath(path);\n\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n\n  const index = paths.length - 1;\n  const key = paths[index];\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  if (\n    index !== 0 &&\n    ((isObject(childObject) && isEmptyObject(childObject)) ||\n      (Array.isArray(childObject) && isEmptyArray(childObject)))\n  ) {\n    unset(object, paths.slice(0, -1));\n  }\n\n  return object;\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default <T>(): Subject<T> => {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n};\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<T>(data: T, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: Record<\n    Extract<keyof T, string>,\n    ReturnType<typeof markFieldsDirty> | boolean\n  >,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : value\n      ? +value\n      : value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","import { ValidationModeFlags } from '../types';\n\nexport default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<ValidationModeFlags>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  Control,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  PathValue,\n  ReadFormState,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport getValidationModes from './getValidationModes';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport iterateFieldsByAction from './iterateFieldsByAction';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: isFunction(_options.defaultValues),\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    validatingFields: {},\n    errors: _options.errors || {},\n    disabled: _options.disabled || false,\n  };\n  let _fields: FieldRefs = {};\n  let _defaultValues =\n    isObject(_options.defaultValues) || isObject(_options.values)\n      ? cloneObject(_options.defaultValues || _options.values) || {}\n      : {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState: ReadFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    validatingFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = setTimeout(callback, wait);\n    };\n\n  const _updateValid = async (shouldUpdateValid?: boolean) => {\n    if (_proxyFormState.isValid || shouldUpdateValid) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (names?: string[], isValidating?: boolean) => {\n    if (_proxyFormState.isValidating || _proxyFormState.validatingFields) {\n      (names || Array.from(_names.mount)).forEach((name) => {\n        if (name) {\n          isValidating\n            ? set(_formState.validatingFields, name, isValidating)\n            : unset(_formState.validatingFields, name);\n        }\n      });\n\n      _subjects.state.next({\n        validatingFields: _formState.validatingFields,\n        isValidating: !isEmptyObject(_formState.validatingFields),\n      });\n    }\n  };\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const _setErrors = (errors: FieldErrors<TFieldValues>) => {\n    _formState.errors = errors;\n    _subjects.state.next({\n      errors: _formState.errors,\n      isValid: false,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _state.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n    const disabledField = !!(\n      get(_fields, name) && get(_fields, name)._f.disabled\n    );\n\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n\n      const isCurrentFieldPristine =\n        disabledField || deepEqual(get(_defaultValues, name), fieldValue);\n\n      isPreviousDirty = !!(!disabledField && get(_formState.dirtyFields, name));\n      isCurrentFieldPristine || disabledField\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField =\n        shouldUpdateField ||\n        (_proxyFormState.dirtyFields &&\n          isPreviousDirty !== !isCurrentFieldPristine);\n    }\n\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          (_proxyFormState.touchedFields &&\n            isPreviousFieldTouched !== isBlurEvent);\n      }\n    }\n\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) => {\n    _updateIsValidating(name, true);\n    const result = await _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n    _updateIsValidating(name);\n    return result;\n  };\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema(names);\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          _updateIsValidating([name], true);\n          const fieldError = await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation && !shouldOnlyCheckValid,\n            isFieldArrayRoot,\n          );\n          _updateIsValidating([name]);\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        fieldValue &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_state.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n          ? _defaultValues\n          : isString(names)\n          ? { [names]: defaultValue }\n          : defaultValue),\n      },\n      isGlobal,\n      defaultValue,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _state.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name,\n              values: { ..._formValues },\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: { ..._formValues },\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({ ..._formState });\n    _subjects.values.next({\n      name: _state.mount ? name : undefined,\n      values: { ..._formValues },\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    _state.mount = true;\n    const target = event.target;\n    let name = target.name as string;\n    let isFieldValueUpdated = true;\n    const field: Field = get(_fields, name);\n    const getCurrentFieldValue = () =>\n      target.type ? getFieldValue(field._f) : getEventValue(event);\n    const _updateIsFieldValueUpdated = (fieldValue: any): void => {\n      isFieldValueUpdated =\n        Number.isNaN(fieldValue) ||\n        fieldValue === get(_formValues, name, fieldValue);\n    };\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.values.next({\n          name,\n          type: event.type,\n          values: { ..._formValues },\n        });\n\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          const previousErrorLookupResult = schemaErrorLookup(\n            _formState.errors,\n            _fields,\n            name,\n          );\n          const errorLookupResult = schemaErrorLookup(\n            errors,\n            _fields,\n            previousErrorLookupResult.name || name,\n          );\n\n          error = errorLookupResult.error;\n          name = errorLookupResult.name;\n\n          isValid = isEmptyObject(errors);\n        }\n      } else {\n        _updateIsValidating([name], true);\n        error = (\n          await validateField(\n            field,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n        _updateIsValidating([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          if (error) {\n            isValid = false;\n          } else if (_proxyFormState.isValid) {\n            isValid = await executeBuiltInValidation(_fields, true);\n          }\n        }\n      }\n\n      if (isFieldValueUpdated) {\n        field._f.deps &&\n          trigger(\n            field._f.deps as\n              | FieldPath<TFieldValues>\n              | FieldPath<TFieldValues>[],\n          );\n        shouldRenderByError(name, isValid, error, fieldState);\n      }\n    }\n  };\n\n  const _focusInput = (ref: Ref, key: string) => {\n    if (get(_formState.errors, key) && ref.focus) {\n      ref.focus();\n      return 1;\n    }\n    return;\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      iterateFieldsByAction(\n        _fields,\n        _focusInput,\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_state.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames)\n      : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    isValidating: !!get((formState || _formState).validatingFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name &&\n      convertToArrayPayload(name).forEach((inputName) =>\n        unset(_formState.errors, inputName),\n      );\n\n    _subjects.state.next({\n      errors: name ? _formState.errors : {},\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.values.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (!options.keepValue) {\n        unset(_fields, fieldName);\n        unset(_formValues, fieldName);\n      }\n\n      !options.keepError && unset(_formState.errors, fieldName);\n      !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n      !options.keepTouched && unset(_formState.touchedFields, fieldName);\n      !options.keepIsValidating &&\n        unset(_formState.validatingFields, fieldName);\n      !_options.shouldUnregister &&\n        !options.keepDefaultValue &&\n        unset(_defaultValues, fieldName);\n    }\n\n    _subjects.values.next({\n      values: { ..._formValues },\n    });\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const _updateDisabledField: Control<TFieldValues>['_updateDisabledField'] = ({\n    disabled,\n    name,\n    field,\n    fields,\n    value,\n  }) => {\n    if (isBoolean(disabled)) {\n      const inputValue = disabled\n        ? undefined\n        : isUndefined(value)\n        ? getFieldValue(field ? field._f : get(fields, name)._f)\n        : value;\n      set(_formValues, name, inputValue);\n      updateTouchAndDirty(name, inputValue, false, false, true);\n    }\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    if (field) {\n      _updateDisabledField({\n        field,\n        disabled: options.disabled,\n        name,\n        value: options.value,\n      });\n    } else {\n      updateValidAndValue(name, true, options.value);\n    }\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.progressive\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _state.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    iterateFieldsByAction(_fields, _focusInput, _names.mount);\n\n  const _disableForm = (disabled?: boolean) => {\n    if (isBoolean(disabled)) {\n      _subjects.state.next({ disabled });\n      iterateFieldsByAction(\n        _fields,\n        (ref, name) => {\n          let requiredDisabledState = disabled;\n          const currentField = get(_fields, name);\n          if (currentField && isBoolean(currentField._f.disabled)) {\n            requiredDisabledState ||= currentField._f.disabled;\n          }\n\n          ref.disabled = requiredDisabledState;\n        },\n        0,\n        false,\n      );\n    }\n  };\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      let onValidError = undefined;\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let fieldValues = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      if (_options.resolver) {\n        const { errors, values } = await _executeSchema();\n        _formState.errors = errors;\n        fieldValues = values;\n      } else {\n        await executeBuiltInValidation(_fields);\n      }\n\n      unset(_formState.errors, 'root');\n\n      if (isEmptyObject(_formState.errors)) {\n        _subjects.state.next({\n          errors: {},\n        });\n        try {\n          await onValid(fieldValues as TFieldValues, e);\n        } catch (error) {\n          onValidError = error;\n        }\n      } else {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        _focusError();\n        setTimeout(_focusError);\n      }\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors,\n      });\n      if (onValidError) {\n        throw onValidError;\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, cloneObject(get(_defaultValues, name)));\n      } else {\n        setValue(\n          name,\n          options.defaultValue as PathValue<\n            TFieldValues,\n            FieldPath<TFieldValues>\n          >,\n        );\n        set(_defaultValues, name, cloneObject(options.defaultValue));\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const isEmptyResetValues = isEmptyObject(formValues);\n    const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneObject(values);\n\n      _subjects.array.next({\n        values: { ...values },\n      });\n\n      _subjects.values.next({\n        values: { ...values },\n      });\n    }\n\n    _names = {\n      mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _state.mount =\n      !_proxyFormState.isValid ||\n      !!keepStateOptions.keepIsValid ||\n      !!keepStateOptions.keepDirtyValues;\n\n    _state.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: isEmptyResetValues\n        ? false\n        : keepStateOptions.keepDirty\n        ? _formState.isDirty\n        : !!(\n            keepStateOptions.keepDefaultValues &&\n            !deepEqual(formValues, _defaultValues)\n          ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: isEmptyResetValues\n        ? []\n        : keepStateOptions.keepDirtyValues\n        ? keepStateOptions.keepDefaultValues && _formValues\n          ? getDirtyFields(_defaultValues, _formValues)\n          : _formState.dirtyFields\n        : keepStateOptions.keepDefaultValues && formValues\n        ? getDirtyFields(_defaultValues, formValues)\n        : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n        ? _formState.isSubmitSuccessful\n        : false,\n      isSubmitting: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? formValues(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n\n  const _updateFormState = (\n    updatedFormState: Partial<FormState<TFieldValues>>,\n  ) => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState,\n    };\n  };\n\n  const _resetDefaultValues = () =>\n    isFunction(_options.defaultValues) &&\n    _options.defaultValues().then((values) => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false,\n      });\n    });\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      handleSubmit,\n      setError,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _updateDisabledField,\n      _getFieldArray,\n      _reset,\n      _resetDefaultValues,\n      _updateFormState,\n      _disableForm,\n      _subjects,\n      _proxyFormState,\n      _setErrors,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport deepEqual from './utils/deepEqual';\nimport isFunction from './utils/isFunction';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TTransformedValues extends FieldValues | undefined = undefined,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext, TTransformedValues> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext, TTransformedValues> | undefined\n  >();\n  const _values = React.useRef<typeof props.values>();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isLoading: isFunction(props.defaultValues),\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    validatingFields: {},\n    errors: props.errors || {},\n    disabled: props.disabled || false,\n    defaultValues: isFunction(props.defaultValues)\n      ? undefined\n      : props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    next: (\n      value: Partial<FormState<TFieldValues>> & { name?: InternalFieldName },\n    ) => {\n      if (\n        shouldRenderFormState(\n          value,\n          control._proxyFormState,\n          control._updateFormState,\n          true,\n        )\n      ) {\n        updateFormState({ ...control._formState });\n      }\n    },\n  });\n\n  React.useEffect(\n    () => control._disableForm(props.disabled),\n    [control, props.disabled],\n  );\n\n  React.useEffect(() => {\n    if (control._proxyFormState.isDirty) {\n      const isDirty = control._getDirty();\n      if (isDirty !== formState.isDirty) {\n        control._subjects.state.next({\n          isDirty,\n        });\n      }\n    }\n  }, [control, formState.isDirty]);\n\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, _values.current)) {\n      control._reset(props.values, control._options.resetOptions);\n      _values.current = props.values;\n      updateFormState((state) => ({ ...state }));\n    } else {\n      control._resetDefaultValues();\n    }\n  }, [props.values, control]);\n\n  React.useEffect(() => {\n    if (props.errors) {\n      control._setErrors(props.errors);\n    }\n  }, [props.errors, control]);\n\n  React.useEffect(() => {\n    if (!control._state.mount) {\n      control._updateValid();\n      control._state.mount = true;\n    }\n\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({ ...control._formState });\n    }\n\n    control._removeUnmounted();\n  });\n\n  React.useEffect(() => {\n    props.shouldUnregister &&\n      control._subjects.values.next({\n        values: control._getWatch(),\n      });\n  }, [props.shouldUnregister, control]);\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n"],"names":["CONSTANTS","assert","assertion","message","assertionError","Error","stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","_inherits","_classCallCheck","name","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","replace","base64Decode","e","console","error","deepCopy","value","deepExtend","undefined","target","source","Object","constructor","Date","getTime","prop","hasOwnProperty","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","process","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","getDefaultEmulatorHost","productName","emulatorHosts","getDefaultEmulatorHostnameAndPort","host","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","getExperimentalSetting","Deferred","reject","resolve","promise","Promise","_this2","_createClass","key","callback","_this3","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","stringify","alg","type","getUA","navigator","isMobileCordova","test","isBrowserExtension","runtime","chrome","browser","id","isReactNative","isIE","ua","indexOf","isNodeSdk","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","FirebaseError","code","customData","_this4","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","data","PATTERN","_","jsonEval","decode","header","claims","signature","parts","split","isValidFormat","isAdmin","contains","obj","call","safeGet","isEmpty","map","fn","contextObj","res","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","querystring","querystringParams","params","forEach","arrayVal","encodeURIComponent","entries","_loop","querystringDecode","_token$split2","decodeURIComponent","extractQuerystring","url","queryStart","fragmentStart","Sha1","blockSize","pad_","reset","chain_","inbuf_","total_","buf","offset","W","W_","t","f","d","lengthMinusBlock","n","buf_","inbuf","compress_","digest","totalBits","update","j","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","task","then","_this5","forEachObserver","observer","next","complete","nextOrObserver","methods","_step","method","_iterator","implementsAnyMethods","noop","unsub","unsubscribeOne","observers","finalized","_this6","finalError","observerCount","sendOne","_this7","err","_this8","errorPrefix","fnName","argName","high","stringLength","getModularInstance","_delegate","canUseDOM","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","define","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","Cache","maxSize","_maxSize","clear","_size","_values","get","set","SPLIT_REGEX","DIGIT_REGEX","LEAD_DIGIT_REGEX","SPEC_CHAR_REGEX","CLEAN_QUOTES_REGEX","pathCache","setCache","getCache","normalizePath","path","part","isQuoted","shouldBeQuoted","hasLeadingNumber","hasSpecialChars","setter","index","len","getter","safe","segments","reduce","cb","thisArg","iter","idx","isBracket","componentWillMount","state","getDerivedStateFromProps","setState","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","defineProperty","bodyOpenClassName","portalClassName","_extends","assign","arguments","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","_react2","_interopRequireDefault","_reactDom2","_propTypes2","_ModalPortal2","ariaAppHider","__esModule","newObj","default","_interopRequireWildcard","_safeHTMLElement","_safeHTMLElement2","_reactLifecyclesCompat","instance","TypeError","_possibleConstructorReturn","ReferenceError","isReact16","createPortal","createHTMLElement","getCreatePortal","unstable_renderSubtreeIntoContainer","getParentElement","parentSelector","Modal","_Component","_ref","_temp","_this","_len","args","_key","__proto__","getPrototypeOf","apply","concat","removePortal","unmountComponentAtNode","parent","removeChild","warn","portalRef","ref","portal","renderPortal","defaultStyles","subClass","superClass","className","appendChild","prevParent","nextParent","_props","isOpen","now","closesAt","closeTimeoutMS","beforeClose","closeWithTimeout","setTimeout","setElement","propTypes","style","content","overlay","htmlOpenClassName","base","afterOpen","overlayClassName","appElement","SafeHTMLCollection","SafeNodeList","onAfterOpen","onRequestClose","ariaHideApp","shouldFocusAfterRender","shouldCloseOnOverlayClick","shouldReturnFocusAfterClose","preventScroll","aria","role","contentLabel","shouldCloseOnEsc","overlayRef","contentRef","overlayElement","contentElement","defaultProps","body","contentEl","children","position","top","left","right","bottom","backgroundColor","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","_typeof","Symbol","iterator","focusManager","_scopeTab2","classList","_portalOpenInstances2","CLASS_NAMES","ariaHiddenInstances","ModalPortal","setOverlayRef","setContentRef","afterClose","_this$props","parentDocument","ownerDocument","remove","getElementsByTagName","show","returnFocus","teardownScopedFocus","popWithoutFocus","onAfterClose","deregister","beforeOpen","clearTimeout","closeTimer","setupScopedFocus","markForFocusLater","openAnimationFrame","requestAnimationFrame","overlayEl","closeWithoutTimeout","focusContent","contentHasFocus","focus","handleKeyDown","event","keyCode","isTabKey","isEscKey","stopPropagation","requestClose","handleOverlayOnClick","shouldClose","ownerHandlesClose","handleContentOnMouseUp","handleOverlayOnMouseDown","preventDefault","handleContentOnClick","handleContentOnMouseDown","shouldBeClosed","activeElement","buildClassName","which","additional","classNames","attributesFromObject","prefix","items","acc","moveFromContentToOverlay","cancelAnimationFrame","add","hide","register","_props2","contentStyles","overlayStyles","overlayProps","onClick","onMouseDown","contentProps","tabIndex","onKeyDown","onMouseUp","modal","testId","resetState","globalElement","removeAttribute","querySelectorAll","log","assertNodeList","useElement","el","validateElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","done","setAttribute","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","documentNotReadyOrSSRTesting","_warning","_warning2","nodeList","selector","HTMLCollection","NodeList","_arr","before","after","_i","item","parentNode","instances","_arr2","_i2","check","nodeName","_portalOpenInstances","eventType","openInstances","opacity","cloneNode","firstChild","insertBefore","lastChild","parentElement","htmlElement","cls","htmlClassList","removeClass","_cls","docBodyClassList","at","classString","classListRef","poll","toLowerCase","incrementReference","decrementReference","focusLaterElements","handleBlur","handleFocus","toFocus","pop","modalElement","removeEventListener","detachEvent","_tabbable","_tabbable2","needToFocus","portalOpenInstances","PortalOpenInstances","openInstance","emit","splice","subscribers","subscriber","slice","_exenv","EE","SafeHTMLElement","HTMLElement","tabbable","shiftKey","head","tail","getActiveElement","checkSafari","exec","userAgent","x","shadowRoot","findTabbableDescendants","descendants","finished","filter","tabbableNode","hidesContents","zeroSize","offsetWidth","offsetHeight","innerHTML","getComputedStyle","displayValue","getPropertyValue","scrollWidth","scrollHeight","isNotOverflowing","exception","focusable","isTabIndexNotNaN","disabled","href","rootNode","getRootNode","visible","getAttribute","isTabIndexNaN","isNaN","_Modal","_Modal2","reWords","words","upperFirst","toUpperCase","camelCase","pascalCase","snakeCase","kebabCase","sentenceCase","titleCase","toposort","nodes","edges","cursor","sorted","visited","outgoingEdges","arr","Map","edge","has","Set","makeOutgoingEdges","nodesHash","makeNodesHash","visit","predecessors","nodeRep","outgoing","from","child","delete","uniqueNodes","warning","_Symbol$toStringTag","_Symbol$hasInstance","_Symbol$toStringTag2","toString","errorToString","regExpToString","RegExp","symbolToString","SYMBOL_REGEXP","printNumber","val","printSimpleValue","quoteStrings","typeOf","tag","toISOString","printValue","toArray","strReg","toStringTag","ValidationErrorNoStack","errorOrErrors","field","inner","ValidationError","isError","_this$errors","_this$inner","_toConsumableArray","innerErrors","hasInstance","_Error","_Symbol$hasInstance2","_super","_createSuper","disableStack","errorNoStack","_assertThisInitialized","label","inst","_get","_getPrototypeOf","_wrapNativeSuper","mixed","required","defined","notNull","notOneOf","notType","originalValue","castMsg","min","max","matches","email","uuid","datetime","datetime_precision","datetime_offset","trim","lowercase","uppercase","lessThan","moreThan","positive","negative","integer","date","boolean","isValue","noUnknown","tuple","typeLen","spec","types","formatError","isSchema","__isYupSchema__","Condition","refs","builder","options","values","getValue","context","schema","otherwise","is","every","_branch","branch","prefixes","Reference","isContext","isSibling","__isYupRef","isAbsent","createValidation","validate","_ref2","panic","_ref2$path","skipAbsent","_options$abortEarly2","abortEarly","_options$disableStack4","disableStackTrace","isRef","createError","overrides","nextParams","_Object$keys","invalid","ctx","handleResult","validOrError","handleError","_result","sync","OPTIONS","getIn","lastPart","lastPartDebug","_part","isTuple","innerType","fields","parentPath","ReferenceSet","_Set","_super2","description","_createForOfIteratorHelper","s","describe","newItems","removeItems","clone","src","copy","seen","_step3","_iterator3","_step3$value","_slicedToArray","v","_step4","_iterator4","_Object$entries","_Object$entries$_i","Schema","deps","tests","transforms","conditions","_mutate","internalTests","_whitelist","_blacklist","exclusiveTests","_typeCheck","withMutation","typeError","strip","strict","recursive","nullable","optional","coerce","nonNullable","meta","combined","mergedSpec","merge","prevSchema","condition","_options$strict","_options$abortEarly","_options$recursive","_options$disableStack","resolvedSchema","allowOptionality","_cast","isType","formattedValue","formattedResult","rawValue","prevValue","getDefault","_value","_options$originalValu3","_options$strict2","initialTests","_i3","_Object$values","runTests","initialErrors","runOptions","fired","panicOnce","arg","nextOnce","count","nestedErrors","_ref3","_Object$assign","originalParent","isIndex","testOptions","_defineProperty","_validate","_options$disableStack2","parsed","validated","_options$disableStack3","validateSync","defaultValue","_getDefault","def","isStrict","optionality","nullability","opts","isExclusive","exclusive","dep","fromOptions","enums","whiteList","valids","resolved","resolveAll","blacklist","invalids","_next$spec","list","findIndex","_i4","_getIn","_i5","alias","_i6","_arr3","returnsTrue","MixedSchema","_Schema","_super3","BooleanSchema","_Schema2","_super4","Boolean","valueOf","transform","_raw","msg","isoReg","parseDateStruct","_regexResult$7$length","_regexResult$","regexResult","year","toNumber","month","day","hour","minute","second","millisecond","precision","z","plusMinus","hourOffset","minuteOffset","Number","rEmail","rUrl","rUUID","rIsoDateTime","isTrimmed","objStringTag","create$6","StringSchema","_Schema3","_super5","strValue","regex","excludeEmptyString","_options$excludeEmpty","search","allowOffset","_options$message","_options$allowOffset","_options$precision","struct","NumberSchema","_Schema4","_super6","_this9","isNaN$1","NaN","parseFloat","less","more","isInteger","_method","avail","truncate","Math","invalidDate","create$4","DateSchema","_Schema5","_super7","_this10","totalMinutesOffset","UTC","parseIsoDate","INVALID_DATE","param","cast","limit","prepareParam","Infinity","some","ii","_err$path","sortByKeyOrder","parseJson","deepPartial","partial","_i8","_Object$entries2","_Object$entries2$_i","fieldSchema","setFields","nextArray","unknown","known","defaultSort","create$3","ObjectSchema","_Schema6","_super8","_this11","_sortErrors","_nodes","_excludedEdges","_options$stripUnknown","_this12","_step5","stripUnknown","intermediateValue","innerOptions","__validating","isChanged","_iterator5","exists","fieldValue","inputValue","fieldSpec","_this13","_options$from","_options$originalValu4","_options$recursive2","objectErrors","_step6","_iterator6","asNestedTest","fieldErrors","sort","_this14","nextFields","_i9","_Object$entries3","_Object$entries3$_i","schemaOrRef","_this15","dft","_innerOptions","excludedEdges","excludes","_ref4","_ref5","addNode","depPath","_loop2","_Object$keys2","_i7","reverse","sortFields","additions","_i10","_Object$entries4","_Object$entries4$_i","Function","_step7","picked","_iterator7","_ref6","_ref7","remaining","_i11","_Object$keys3","pick","to","fromGetter","last","deepHas","noAllow","unknownKeys","allow","_i12","_Object$keys4","transformKeys","_i13","_Object$entries5","_innerOptions2","_Object$entries5$_i","ArraySchema","_Schema7","_super9","_this16","_opts","_this17","castArray","castElement","_this18","arrayErrors","_options$originalValu2","_options$originalValu","innerTypeErrors","_this19","original","rejector","TupleSchema","_Schema8","_super10","schemas","_this20","_this21","itemTypes","tupleErrors","_step8","_iterator8","_step8$value","itemSchema","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","wrapFunction","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","_len2","_key2","unwrap","_len3","_key3","storeNames","tx","transformCachableValue","unlisten","DOMException","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","_asyncToGenerator","_regeneratorRuntime","_callee","storeName","_target","_args","_context","prev","store","shift","all","abrupt","sent","stop","_x","oldTraps","_objectSpread","PlatformLoggerServiceImpl","container","getProviders","provider","component","getComponent","isVersionServiceProvider","getImmediate","library","version","logString","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","appName","_apps","_serverApps","_components","_addComponent","app","addComponent","debug","_registerComponent","_getProvider","heartbeatController","getProvider","triggerHeartbeat","_isFirebaseServerApp","settings","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","_isDeleted","isDeleted","SDK_VERSION","initializeApp","rawConfig","existingApp","ComponentContainer","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","_readHeartbeatsFromIndexedDB","_context8","computeKey","idbGetError","writeHeartbeatsToIndexedDB","_writeHeartbeatsToIndexedDB","heartbeatObject","_context9","put","appId","HeartbeatServiceImpl","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_heartbeatsCache","platformLogger","agent","getPlatformInfoString","getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","hbTimestamp","overwrite","_context2","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","heartbeatsCache","heartbeatEntry","find","hb","dates","countBytes","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","_context3","_context4","idbHeartbeatObject","heartbeatsObject","_context5","existingHeartbeatsObject","_context6","instanceFactory","instantiationMode","mode","multipleInstances","serviceProps","onInstanceCreated","Provider","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","isComponentEager","instanceDeferred","services","INTERNAL","_delete","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","existingInstance","callbacks","_a","_ref$options","invokeOnInitCallbacks","providers","setComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","_logLevel","_logHandler","_userLogHandler","_prodErrorMap","prodErrorMap","_DEFAULT_AUTH_ERROR_FACTORY","logClient","_logWarn","_logError","_fail","authOrCode","rest","createErrorInternal","_createError","_errorWithCustomMessage","auth","errorMap","_serverAppCurrentUserOperationNotSupportedError","fullParams","_errorFactory","_assert","debugFail","failure","debugAssert","_getCurrentUrl","_isHttpOrHttps","_getCurrentScheme","protocol","Delay","shortDelay","longDelay","isMobile","onLine","_emulatorUrl","emulator","startsWith","FetchProvider","fetchImpl","headersImpl","responseImpl","fetch","globalThis","Headers","Response","SERVER_ERROR_MAP","DEFAULT_API_TIMEOUT_MS","_addTidIfNecessary","tenantId","_performApiRequest","_performApiRequest2","_args104","customErrorMap","_performFetchWithErrorHandling","query","apiKey","_context103","_getAdditionalHeaders","headers","languageCode","_getFinalTarget","apiHost","referrerPolicy","_performFetchWithErrorHandling2","fetchFn","_canInitEmulator","_context105","networkTimeout","NetworkTimeout","race","response","clearNetworkTimeout","json","_makeTaggedError","ok","errorMessage","_errorMessage$split","serverErrorCode","serverErrorMessage","authError","_performSignInRequest","_performSignInRequest2","serverResponse","_args106","_context106","_serverResponse","apiScheme","_parseEnforcementState","enforcementStateStr","timer","errorParams","phoneNumber","_tokenResponse","isEnterprise","grecaptcha","enterprise","RecaptchaConfig","recaptchaKey","siteKey","recaptchaEnforcementState","providerStr","enforcementState","getProviderEnforcementState","getRecaptchaConfig","_getRecaptchaConfig","deleteAccount","_deleteAccount","getAccountInfo","_getAccountInfo","utcTimestampToDateString","utcTimestamp","toUTCString","_getIdTokenResult","user","userInternal","signInProvider","_args112","forceRefresh","_context112","getIdToken","_parseToken","authTime","secondsStringToMilliseconds","issuedAtTime","expirationTime","signInSecondFactor","seconds","algorithm","_tokenExpiresIn","parsedToken","_logoutIfInvalidated","_logoutIfInvalidated2","_args113","_context113","isUserInvalidated","currentUser","signOut","ProactiveRefresh","errorBackoff","isRunning","schedule","timerId","wasError","interval","stsTokenManager","getInterval","iteration","UserMetadata","createdAt","lastLoginAt","_initializeTime","lastSignInTime","creationTime","metadata","_reloadWithoutSaving","_reloadWithoutSaving2","_context114","idToken","users","coreAccount","_notifyReloadListener","newProviderData","providerUserInfo","extractProviderData","providerData","mergeProviderData","oldIsAnonymous","isAnonymous","newIsAnonymous","passwordHash","updates","localId","photoURL","photoUrl","emailVerified","_reload","_context115","_persistUserIfCurrent","_notifyListenersIfCurrent","newData","deduped","o","providerId","rawId","requestStsToken","_requestStsToken","refreshToken","_context117","_auth$config","tokenApiHost","_context116","accessToken","access_token","expiresIn","expires_in","refresh_token","revokeToken","_revokeToken","StsTokenManager","updateTokensAndExpiration","_args3","isExpired","refresh","oldToken","_yield$requestStsToke","expiresInSec","toJSON","manager","assertStringOrUndefined","UserImpl","opt","__rest","proactiveRefresh","getToken","getIdTokenResult","reload","userInfo","_copy","_assign","newUser","_clone","reloadListener","reloadUserInfo","_start","_stop","tokensRefreshed","_args6","updateFromServerResponse","_context7","clearRefreshToken","_redirectEventId","plainObjectTokenManager","fromJSON","idTokenResponse","_args8","updateFromIdToken","instanceCache","_getInstance","InMemoryPersistence","storage","_listener","inMemoryPersistence","_persistenceKeyName","PersistenceUserManager","persistence","userKey","fullUserKey","fullPersistenceKey","boundEventHandler","_onStorageEvent","_addListener","_set","_context14","blob","_fromJSON","_remove","newPersistence","_context15","getCurrentUser","removeCurrentUser","setCurrentUser","_removeListener","persistenceHierarchy","availablePersistences","selectedPersistence","userToMigrate","migrationHierarchy","_args18","_context18","_context16","_isAvailable","_shouldAllowMigration","_context17","_getBrowserName","_isIEMobile","_isFirefox","_isBlackBerry","_isWebOS","_isSafari","_isChromeIOS","_isAndroid","_isIOS","_isIOSStandalone","standalone","_isIE10","documentMode","_isMobileBrowser","_getClientVersion","clientPlatform","reportedPlatform","frameworks","reportedFrameworks","AuthMiddlewareQueue","onAbort","wrappedCallback","queue","nextUser","_context19","onAbortStack","beforeStateCallback","originalMessage","_getPasswordPolicy","_getPasswordPolicy2","_args119","PasswordPolicyImpl","responseOptions","customStrengthOptions","minPasswordLength","maxPasswordLength","containsLowercaseCharacter","containsLowercaseLetter","containsUppercaseCharacter","containsUppercaseLetter","containsNumericCharacter","containsNonAlphanumericCharacter","allowedNonAlphanumericCharacters","forceUpgradeOnSignin","schemaVersion","password","status","isValid","passwordPolicy","validatePasswordLengthOptions","validatePasswordCharacterOptions","meetsMinPasswordLength","meetsMaxPasswordLength","passwordChar","updatePasswordCharacterOptionsStatuses","AuthImpl","heartbeatServiceProvider","appCheckServiceProvider","operations","authStateSubscription","Subscription","idTokenSubscription","beforeStateQueue","appVerificationDisabledForTesting","clientVersion","sdkClientVersion","popupRedirectResolver","_popupRedirectResolver","_initializationPromise","_deleted","_context20","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","lastNotifiedUid","_isInitialized","_context21","assertedPersistence","_currentUser","_updateCurrentUser","_context22","_fromGetAccountInfoResponse","directlySetCurrentUser","_context23","authIdToken","initializeCurrentUserFromIdToken","previouslyStoredUser","futureCurrentUser","needsTocheckMiddleware","authDomain","getOrInitRedirectPersistenceManager","redirectUserEventId","redirectUser","storedUserEventId","tryRedirectSignIn","runMiddleware","_overrideRedirectResult","reloadAndSetCurrentUserOrClear","redirectResolver","_context24","_completeRedirectFn","_setRedirectUser","_context25","navigatorLanguage","languages","language","_getUserLanguage","userExtern","_context27","_args29","skipBeforeStateCallbacks","_context29","_context28","notifyAuthListeners","_context30","redirectPersistenceManager","_context31","setPersistence","_agentRecaptchaConfig","_tenantRecaptchaConfigs","_getPasswordPolicyInternal","_context32","_updatePasswordPolicy","EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION","validatePassword","_projectPasswordPolicy","_tenantPasswordPolicies","_context33","completed","registerStateListener","pushCallback","unsubscribe","onAuthStateChanged","_context34","tokenType","_context35","redirectManager","_context36","resolver","_redirectPersistence","_context38","_context40","isProactiveRefreshEnabled","_startProactiveRefresh","_stopProactiveRefresh","currentUid","subscription","isUnsubscribed","addObserver","_context41","action","framework","_getFrameworks","getHeartbeatsHeader","heartbeatsHeader","_getAppCheckToken","appCheckToken","_context43","appCheckTokenResult","_castAuth","externalJSProvider","loadJS","recaptchaV2Script","recaptchaEnterpriseScript","gapiScript","_loadJS","_recaptchaEnterpriseScriptUrl","_generateCallbackName","floor","random","FAKE_TOKEN","RecaptchaEnterpriseVerifier","authExtern","retrieveSiteKey","_retrieveSiteKey","retrieveRecaptchaToken","_args47","ready","execute","_context46","clientType","jsHelpers._recaptchaEnterpriseScriptUrl","jsHelpers\r\n                        ._loadJS","injectRecaptchaFields","_injectRecaptchaFields","verifier","captchaResponse","newRequest","_args120","captchaResp","_context120","verify","handleRecaptchaFlow","_handleRecaptchaFlow","authInstance","actionName","actionMethod","isProviderEnabled","_context122","requestWithRecaptcha","_context121","initializeAuth","initialOptions","getOptions","initialize","connectAuthEmulator","authInternal","disableWarnings","extractProtocol","authority","substr","hostAndPort","bracketedIPv6","parsePort","_hostAndPort$split2","extractHostAndPort","portStr","emulatorConfig","freeze","attachBanner","sty","innerText","width","color","margin","zIndex","textAlign","readyState","emitEmulatorWarning","protocolEnd","AuthCredential","signInMethod","_auth","_idToken","linkEmailPassword","_linkEmailPassword","signInWithPassword","_signInWithPassword","signInWithEmailLink","signInWithEmailLink$1","_signInWithEmailLink$","signInWithEmailLinkForLinking","_signInWithEmailLinkForLinking","EmailAuthCredential","_email","_password","_tenantId","_context48","returnSecureToken","oobCode","_context49","_getIdTokenResponse","_fromEmailAndPassword","_fromEmailAndCode","signInWithIdp","_signInWithIdp","OAuthCredential","pendingToken","nonce","buildRequest","autoCreate","requestUri","postBody","cred","oauthToken","oauthTokenSecret","sendPhoneVerificationCode","_sendPhoneVerificationCode","_signInWithPhoneNumber$","_linkWithPhoneNumber$","_context139","temporaryProof","VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","_verifyPhoneNumberForExisting","apiRequest","operation","PhoneAuthCredential","signInWithPhoneNumber$1","signInWithPhoneNumber","_makeVerificationRequest","linkWithPhoneNumber$1","linkWithPhoneNumber","verifyPhoneNumberForExisting","verificationId","verificationCode","sessionInfo","ActionCodeURL","actionLink","searchParams","parseMode","continueUrl","link","doubleDeepLink","iOSDeepLink","parseDeepLink","EmailAuthProvider","PROVIDER_ID","emailLink","actionCodeUrl","parseLink","FederatedAuthProvider","defaultLanguageCode","customOAuthParameters","customParameters","BaseOAuthProvider","scopes","scope","FacebookAuthProvider","_fromParams","FACEBOOK_SIGN_IN_METHOD","userCredential","credentialFromTaggedObject","tokenResponse","oauthAccessToken","credential","GoogleAuthProvider","addScope","GOOGLE_SIGN_IN_METHOD","oauthIdToken","GithubAuthProvider","GITHUB_SIGN_IN_METHOD","TwitterAuthProvider","TWITTER_SIGN_IN_METHOD","signUp","_signUp","UserCredentialImpl","operationType","userCred","_args50","_context50","_fromIdTokenResponse","providerIdForResponse","_context51","_updateTokensIfNecessary","MultiFactorError","_processCredentialSavingMfaContextIfNecessary","_getReauthenticationResolver","_fromErrorAndOperation","_link","_link$1","_link$","_args144","bypassAuthState","_context144","_linkToIdToken","_forOperation","_reauthenticate","_reauthenticate2","_args146","_context146","_signInWithCredential","_signInWithCredential2","_args147","_context147","signInWithCredential","_signInWithCredential3","recachePasswordPolicy","_recachePasswordPolicy","_context153","createUserWithEmailAndPassword","_createUserWithEmailAndPassword","_context160","signUpResponse","signInWithEmailAndPassword","onIdTokenChanged","beforeAuthStateChanged","startEnrollPhoneMfa","finalizeEnrollTotpMfa","STORAGE_AVAILABLE_KEY","BrowserPersistenceClass","storageRetriever","setItem","removeItem","getItem","BrowserLocalPersistence","_this23","localStorage","onStorageEvent","listeners","localCache","pollTimer","_iframeCannotSyncWebStorage","_isIframe","fallbackToPolling","oldValue","detachListener","stopPolling","safariLocalStorageNotSynced","storedValue","triggerListeners","_this24","notifyListeners","forAllChangedKeys","_oldValue","listener","setInterval","_this25","StorageEvent","clearInterval","startPolling","attachListener","size","_context58","_context59","_context60","browserLocalPersistence","BrowserSessionPersistence","sessionStorage","browserSessionPersistence","_allSettled","promises","_context61","fulfilled","reason","Receiver","eventTarget","handleEvent","_messageEvent$data","messageEvent","eventId","handlers","handlersMap","_context63","ports","postMessage","handler","origin","eventHandler","receivers","isListeningto","newInstance","_generateEventId","digits","Sender","messageChannel","port1","onMessage","completionTimer","_args64","timeout","MessageChannel","_context64","start","ackTimer","_this26","port2","finally","removeMessageHandler","_window","_setWindowLocation","_isWorker","_getActiveServiceWorker","_getActiveServiceWorker2","serviceWorker","_context172","registration","active","_getServiceWorkerController","controller","DB_NAME","DB_OBJECTSTORE_NAME","DB_DATA_KEYPATH","DBPromise","_this27","getObjectStore","isReadWrite","_deleteDatabase","toPromise","_openDatabase","keyPath","_context65","_putObject","_putObject2","getObject","_getObject","_context174","_deleteObject","IndexedDBLocalPersistence","_workerInitializationPromise","initializeServiceWorkerMessaging","_context66","op","numAttempts","_context67","_openDb","initializeReceiver","initializeSender","_subscribe","_origin","_context69","_this28","_poll","keyProcessed","_data","_context72","activeServiceWorker","sender","_send","results","serviceWorkerReceiverAvailable","_context73","_context74","write","pendingWrites","_context75","_withPendingWrite","_context76","_this29","_withRetries","notifyServiceWorker","_context78","_context79","_this30","_context81","getAllRequest","getAll","keysInResult","_step5$value","fbase_key","localKey","_this31","indexedDBLocalPersistence","startSignInPhoneMfa","finalizeSignInTotpMfa","jsHelpers._generateCallbackName","RECAPTCHA_VERIFIER_TYPE","_verifyPhoneNumber","_verifyPhoneNumber2","_context178","recaptchaToken","phoneInfoOptions","session","phoneEnrollmentInfo","phoneSessionInfo","mfaEnrollmentId","multiFactorHint","multiFactorUid","mfaPendingCredential","phoneSignInInfo","phoneResponseInfo","_yield$sendPhoneVerif","_reset","PhoneAuthProvider","phoneOptions","applicationVerifier","_fromVerification","_fromTokenResponse","_withDefaultResolver","resolverOverride","IdpCredential","_this39","_buildIdpRequest","sessionId","returnIdpCredential","_signIn","_reauth","_link2","_linkUser","AbstractPopupRedirectOperation","_this40","pendingPromise","_context88","eventManager","onExecution","registerConsumer","urlResponse","_context89","getIdpTask","unregisterAndCleanUp","unregisterConsumer","cleanUp","_POLL_WINDOW_CLOSE_TIMEOUT","PopupOperation","_this41","authWindow","pollId","currentPopupAction","cancel","_context90","_context91","_openPopup","associatedEvent","_originValidation","_this42","_isIframeWebStorageSupported","isSupported","pollUserCancellation","closed","_this43","redirectOutcomeMap","RedirectAction","_this44","readyOutcome","_context92","_getAndClearPendingRedirectStatus","_context93","_redirectUserForId","_getAndClearPendingRedirectStatus2","pendingRedirectKey","resolverPersistence","_context184","hasPendingRedirect","_getRedirectResult","_getRedirectResult3","resolverExtern","_args190","_context190","AuthEventManager","cachedEventUids","consumers","lastProcessedEventTime","authEventConsumer","queuedRedirectEvent","isEventForConsumer","sendToConsumer","saveEventToCache","hasEventBeenHandled","handled","consumer","_this45","hasHandledPotentialRedirect","isNullRedirectEvent","isRedirectEvent","onError","onAuthEvent","eventIdMatches","eventUid","_getProjectConfig","_getProjectConfig2","_args192","IP_ADDRESS_REGEX","HTTP_REGEX","_validateOrigin2","_context193","_yield$_getProjectCon","authorizedDomains","domain","matchDomain","expected","currentUrl","URL","hostname","ceUrl","escapedDomainPattern","NETWORK_TIMEOUT","resetUnloadedGapiModules","beacon","___jsl","H","hint","r","L","CP","loadGapi","loadGapiIframe","gapi","load","iframes","getContext","ontimeout","Iframe","cbName","js._generateCallbackName","js\r\n                ._loadJS","cachedGApiLoader","_loadGapi","PING_TIMEOUT","IFRAME_ATTRIBUTES","height","tabindex","EID_FROM_APIHOST","getIframeUrl","eid","fw","_openIframe","_openIframe2","_context195","gapiLoader._loadGapi","where","messageHandlersFilter","CROSS_ORIGIN_IFRAMES_FILTER","attributes","dontclear","iframe","clearTimerAndResolve","networkErrorTimer","_context194","restyle","setHideOnLeave","networkError","ping","BASE_POPUP_OPTIONS","resizable","statusbar","toolbar","TARGET_BLANK","FIREFOX_EMPTY_URL","AuthPopup","_open","availHeight","availWidth","scrollbars","optionsString","accum","openAsNewWindowIOS","newWin","click","createEvent","initMouseEvent","dispatchEvent","FIREBASE_APP_CHECK_FRAGMENT_ID","_getRedirectUrl","_getRedirectUrl2","authType","redirectUrl","additionalParams","setDefaultLanguage","getCustomParameters","getScopes","tid","paramsDict","appCheckTokenFragment","getHandlerBase","WEB_STORAGE_SUPPORT_KEY","BrowserPopupRedirectResolver","eventManagers","_context95","_context96","initAndGetManager","_this46","_context97","iframeEvent","authEvent","onEvent","send","originValidationPromises","_validateOrigin","browserPopupRedirectResolver","MultiFactorAssertionImpl","factorId","_finalizeEnroll","_finalizeSignIn","PhoneMultiFactorAssertionImpl","_this47","finalizeEnrollPhoneMfa","phoneVerificationInfo","finalizeSignInPhoneMfa","_fromCredential","TotpMultiFactorGenerator","oneTimePassword","TotpMultiFactorAssertionImpl","_fromSecret","enrollmentId","_fromEnrollmentId","mfaSession","_context98","totpEnrollmentInfo","TotpSecret","_fromStartTotpMfaEnrollmentResponse","otp","_this48","totpVerificationInfo","_makeTotpVerificationInfo","secretKey","hashingAlgorithm","codeLength","codeIntervalSeconds","enrollmentCompletionDeadline","accountName","issuer","useDefaults","_isEmptyString","totpSessionInfo","sharedSecretKey","verificationCodeLength","periodSec","finalizeEnrollmentTime","AuthInterop","internalListeners","assertAuthConfigured","_context101","updateProactiveRefresh","authIdTokenMaxAge","lastPostedIdToken","mintCookieFactory","_context102","idTokenResult","idTokenAge","getAuth","authTokenSyncPath","isSecureContext","authTokenSyncUrl","mintCookie","authEmulatorHost","onload","charset","getScriptParentElement","hierarchy","_updateErrorMap","_initializeWithPersistence","_initializeAuthInstance","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","getVersionForPlatform","setSDKVersion","DOMStorageWrapper","domStorage_","prefixedName_","storedVal","prefix_","MemoryStorage","cache_","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","firstLog_","enableLogging","logger_","persistent","varArgs","logWrapper","fatal","isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","splitStringBySize","segsize","dataSegs","each","doubleToIEEE754String","ln","bias","abs","pow","LN2","round","bits","hexByteString","hexByte","INTEGER_REGEXP_","intVal","exceptionGuard","stack","setTimeoutNonBlocking","time","Deno","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","addTokenListener","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","addAuthTokenListener","removeAuthTokenListener","EmulatorTokenProvider","PROTOCOL_VERSION","FORGE_DOMAIN_RE","WEBSOCKET","LONG_POLLING","RepoInfo","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","_host","_domain","internalHost","newHost","isCacheableHost","toURLString","repoInfoConnectionURL","repoInfo","connURL","isCustomHost","repoInfoNeedsQueryParam","pairs","StatsCollection","amount","counters_","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","responseNum","closeAfterResponse","onClose","currentResponseNum","requestNum","pendingResponses","toProcess","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","BrowserPollConnection","connId","applicationId","authToken","transportSessionId","lastSessionId","log_","stats_","urlFn","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","called","wrappedFn","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","everConnected_","sendNewPolls","closeAfter","pN","handleResponse","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","myDisconnFrame","shutdown_","dataStr","bytesSent","incrementCounter","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","display","bytesReceived","forceAllow_","forceDisallow_","Windows","UI","commandCB","onMessageCB","outstandingRequests","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","alive","textContent","myID","myPW","newRequest_","pendingSegs","theURL","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript","async","onreadystatechange","rstate","contentWindow","contentDocument","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","connectionURL_","device","platform","env","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","frames","totalFrames","fullMess","jsonMess","frameCount","handleNewFrameCount_","mess","resetKeepAlive","appendFrame_","remainingData","extractFrameCount_","sendString_","keepaliveTimer","isOldAndroid","oldAndroidMatch","isInMemoryStorage","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","ALL_TRANSPORTS","transport","globalTransportInitialized_","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","state_","transportManager_","start_","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","markConnectionHealthy","connectionCount","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","onSecondaryControl_","pendingDataMessages","proceedWithUpgrade_","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","handshakePayload","h","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","closeConnections_","ServerActions","pathString","onComplete","hash","stats","EventEmitter","allowedEvents_","listeners_","validateEventType_","eventData","getInitialEvent","et","OnlineMonitor","online_","trigger","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","newEmptyPath","pathGetFront","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","pathEquals","other","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","validationPathCheckValid","validationPath","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","getInstance","on","onVisible_","onOnline_","onResponse","curReqNum","sendRequest","initConnection_","outstandingGet","_path","q","_queryObject","sendGet_","currentHashFn","queryId","_queryIdentifier","listens","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","warnOnListenWarnings_","_this22","removeListen_","tryAuth","reduceReconnectDelayIfAdminCredential_","tryAppCheck","authMethod","requestData","onAuthRevoked_","onAppCheckRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","scheduleConnect_","online","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onRealtimeDisconnect_","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","_yield$Promise$all","_yield$Promise$all2","interrupt","delta","serverTimeOffset","listen","normalizedPathString","statusCode","explanation","notifyForInvalidToken","queries","clientName","reportStats","currentlyOnline","warnings","indexSpec","getIndex","indexPath","__EMPTY_NODE","NamedNode","Index","compare","oldNode","newNode","oldWrapped","newWrapped","MIN","KeyIndex","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","cmp","nodeStack_","LLRBNode","RED","SortedMap","EMPTY_NODE","inorderTraversal","reverseTraversal","min_","maxKey","insert","fixUp_","isRed_","moveRedLeft_","removeMin_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","blackDepth","check_","MAX_NODE","LLRBEmptyNode","comparator_","root_","BLACK","rightParent","minKey","resultGenerator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","newPriorityNode","childName","childNode","newChildNode","updatePriority","updateImmediateChild","front","updateChild","exportFormat","lazyHash_","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","equals","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","compareTo","PRIORITY_INDEX","LOG_2","Base12Num","num","current_","mask","bits_","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","nextBitIsOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","indexDefinition","existingChildren","newIndex","sawIndexedValue","getIterator","Wrap","getNext","isDefinedOn","getCompare","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","newChildren","ChildrenNode","children_","indexMap_","getImmediateChild","getChild","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","childHash","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","peek","getReverseIteratorFrom","maxPost","endPost","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","Default","MAX","setPriorityMaxNode","jsonLeaf","childData","childrenHavePriority","hinzeJsonObj","childSet","sortedChildSet","setNodeFromJSON","PathIndex","indexPath_","snap","aChild","extractChild","bChild","valueNode","ValueIndex","VALUE_INDEX","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","isIndexed","oldChild","hasChild","trackChildChange","withIndex","newSnap","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","startIsInclusive_","startAfterSet_","endIsInclusive_","endBeforeSet_","isWithinStart","getStartPost","isWithinEnd","getEndPost","filtered","updateFullNode","hasStart","startName","getIndexStartName","makePost","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","reverse_","withinEndPost","withinStartPost","compareRes","rangedFilter_","limit_","getLimit","isViewFromLeft","numChildren","getIndexedFilter","fullLimitUpdateChild_","hasNext","withinDirectionalStart","withinDirectionalEnd","getReverseIterator","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","getFirstChild","getLastChild","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","startSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","limitSet_","queryParamsToRestQueryStringParameters","queryParams","orderBy","qs","startParam","endParam","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","_this32","listens_","listenId","getListenId_","thisListen","queryStringParameters","restRequest_","_this33","_this34","_this35","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","sparseSnapshotTreeForEachTree","prefixPath","tree","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","newStats","last_","stat","StatsReporter","collection","server_","statsListener_","reportStats_","reportedStats","haveStatsToReport","_this36","statsToReport_","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","getPredecessorChildName","eventGeneratorMaterializeSingleChange","respondsTo","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","getNode","viewCacheGetCompleteServerSnap","EmptyChildren","ImmutableTree","relativePath","predicate","childExistingPathAndValue","findRootMostMatchingPathAndValue","toSet","newTree","setTree","fold_","pathSoFar","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach_","childPath","CompoundWrite","writeTree_","compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree","compoundWriteAddWrites","newWrite","compoundWriteRemoveWrite","empty","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeGetWrite","writeId","allWrites","record","writeTreeRemoveWrite","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","writesCache","completeCache","filterServerNode","accumulator","viewProcessorApplyUserOverwrite","isFiltered","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","foreach","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","filtersNodes","viewProcessorRevertUserWrite","ackPath","isCompleteForPath","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","getChanges","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","newEventChild","childChangePath","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","getCompleteChild","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor","View","initialViewCache","indexFilter","hasLimit","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","eventRegistrations_","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","existing","hasAnyCallback","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","indexedValueChanged","eventGeneratorGenerateEventsForChanges","SyncPoint","views","syncPointIsEmpty","syncPoint","syncPointApplyOperation","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","viewQueryId","_repo","syncPointGetQueryViews","syncPointGetCompleteServerCache","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","_iterator9","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","writeTreeAddOverwrite","pendingWriteTree_","syncTreeApplyOperationToSyncPoints_","syncTreeAckUserWrite","needToReevaluate","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","findOnPath","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeAddEventRegistration","skipSetupListener","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","foreachChild","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","operationForChild","childServerCache","childWritesCache","viewGetServerCache","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","errorForServerCode","splitIndex","fold","maybeChildSyncPoint","childMap","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","validateFirebaseData","hasDotValue","hasActualChild","validationPathPop","validatePathString","argumentName","errorPrefixFxn","validateUrl","parsedUrl","isValidRootPathString","EventQueue","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventLists_","eventQueueRaiseEventsForChangedPath","changedPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","recursionDepth_","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","Repo","forceRestClient_","appCheckProvider_","eventQueue_","transactionQueueTree_","repoStart","repo","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","persistentConnection_","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","addTokenChangeListener","refreshAuthToken","refreshAppCheckToken","statsReporter_","creatorFunction","statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","repoGenerateServerValues","dataUpdateCount","interceptServerDataCallback_","taggedChildren","raw","changeTree","fromObject","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","repoAbortTransactions","repoRunOnDisconnectEvents","updateSnapshot","repoGetNextWriteId","nextWriteId_","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","repoBuildTransactionQueue","allRun","repoSendTransactionQueue","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","currentOutputSnapshotResolved","unwatcher","_loop3","abortReason","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","_loop4","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodePath","queryString","_step9","segment","kv","_iterator10","decodeQuery","hostWithoutPort","dotInd","PUSH_CHARS","DataEvent","lastPushTime","lastRandChars","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","expDataSnapshot","previousChildName","hasCancelCallback","userCallback","QueryImpl","_orderByCalled","ReferenceImpl","sameRepo","samePath","sameQueryIdentifier","pathToUrlEncodedString","DataSnapshot","_node","_index","childRef","_this37","_checkNotDeleted","_root","callbackContext","ValueEventRegistration","cached","repoGetValue","getEventType","_this38","onCancel","onValue","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","repos","useRestClient","repoManagerApplyEmulatorSettings","tokenProvider","repoManagerDatabaseFromApp","authProvider","dbUrl","databaseURL","isEmulator","dbEmulatorHost","authTokenProvider","OWNER","appRepos","repoManagerCreateRepo","Database","_repoInternal","_instanceStarted","_rootInternal","repoManagerDeleteRepo","apiName","getDatabase","connectDatabaseEmulator","mockUserToken","simpleListen","echo","onEcho","setMultipleInstances","isObjectType","isNullOrUndefined","isDateObject","isCheckBoxInput","checked","names","getNodeParentName","cloneObject","isWeb","Blob","FileList","tempObject","prototypeCopy","isPlainObject","compact","isUndefined","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","React","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","_proxyFormState","formStateData","updateFormState","isEmptyObject","useSubscribe","current","subject","_names","formValues","isGlobal","isString","watch","fieldName","watchAll","tempPath","isKey","stringToPath","lastIndex","objValue","validateAllFieldCriteria","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isBlurEvent","watchName","iterateFieldsByAction","fieldsNames","_f","currentField","fieldArrayErrors","owner","defaultView","defaultResult","validResult","option","defaultReturn","previous","getValidateError","isMessage","isBoolean","validationData","isRegex","shouldUseNativeValidation","isFieldArray","_field$_f","maxLength","minLength","pattern","valueAsNumber","mount","inputRef","setCustomValidity","reportValidity","isRadio","isRadioInput","isCheckBox","isRadioOrCheckbox","isFileInput","isHTMLElement","appendErrorsCurry","appendErrors","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getCheckboxValue","getRadioValue","getValueAndMessage","maxOutput","minOutput","valueDate","valueAsDate","convertTimeToDate","toDateString","isTime","isWeek","exceedMin","valueNumber","maxLengthOutput","minLengthOutput","_getValueAndMessage","patternValue","isFunction","validateError","validationResult","validateField","unset","paths","childObject","updatePath","baseGet","isEmptyArray","_observers","object1","object2","isPrimitive","keys1","keys2","val1","val2","isConnected","markFieldsDirty","isParentNodeArray","objectHasFunction","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","setValueAs","getFieldValue","files","isMultipleSelect","selectedOptions","getFieldValueAs","_fields","criteriaMode","rule","schemaErrorLookup","foundError","isTouched","isSubmitted","reValidateMode","defaultOptions","shouldFocusError","createFormControl","delayErrorCallback","_formState","submitCount","isDirty","isLoading","isValidating","isSubmitting","isSubmitSuccessful","touchedFields","dirtyFields","validatingFields","_formValues","shouldUnregister","_state","unMount","_subjects","createSubject","validationModeBeforeSubmit","getValidationModes","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","_updateValid","shouldUpdateValid","_executeSchema","executeBuiltInValidation","_updateIsValidating","_updateFieldArray","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","argA","argB","unsetEmptyArray","getDirtyFields","_getDirty","updateErrors","_setErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","disabledField","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","delayError","updatedFormState","getResolverOptions","executeSchemaAndUpdateState","_yield$_executeSchema","shouldOnlyCheckValid","_name4","isFieldArrayRoot","fieldError","_args7","valid","updateFieldArrayRootError","_removeUnmounted","live","unregister","getValues","_getWatch","generateWatchOutput","_getFieldArray","fieldReference","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","setValues","fieldKey","setValue","cloneValue","isWatched","onChange","isFieldValueUpdated","getCurrentFieldValue","getEventValue","_updateIsFieldValueUpdated","shouldSkipValidation","hasValidation","skipValidation","watched","onBlur","_yield$_executeSchema2","previousErrorLookupResult","errorLookupResult","_focusInput","fieldNames","_args10","convertToArrayPayload","_context10","shouldFocus","getFieldState","clearErrors","inputName","setError","keepValue","keepError","keepDirty","keepTouched","keepIsValidating","keepDefaultValue","keepIsValid","_updateDisabledField","disabledIsDefined","progressive","getRuleValue","fieldRef","radioOrCheckbox","isNameInFieldArray","_focusError","_disableForm","requiredDisabledState","handleSubmit","onValid","onInvalid","onValidError","persist","_context11","_yield$_executeSchema3","resetField","keepStateOptions","updatedValues","cloneUpdatedValues","isEmptyResetValues","keepDefaultValues","keepValues","keepDirtyValues","_step10","form","closest","keepSubmitCount","keepIsSubmitted","keepErrors","keepIsSubmitSuccessful","setFocus","shouldSelect","select","_updateFormState","_resetDefaultValues","resetOptions","useForm","_formControl","_React$useState10","shouldRenderFormState","getProxyFormState"],"sourceRoot":""}