{"version":3,"file":"static/js/61.ffc08b07.chunk.js","mappings":"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","sources":["components/TeacherList/TeacherList.styled.js","components/TeacherList/TeacherList.js","components/Filter/Options.js","components/Filter/FilterForm.styled.js","components/Filter/FilterForm.js","components/helpers/FetchTeachers.js","Pages/Teachers/Teachers.js","components/database.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\npadding: ${p=>p.theme.spacing(6)};\n`;\n\nexport const ListContainer = styled.ul`\nlist-style-type: none;\n`;\n\nexport const Button = styled.button`\ndisplay: block;\nmargin: 0 auto;\nwidth: 183px;\nheight: 60px;\nborder-radius: 12px;\nborder: none;\nbackground-color: ${p=>p.theme.colors.yellow};\n\nfont-family: Roboto, sans-serif;  \nfont-size: 18px;\nfont-weight: 800;\nline-height: 1,56;\n\n\n&:hover {\n    background-color: ${p=>p.theme.colors.hover};\n  }\n\n`;","import { TeacherItem } from \"components/TeacherItem/TeacherItem\";\nimport { nanoid } from 'nanoid';\nimport {Container, ListContainer, Button} from './TeacherList.styled'\nimport { useState } from \"react\";\n\n\nexport const TeacherList =({teachers})=>{\n  const [countTecher, setCountTeacher]=useState(4)\nconst handleLoadMore = ()=>{\n  setCountTeacher(prevCount=>prevCount+4)\n}\n\n    return (\n        <Container>\n          <ListContainer>\n            {teachers.slice(0,countTecher).map(teacher =>(\n                <li key = {nanoid()}>\n                  \n                    <TeacherItem value={teacher}/>\n                </li>\n            ) ) }\n          </ListContainer> \n\n          {countTecher < teachers.length && <Button type=\"button\" onClick={handleLoadMore}>Load more</Button> }\n\n        </Container>\n\n    )\n}","export const languages= [\n    \"\",\n    'English',\n    'Spanish',\n    'Polish',\n    'French',\n    'German',\n    'Italian',\n    'Mandarin Chinese',\n    'Korean',\n    'Vietnamese',\n]\n\nexport const levels=[\n    \"\",\n    'A1 Beginner',\n    'A2 Elementary',\n    'B1 Intermediate',\n    'B2 Upper-Intermediate',\n    'C1 Advanced',\n    'C2 Proficient',\n]\n\nexport const prices=[ \"\", 10, 20, 30, 40]","import styled from \"styled-components\";\n\nexport const Form = styled.form`\ndisplay: flex;\ngap: ${p=>p.theme.spacing(5)};\n`\nexport const OptionContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: ${p=>p.theme.spacing(2)};\n`\nexport const Label = styled.label`\nfont-family: Roboto, sans-serif;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\ncolor: #8A8A89; \n`\nexport const Select = styled.select`\nfont-family: Roboto, sans-serif;\nfont-size: 18px;\nfont-weight: 600;\nline-height: 1,11;\nborder-radius: 14px;\nborder: none;\noutline: none;\ncolor: #121417;\n\n& option {\n    color: #8A8A89; \n    font-size: 18px;\n    font-weight: 600;\n    line-height: 1,11;\n}\n`\n","import{languages, levels, prices} from './Options';\nimport {Form, OptionContainer, Label, Select} from './FilterForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useDispatch} from 'react-redux';\nimport {addFilter} from '../../redux/filterSlice';\nimport { useState } from 'react';\n\n\nexport function FilterForm() {\n    const [statelanguage, setstateLanguages] = useState();\n    const [statelevel, setStateLevel] = useState();\n    const [stateprice, setStatePrices] = useState();\n\n      const getFilter = () => {\n        return {\n          languages: statelanguage,\n          levels: statelevel,\n          prices: stateprice,\n        };\n      };\n    \n    const dispatch = useDispatch();\n\n    const handlLanguages = (e)=>{\n        setstateLanguages(e.target.value)\n        return dispatch(addFilter({...getFilter(), languages: e.target.value}))\n    }\n\n    const handlLevel = (e)=>{\n        setStateLevel(e.target.value)\n        return dispatch(addFilter({...getFilter(), levels: e.target.value}))\n    }\n\n    const handlPrice = (e)=>{\n        setStatePrices(e.target.value)\n        return dispatch(addFilter({...getFilter(), prices: e.target.value}))\n    }\n\n    return(\n        <Form>\n            <OptionContainer>\n               <Label>Languages</Label>\n               <Select id = \"languages\" name=\"languages\" onChange={handlLanguages}>\n                {languages.map(language=>(\n                    <option key={nanoid()} value={language}>\n                        {language}\n                    </option>\n                )) }\n                </Select>                \n            </OptionContainer>\n\n            <OptionContainer>\n               <Label>Level of knowledge</Label>\n               <Select id = \"level\" name=\"level\" onChange={handlLevel}>\n                  {levels.map(level=>(\n                    <option key={nanoid()} value={level}>\n                        {level}\n                    </option>\n                  ))}                  \n                </Select>   \n           \n            </OptionContainer>\n\n            <OptionContainer>\n               <Label>Price</Label>\n               <Select id = \"price\" name=\"price\" onChange={handlPrice}>\n                  {prices.map(price=>(\n                    <option key={nanoid()} value={price}>\n                        {price}\n                    </option>\n                  ) )}\n               </Select>                \n            </OptionContainer>\n\n        </Form>\n\n    )\n\n}","import { database } from \"components/database\";\nimport { ref, get} from 'firebase/database';\n\n\nexport const fetchTeachers = async ({setTeachers}) => {\n    try {\n      const dbRef = ref(database, '/');\n      const data = await get(dbRef);\n\n      if (data.exists()) {\n        setTeachers(data.val());\n      }\n    } catch (error) {\n      console.error('Loading error', error.message);\n    }\n  };\n\n","import {useEffect, useState } from 'react';\nimport { TeacherList } from \"../../components/TeacherList/TeacherList\";\nimport {FilterForm} from '../../components/Filter/FilterForm';\nimport { fetchTeachers} from 'components/helpers/FetchTeachers';\nimport {selectFilter} from '../../redux/selects.js';\nimport { useSelector } from 'react-redux';\n\n\n\nexport default function Teachers (){\n \n const [teachers, setTeachers] = useState([]);\n const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    fetchTeachers({setTeachers});\n    \n  }, []);\n\n  const filteredTeachers = teachers.filter(teacher => {\n    const { languages, levels, prices } = filter;\n\n    if (!languages && !levels && !prices) {\n      return true;\n    }\n\n    const languageFilter = !languages || teacher.languages.includes(languages);\n    const levelFilter = !levels || teacher.levels.includes(levels);\n    const priceFilter = !prices || teacher.price_per_hour <= prices;\n    return languageFilter && levelFilter && priceFilter;\n  });\n \n\n    return(\n      <>\n        <FilterForm/>\n\n         {filter.language === '' &&\n          filter.level === '' &&\n          filter.price === '' \n          ? \n          (\n            <TeacherList teachers={teachers}  />\n          ) : (\n            <>\n            {filteredTeachers.length === 0 \n            ? \n            (\n                <h2>No teachers match the criteria</h2>\n              ) : (\n                <TeacherList\n                  teachers={filteredTeachers}                 \n                />\n              )}\n            </>\n          )}\n      </>\n      \n    )\n}","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getDatabase } from 'firebase/database';\nconst apiKey = process.env.REACT_APP_FIREBASE_API_KEY;\n\n\nconst firebaseConfig = {\n  apiKey: apiKey,\n  authDomain: \"learnlingvo-fb7e1.firebaseapp.com\",\n  databaseURL: \"https://learnlingvo-fb7e1-default-rtdb.europe-west1.firebasedatabase.app/\",\n  projectId: \"learnlingvo-fb7e1\",\n  storageBucket: \"learnlingvo-fb7e1.appspot.com\",\n  messagingSenderId: \"576098443295\",\n  appId: \"1:576098443295:web:fe35ff740f67b23418752a\",\n  measurementId: \"G-DD4PDXLMXL\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const database = getDatabase();"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","ListContainer","_templateObject2","Button","_templateObject3","colors","yellow","hover","TeacherList","_ref","teachers","_useState","useState","_useState2","_slicedToArray","countTecher","setCountTeacher","_jsxs","children","_jsx","slice","map","teacher","TeacherItem","value","nanoid","length","type","onClick","prevCount","languages","levels","prices","Form","OptionContainer","Label","Select","_templateObject4","FilterForm","statelanguage","setstateLanguages","_useState3","_useState4","statelevel","setStateLevel","_useState5","_useState6","stateprice","setStatePrices","getFilter","dispatch","useDispatch","id","name","onChange","e","target","addFilter","_objectSpread","language","level","price","fetchTeachers","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","setTeachers","dbRef","data","_context","prev","next","ref","database","get","sent","exists","val","t0","console","error","message","stop","_x","apply","arguments","Teachers","filter","useSelector","selectFilter","useEffect","filteredTeachers","languageFilter","includes","levelFilter","priceFilter","price_per_hour","_Fragment","firebaseConfig","apiKey","process","REACT_APP_FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","auth","getAuth","getDatabase"],"sourceRoot":""}